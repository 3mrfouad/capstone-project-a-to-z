{
	"info": {
		"_postman_id": "5ae339ba-ea73-49ae-bb72-e07bbb6be9dd",
		"name": "WebAPI End Points Testing",
		"description": "Capstone project\r\nTECHCareers - Cohort 4.2\r\n2020/2021\r\n\r\nWebAPI End Points Testing \r\nBefore Integration with Front end\r\nAs of 2020-11-26",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "CohortController",
			"item": [
				{
					"name": "/application/CreateCohort",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateCohort?name=Cohort4.3&modeOfTeaching=Inclass&startDate=2021/01/04&endDate=2021/04/30&city=Edmonton&capacity",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateCohort"
							],
							"query": [
								{
									"key": "name",
									"value": "Cohort4.3"
								},
								{
									"key": "modeOfTeaching",
									"value": "Inclass"
								},
								{
									"key": "startDate",
									"value": "2021/01/04"
								},
								{
									"key": "endDate",
									"value": "2021/04/30"
								},
								{
									"key": "city",
									"value": "Edmonton"
								},
								{
									"key": "capacity",
									"value": null
								}
							]
						},
						"description": "Create Cohort with all parameters"
					},
					"response": []
				},
				{
					"name": "/application/CreateCohort",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateCohort?name&modeOfTeaching&startDate&endDate&city",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateCohort"
							],
							"query": [
								{
									"key": "name",
									"value": null
								},
								{
									"key": "modeOfTeaching",
									"value": null
								},
								{
									"key": "startDate",
									"value": null
								},
								{
									"key": "endDate",
									"value": null
								},
								{
									"key": "city",
									"value": null
								}
							]
						},
						"description": "Create Cohort with No Seed Data"
					},
					"response": []
				},
				{
					"name": "/application/GetCohorts",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/GetCohorts",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"GetCohorts"
							]
						},
						"description": "/application/GetCohorts With NO database"
					},
					"response": []
				},
				{
					"name": "/application/CreateCohort",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateCohort?name=Cohort4.2&modeOfTeaching&startDate&endDate&city",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateCohort"
							],
							"query": [
								{
									"key": "name",
									"value": "Cohort4.2"
								},
								{
									"key": "modeOfTeaching",
									"value": null
								},
								{
									"key": "startDate",
									"value": null
								},
								{
									"key": "endDate",
									"value": null
								},
								{
									"key": "city",
									"value": null
								}
							]
						},
						"description": "/application/CreateCohort with some parameters"
					},
					"response": []
				},
				{
					"name": "/application/CreateCohort",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateCohort",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateCohort"
							],
							"query": [
								{
									"key": "name",
									"value": null,
									"disabled": true
								},
								{
									"key": "modeOfTeaching",
									"value": null,
									"disabled": true
								},
								{
									"key": "startDate",
									"value": null,
									"disabled": true
								},
								{
									"key": "endDate",
									"value": null,
									"disabled": true
								},
								{
									"key": "city",
									"value": null,
									"disabled": true
								}
							]
						},
						"description": "/application/CreateCohort with no parameters"
					},
					"response": []
				},
				{
					"name": "/application/CreateCohort",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateCohort?name=&modeOfTeaching=&startDate=&endDate=&city=&capacity",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateCohort"
							],
							"query": [
								{
									"key": "name",
									"value": "",
									"description": "Error(s) During CreateCohort: name is null. (Parameter 'name'), modeOfTeaching is null. (Parameter 'modeOfTeaching'), startDate is null. (Parameter 'startDate'), endDate is null. (Parameter 'endDate'), city is null. (Parameter 'city')"
								},
								{
									"key": "modeOfTeaching",
									"value": ""
								},
								{
									"key": "startDate",
									"value": ""
								},
								{
									"key": "endDate",
									"value": ""
								},
								{
									"key": "city",
									"value": ""
								},
								{
									"key": "capacity",
									"value": null
								}
							]
						},
						"description": "/application/CreateCohort with Null Values"
					},
					"response": []
				},
				{
					"name": "/application/CreateCohort",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateCohort?name=                                     &modeOfTeaching=                                                    &startDate=                   &endDate=                                    &city=                                            &capacity=                                   ",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateCohort"
							],
							"query": [
								{
									"key": "name",
									"value": "                                     "
								},
								{
									"key": "modeOfTeaching",
									"value": "                                                    "
								},
								{
									"key": "startDate",
									"value": "                   "
								},
								{
									"key": "endDate",
									"value": "                                    "
								},
								{
									"key": "city",
									"value": "                                            "
								},
								{
									"key": "capacity",
									"value": "                                   "
								}
							]
						},
						"description": "/application/CreateCohort just whitespaces for Not Null parameters"
					},
					"response": []
				},
				{
					"name": "/application/CreateCohort",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateCohort?name=                            Cohort4.3                 &modeOfTeaching=Inclass                                       &startDate=2020/01/04&endDate=2020/04/30&city=Edmonton&capacity=30",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateCohort"
							],
							"query": [
								{
									"key": "name",
									"value": "                            Cohort4.3                 "
								},
								{
									"key": "modeOfTeaching",
									"value": "Inclass                                       "
								},
								{
									"key": "startDate",
									"value": "2020/01/04"
								},
								{
									"key": "endDate",
									"value": "2020/04/30"
								},
								{
									"key": "city",
									"value": "Edmonton"
								},
								{
									"key": "capacity",
									"value": "30"
								}
							]
						},
						"description": "/application/CreateCohort without Trim"
					},
					"response": []
				},
				{
					"name": "/application/CreateCohort",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateCohort?name=                            Cohort4.4                 &modeOfTeaching=Inclass   123333                                       &startDate=2020/01/04 111444&endDate=30/04/2020&city=Edmonton  1233 &capacity=test",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateCohort"
							],
							"query": [
								{
									"key": "name",
									"value": "                            Cohort4.4                 "
								},
								{
									"key": "modeOfTeaching",
									"value": "Inclass   123333                                       "
								},
								{
									"key": "startDate",
									"value": "2020/01/04 111444"
								},
								{
									"key": "endDate",
									"value": "30/04/2020"
								},
								{
									"key": "city",
									"value": "Edmonton  1233 "
								},
								{
									"key": "capacity",
									"value": "test"
								}
							]
						},
						"description": "/application/CreateCohort Invalid Datatype"
					},
					"response": []
				},
				{
					"name": "/application/CreateCohort",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateCohort?name=                            Cohort4.5                 &modeOfTeaching=Inclass   123333                                       &startDate=2020/01/04&endDate=2020/04/01&city=Edmonton&capacity=",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateCohort"
							],
							"query": [
								{
									"key": "name",
									"value": "                            Cohort4.5                 "
								},
								{
									"key": "modeOfTeaching",
									"value": "Inclass   123333                                       "
								},
								{
									"key": "startDate",
									"value": "2020/01/04"
								},
								{
									"key": "endDate",
									"value": "2020/04/01"
								},
								{
									"key": "city",
									"value": "Edmonton"
								},
								{
									"key": "capacity",
									"value": ""
								}
							]
						},
						"description": "/application/CreateCohort with no param for nullable fields"
					},
					"response": []
				},
				{
					"name": "/application/CreateCohort",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateCohort?name=    coHORT4.0&modeOfTeaching=INCLASS                                       &startDate=2020/01/04&endDate=2020/04/01&city=EDmoNTOn&capacity=",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateCohort"
							],
							"query": [
								{
									"key": "name",
									"value": "    coHORT4.0"
								},
								{
									"key": "modeOfTeaching",
									"value": "INCLASS                                       "
								},
								{
									"key": "startDate",
									"value": "2020/01/04"
								},
								{
									"key": "endDate",
									"value": "2020/04/01"
								},
								{
									"key": "city",
									"value": "EDmoNTOn"
								},
								{
									"key": "capacity",
									"value": ""
								}
							]
						},
						"description": "/application/CreateCohort Case Insencitivity"
					},
					"response": []
				},
				{
					"name": "/application/CreateCohort",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateCohort?name=                            Cohort 4.7 &modeOfTeaching=RemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemote&startDate=2020/01/04&endDate=2020/04/01&city=CalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgary&capacity=55.00",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateCohort"
							],
							"query": [
								{
									"key": "name",
									"value": "                            Cohort 4.7 "
								},
								{
									"key": "modeOfTeaching",
									"value": "RemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemoteRemote"
								},
								{
									"key": "startDate",
									"value": "2020/01/04"
								},
								{
									"key": "endDate",
									"value": "2020/04/01"
								},
								{
									"key": "city",
									"value": "Calgary",
									"disabled": true
								},
								{
									"key": "city",
									"value": "CalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgaryCalgary"
								},
								{
									"key": "capacity",
									"value": "55.00"
								}
							]
						},
						"description": "/application/CreateCohort with DB size exceeding"
					},
					"response": []
				},
				{
					"name": "/application/CreateCohort",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateCohort?name=                            COHORT4.6                 &modeOfTeaching=Inclass   123333                                       &startDate=2020/01/04&endDate=2020/04/01&city=CALGARY&capacity=40",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateCohort"
							],
							"query": [
								{
									"key": "name",
									"value": "                            COHORT4.6                 "
								},
								{
									"key": "modeOfTeaching",
									"value": "Inclass   123333                                       "
								},
								{
									"key": "startDate",
									"value": "2020/01/04"
								},
								{
									"key": "endDate",
									"value": "2020/04/01"
								},
								{
									"key": "city",
									"value": "CALGARY"
								},
								{
									"key": "capacity",
									"value": "40"
								}
							]
						},
						"description": "/application/CreateCohort FK constraint check\r\nAPI Create action with none existing FK refrential"
					},
					"response": []
				},
				{
					"name": "/application/CreateCohort",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateCohort?name=                            COHORT4.6                 &modeOfTeaching=Inclass   123333                                       &startDate=2020/01/04&endDate=2020/04/01&city=CALGARY&capacity=40",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateCohort"
							],
							"query": [
								{
									"key": "name",
									"value": "                            COHORT4.6                 "
								},
								{
									"key": "modeOfTeaching",
									"value": "Inclass   123333                                       "
								},
								{
									"key": "startDate",
									"value": "2020/01/04"
								},
								{
									"key": "endDate",
									"value": "2020/04/01"
								},
								{
									"key": "city",
									"value": "CALGARY"
								},
								{
									"key": "capacity",
									"value": "40"
								}
							]
						},
						"description": "Api call, duplicate check by name"
					},
					"response": []
				},
				{
					"name": "/application/CreateCohort",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateCohort?name=                            COHORT4.7                 &modeOfTeaching=Inclass   123333                                       &startDate=2020/01/04&endDate=2020/04/01&city=CALGARY&capacity=40.999999",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateCohort"
							],
							"query": [
								{
									"key": "name",
									"value": "                            COHORT4.7                 "
								},
								{
									"key": "modeOfTeaching",
									"value": "Inclass   123333                                       "
								},
								{
									"key": "startDate",
									"value": "2020/01/04"
								},
								{
									"key": "endDate",
									"value": "2020/04/01"
								},
								{
									"key": "city",
									"value": "CALGARY"
								},
								{
									"key": "capacity",
									"value": "40.999999"
								}
							]
						},
						"description": "/application/CreateCohort Numeric values out of range  i.e., int and float datatypes"
					},
					"response": []
				},
				{
					"name": "/application/CreateCohort",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateCohort?name=                            COHORT4.7               &modeOfTeaching=Inclass   123333                                       &startDate=2020/12/01&endDate=2020/04/01&city=CALGARY&capacity=40\n",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateCohort"
							],
							"query": [
								{
									"key": "name",
									"value": "                            COHORT4.7               "
								},
								{
									"key": "modeOfTeaching",
									"value": "Inclass   123333                                       "
								},
								{
									"key": "startDate",
									"value": "2020/12/01"
								},
								{
									"key": "endDate",
									"value": "2020/04/01"
								},
								{
									"key": "city",
									"value": "CALGARY"
								},
								{
									"key": "capacity",
									"value": "40\n"
								}
							]
						},
						"description": "/application/CreateCohort End date is older than start date"
					},
					"response": []
				},
				{
					"name": "/application/CreateCohort",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateCohort?name=                            COHORT4.8                 &modeOfTeaching=Inclass   123333                                       &startDate=2020/01/04&endDate=2020/04/01&city=CALGARY&capacity=40",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateCohort"
							],
							"query": [
								{
									"key": "name",
									"value": "                            COHORT4.8                 "
								},
								{
									"key": "modeOfTeaching",
									"value": "Inclass   123333                                       "
								},
								{
									"key": "startDate",
									"value": "2020/01/04"
								},
								{
									"key": "endDate",
									"value": "2020/04/01"
								},
								{
									"key": "city",
									"value": "CALGARY"
								},
								{
									"key": "capacity",
									"value": "40"
								}
							]
						},
						"description": "/application/CreateCohort Api call with wrong api call type, all parameters provided"
					},
					"response": []
				},
				{
					"name": "/application/UpdateCohort",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateCohort?cohortId=1&name=Cohort4.1&startDate=2020/06/01&endDate=2020/07/04&city=Regina&capacity=50&modeOfTeaching=online",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateCohort"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "1"
								},
								{
									"key": "name",
									"value": "Cohort4.1"
								},
								{
									"key": "startDate",
									"value": "2020/06/01"
								},
								{
									"key": "endDate",
									"value": "2020/07/04"
								},
								{
									"key": "city",
									"value": "Regina"
								},
								{
									"key": "capacity",
									"value": "50"
								},
								{
									"key": "modeOfTeaching",
									"value": "online"
								}
							]
						},
						"description": "/application/UpdateCohort Api call with all valid parameters"
					},
					"response": []
				},
				{
					"name": "/application/UpdateCohort",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateCohort?cohortId=1&name=Cohort 4.0&startDate=2020/06/01&endDate=2020/07/04&city=Calgary&capacity=50&modeOfTeaching=online",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateCohort"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "1"
								},
								{
									"key": "name",
									"value": "Cohort 4.0"
								},
								{
									"key": "startDate",
									"value": "2020/06/01"
								},
								{
									"key": "endDate",
									"value": "2020/07/04"
								},
								{
									"key": "city",
									"value": "Calgary"
								},
								{
									"key": "capacity",
									"value": "50"
								},
								{
									"key": "modeOfTeaching",
									"value": "online"
								}
							]
						},
						"description": "/application/UpdateCohort Api call with wrong api call type, all parameters provided"
					},
					"response": []
				},
				{
					"name": "/application/UpdateCohort",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateCohort?cohortId=1&name=Cohort 4.0&startDate=2020/06/01&city=Calgary",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateCohort"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "1"
								},
								{
									"key": "name",
									"value": "Cohort 4.0"
								},
								{
									"key": "startDate",
									"value": "2020/06/01"
								},
								{
									"key": "endDate",
									"value": "2020/07/04",
									"disabled": true
								},
								{
									"key": "city",
									"value": "Calgary"
								},
								{
									"key": "capacity",
									"value": "50",
									"disabled": true
								},
								{
									"key": "modeOfTeaching",
									"value": "online",
									"disabled": true
								}
							]
						},
						"description": "/application/UpdateCohort Api call with some parameters"
					},
					"response": []
				},
				{
					"name": "/application/UpdateCohort",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dcd7d60a-50c9-4fca-889c-c0a71367f3be",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateCohort?cohortId=&name=&startDate=&city=&endDate=&capacity&modeOfTeaching=",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateCohort"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "",
									"description": "Error(s) During UpdateCohort: cohortId is null. (Parameter 'cohortId'), name is null. (Parameter 'name'), modeOfTeaching is null. (Parameter 'modeOfTeaching'), startDate is null. (Parameter 'startDate'), endDate is null. (Parameter 'endDate'), city is null. (Parameter 'city')"
								},
								{
									"key": "name",
									"value": ""
								},
								{
									"key": "startDate",
									"value": ""
								},
								{
									"key": "city",
									"value": ""
								},
								{
									"key": "endDate",
									"value": ""
								},
								{
									"key": "capacity",
									"value": null
								},
								{
									"key": "modeOfTeaching",
									"value": ""
								}
							]
						},
						"description": "/application/UpdateCohort Api call all parameters with null values"
					},
					"response": []
				},
				{
					"name": "/application/UpdateCohort",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateCohort?cohortId=1&name=                                                          &startDate=                                          &endDate=                                               &city=                                                              &capacity=                                               &modeOfTeaching=                                     ",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateCohort"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "1"
								},
								{
									"key": "name",
									"value": "                                                          "
								},
								{
									"key": "startDate",
									"value": "                                          "
								},
								{
									"key": "endDate",
									"value": "                                               "
								},
								{
									"key": "city",
									"value": "                                                              "
								},
								{
									"key": "capacity",
									"value": "                                               "
								},
								{
									"key": "modeOfTeaching",
									"value": "                                     "
								}
							]
						},
						"description": "/application/UpdateCohort Api call with just whitespaces for Not Null Parameters no data in it \"\""
					},
					"response": []
				},
				{
					"name": "/application/UpdateCohort",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateCohort?cohortId=1&name=               Cohort 4.0&startDate=2020/06/01&endDate=2020/07/04&city=                    Calgary&capacity=50     &modeOfTeaching=                online",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateCohort"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "1"
								},
								{
									"key": "name",
									"value": "               Cohort 4.0"
								},
								{
									"key": "startDate",
									"value": "2020/06/01"
								},
								{
									"key": "endDate",
									"value": "2020/07/04"
								},
								{
									"key": "city",
									"value": "                    Calgary"
								},
								{
									"key": "capacity",
									"value": "50     "
								},
								{
									"key": "modeOfTeaching",
									"value": "                online"
								}
							]
						},
						"description": "/application/UpdateCohort /application/UpdateCohort"
					},
					"response": []
				},
				{
					"name": "/application/UpdateCohort",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateCohort?cohortId=1&name=Cohort 4.0&startDate=2020/06/01datetest&endDate=2020/07/04datetest&city=Calgary&capacity=50stringtest&modeOfTeaching=online\n",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateCohort"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "1"
								},
								{
									"key": "name",
									"value": "Cohort 4.0"
								},
								{
									"key": "startDate",
									"value": "2020/06/01datetest"
								},
								{
									"key": "endDate",
									"value": "2020/07/04datetest"
								},
								{
									"key": "city",
									"value": "Calgary"
								},
								{
									"key": "capacity",
									"value": "50stringtest"
								},
								{
									"key": "modeOfTeaching",
									"value": "online\n"
								}
							]
						},
						"description": "/application/UpdateCohort Api call with invalid datatype (parsing)"
					},
					"response": []
				},
				{
					"name": "/application/UpdateCohort",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateCohort?cohortId=1&name=Cohort 4.8&startDate=2020/06/01&endDate=2020/07/04&city=eDMonTON&capacity=50&modeOfTeaching=inClaSS\n",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateCohort"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "1"
								},
								{
									"key": "name",
									"value": "Cohort 4.8"
								},
								{
									"key": "startDate",
									"value": "2020/06/01"
								},
								{
									"key": "endDate",
									"value": "2020/07/04"
								},
								{
									"key": "city",
									"value": "eDMonTON"
								},
								{
									"key": "capacity",
									"value": "50"
								},
								{
									"key": "modeOfTeaching",
									"value": "inClaSS\n"
								}
							]
						},
						"description": "/application/UpdateCohort Api call Api call to check case insensitivity"
					},
					"response": []
				},
				{
					"name": "/application/UpdateCohort",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateCohort?cohortId=1&name=Cohort 4.0&startDate=2020/06/01&endDate=2020/07/04&city=Calgary&capacity=&modeOfTeaching=online",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateCohort"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "1"
								},
								{
									"key": "name",
									"value": "Cohort 4.0"
								},
								{
									"key": "startDate",
									"value": "2020/06/01"
								},
								{
									"key": "endDate",
									"value": "2020/07/04"
								},
								{
									"key": "city",
									"value": "Calgary"
								},
								{
									"key": "capacity",
									"value": ""
								},
								{
									"key": "modeOfTeaching",
									"value": "online"
								}
							]
						},
						"description": "/application/UpdateCohort Api call with no param for nullable fileds"
					},
					"response": []
				},
				{
					"name": "/application/UpdateCohort",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateCohort?cohortId=12222222222222&name=Cohort 4.0&startDate=2020/06/01&endDate=2020/07/04&city=Calgary&capacity=502222222222222222&modeOfTeaching=onlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlinevv",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateCohort"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "12222222222222"
								},
								{
									"key": "name",
									"value": "Cohort 4.0"
								},
								{
									"key": "startDate",
									"value": "2020/06/01"
								},
								{
									"key": "endDate",
									"value": "2020/07/04"
								},
								{
									"key": "city",
									"value": "Calgary"
								},
								{
									"key": "capacity",
									"value": "502222222222222222"
								},
								{
									"key": "modeOfTeaching",
									"value": "onlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlineonlinevv"
								}
							]
						},
						"description": "/application/UpdateCohort Api call with param exceeding the size"
					},
					"response": []
				},
				{
					"name": "/application/UpdateCohort",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateCohort?cohortId=6&name=Cohort 4.0&startDate=2020/06/01&city=Calgary",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateCohort"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "6"
								},
								{
									"key": "name",
									"value": "Cohort 4.0"
								},
								{
									"key": "startDate",
									"value": "2020/06/01"
								},
								{
									"key": "city",
									"value": "Calgary"
								}
							]
						},
						"description": "/application/UpdateCohort Api call, FK constraint check"
					},
					"response": []
				},
				{
					"name": "/application/UpdateCohort",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateCohort?cohortId=5&name=Cohort 4.0&startDate=2020/06/01&endDate=2020/07/04&city=Calgary&capacity=50&modeOfTeaching=online",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateCohort"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "5"
								},
								{
									"key": "name",
									"value": "Cohort 4.0"
								},
								{
									"key": "startDate",
									"value": "2020/06/01"
								},
								{
									"key": "endDate",
									"value": "2020/07/04"
								},
								{
									"key": "city",
									"value": "Calgary"
								},
								{
									"key": "capacity",
									"value": "50"
								},
								{
									"key": "modeOfTeaching",
									"value": "online"
								}
							]
						},
						"description": "/application/UpdateCohort Api call, FK constraint check Update with archived existing FK refrential"
					},
					"response": []
				},
				{
					"name": "/application/UpdateCohort",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateCohort?cohortId=5&name=Cohort 4.0&startDate=2020/06/01&endDate=2020/07/04&city=Calgary&capacity=100&modeOfTeaching=online",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateCohort"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "5"
								},
								{
									"key": "name",
									"value": "Cohort 4.0"
								},
								{
									"key": "startDate",
									"value": "2020/06/01"
								},
								{
									"key": "endDate",
									"value": "2020/07/04"
								},
								{
									"key": "city",
									"value": "Calgary"
								},
								{
									"key": "capacity",
									"value": "100"
								},
								{
									"key": "modeOfTeaching",
									"value": "online"
								}
							]
						},
						"description": "/application/UpdateCohort Api call to update archived record"
					},
					"response": []
				},
				{
					"name": "/application/UpdateCohort",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateCohort?cohortId=1&name=Cohort 4.0&startDate=2020/06/01&endDate=2020/07/04&city=Calgary&capacity=50&modeOfTeaching=online",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateCohort"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "1"
								},
								{
									"key": "name",
									"value": "Cohort 4.0"
								},
								{
									"key": "startDate",
									"value": "2020/06/01"
								},
								{
									"key": "endDate",
									"value": "2020/07/04"
								},
								{
									"key": "city",
									"value": "Calgary"
								},
								{
									"key": "capacity",
									"value": "50"
								},
								{
									"key": "modeOfTeaching",
									"value": "online"
								}
							]
						},
						"description": "/application/UpdateCohort Api call, duplicate check by id"
					},
					"response": []
				},
				{
					"name": "/application/UpdateCohort",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateCohort?cohortId=2&name=Cohort 4.0&startDate=2020/06/01stringtest&endDate=2020/07/04stringtest&city=Calgary&capacity=100string&modeOfTeaching=online",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateCohort"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "2"
								},
								{
									"key": "name",
									"value": "Cohort 4.0"
								},
								{
									"key": "startDate",
									"value": "2020/06/01stringtest"
								},
								{
									"key": "endDate",
									"value": "2020/07/04stringtest"
								},
								{
									"key": "city",
									"value": "Calgary"
								},
								{
									"key": "capacity",
									"value": "100string"
								},
								{
									"key": "modeOfTeaching",
									"value": "online"
								}
							]
						},
						"description": "/application/UpdateCohort Numeric values out of range  i.e., int and float datatypes"
					},
					"response": []
				},
				{
					"name": "/application/UpdateCohort",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateCohort?cohortId=1&name=Cohort 4.0&startDate=2020/07/15&endDate=2020/07/04&city=Calgary&capacity=100&modeOfTeaching=online",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateCohort"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "1"
								},
								{
									"key": "name",
									"value": "Cohort 4.0"
								},
								{
									"key": "startDate",
									"value": "2020/07/15"
								},
								{
									"key": "endDate",
									"value": "2020/07/04"
								},
								{
									"key": "city",
									"value": "Calgary"
								},
								{
									"key": "capacity",
									"value": "100"
								},
								{
									"key": "modeOfTeaching",
									"value": "online"
								}
							]
						},
						"description": "/application/UpdateCohort End date is older than start date"
					},
					"response": []
				},
				{
					"name": "/application/UpdateCohort",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": ""
						},
						"description": "/application/UpdateCohort Api call with wrong api call type, all parameters provided"
					},
					"response": []
				},
				{
					"name": "/application/GetCohort",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/GetCohort",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"GetCohort"
							]
						},
						"description": "/application/GetCohort Api call with no parameters"
					},
					"response": []
				},
				{
					"name": "/application/GetCohort",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/GetCohort?cohortId=1",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"GetCohort"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "1"
								}
							]
						},
						"description": "/application/GetCohort Api call with all parameters"
					},
					"response": []
				},
				{
					"name": "/application/GetCohort",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/GetCohort?cohortId=",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"GetCohort"
							],
							"query": [
								{
									"key": "cohortId",
									"value": ""
								}
							]
						},
						"description": "/application/GetCohort Api call all parameters with null values"
					},
					"response": []
				},
				{
					"name": "/application/GetCohort",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/GetCohort?cohortId=            2",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"GetCohort"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "            2"
								}
							]
						},
						"description": "/application/GetCohort Api call without trim"
					},
					"response": []
				},
				{
					"name": "/application/GetCohort",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/GetCohort?cohortId=string",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"GetCohort"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "string"
								}
							]
						},
						"description": "/application/GetCohort Api call with invalid datatype (parsing)"
					},
					"response": []
				},
				{
					"name": "/application/GetCohort",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/GetCohort?cohortId=55555555555555555555",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"GetCohort"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "55555555555555555555"
								}
							]
						},
						"description": "/application/GetCohort Api call with param exceeding the size"
					},
					"response": []
				},
				{
					"name": "/application/GetCohort",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/GetCohort?cohortId=    ",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"GetCohort"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "    "
								}
							]
						},
						"description": "/application/GetCohort Api call with just whitespaces for Not Null Parameters no data in it \"\""
					},
					"response": []
				},
				{
					"name": "/application/GetCohort",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/GetCohort?cohortId=1",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"GetCohort"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "1"
								}
							]
						},
						"description": "Api call with wrong api call type, all parameters provided"
					},
					"response": []
				},
				{
					"name": "/application/GetCohort",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/GetCohort?cohortId=111111111111111111111111111111111",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"GetCohort"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "111111111111111111111111111111111"
								}
							]
						},
						"description": "Numeric values out of range  i.e., int and float datatypes"
					},
					"response": []
				},
				{
					"name": "/application/GetCohorts",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/GetCohorts",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"GetCohorts"
							]
						},
						"description": "/application/GetCohorts Api call with wrong api call type, all parameters provided"
					},
					"response": []
				},
				{
					"name": "/application/GetCohorts",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/GetCohorts",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"GetCohorts"
							]
						},
						"description": "/application/GetCohorts Get all records which are archived"
					},
					"response": []
				},
				{
					"name": "/application/ArchiveCohort",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/ArchiveCohort?cohortId=4",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"ArchiveCohort"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "4",
									"description": "405Method Not Allowed"
								}
							]
						},
						"description": "Archive Cohort by CohortId, call with valid parameters keys and values but GET Request"
					},
					"response": []
				},
				{
					"name": "/application/ArchiveCohort",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/ArchiveCohort?cohortId=4",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"ArchiveCohort"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "4"
								}
							]
						},
						"description": "Archive Cohort by CohortId, call with valid parameters keys and values"
					},
					"response": []
				},
				{
					"name": "/application/ArchiveCohort",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/ArchiveCohort?cohortId=",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"ArchiveCohort"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "",
									"description": "Error(s) During ArchiveCohort: cohortId is null. (Parameter 'cohortId')"
								}
							]
						},
						"description": "Archive Cohort by CohortId, call with valid parameters key and missing value"
					},
					"response": []
				},
				{
					"name": "/application/ArchiveCohort",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/ArchiveCohort",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"ArchiveCohort"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "",
									"description": "Error(s) During ArchiveCohort: cohortId is null. (Parameter 'cohortId')\n",
									"disabled": true
								}
							]
						},
						"description": "Archive Cohort by CohortId, call with missing parameters key and value"
					},
					"response": []
				},
				{
					"name": "/application/ArchiveCohort",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/ArchiveCohort?cohortId=10",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"ArchiveCohort"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "10",
									"description": "Error(s) During ArchiveCohort: Cohort Id does not exist"
								}
							]
						},
						"description": "Archive Cohort by CohortId, call with valid parameters key and nonexisting value"
					},
					"response": []
				},
				{
					"name": "/application/ArchiveCohort",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/ArchiveCohort?cohortId=b",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"ArchiveCohort"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "b",
									"description": "Error(s) During ArchiveCohort: Invalid value for Cohort Id, Cohort Id value should be between 1 & 2147483647 inclusive"
								}
							]
						},
						"description": "Archive Cohort by CohortId, call with valid parameters key and invlaid value data type"
					},
					"response": [
						{
							"name": "/application/ArchiveCohort",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "https://localhost:44337/application/ArchiveCohort?cohortId=b",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"ArchiveCohort"
									],
									"query": [
										{
											"key": "cohortId",
											"value": "b"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sat, 28 Nov 2020 00:52:56 GMT"
								}
							],
							"cookie": [],
							"body": "Error(s) During ArchiveCohort: Invalid value for Cohort Id"
						}
					]
				},
				{
					"name": "/application/ArchiveCohort",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/ArchiveCohort?cohortId=2",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"ArchiveCohort"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "2",
									"description": "Unexpected server/database error occurred. System error message(s): Table 'azlearndb.cohort' doesn't exist"
								}
							]
						},
						"description": "Archive Cohort by CohortId, call with valid parameters and no database"
					},
					"response": [
						{
							"name": "/application/ArchiveCohort",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "https://localhost:44337/application/ArchiveCohort?cohortId=b",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"ArchiveCohort"
									],
									"query": [
										{
											"key": "cohortId",
											"value": "b"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sat, 28 Nov 2020 00:52:56 GMT"
								}
							],
							"cookie": [],
							"body": "Error(s) During ArchiveCohort: Invalid value for Cohort Id"
						}
					]
				},
				{
					"name": "/application/ArchiveCohort",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/ArchiveCohort?cohortId=1",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"ArchiveCohort"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "1",
									"description": "Error(s) During ArchiveCohort: Cohort Id does not exist"
								}
							]
						},
						"description": "Archive Cohort by CohortId, call with valid parameters and no data seeded in target tables (cohort, cohortcourse, homework)"
					},
					"response": [
						{
							"name": "/application/ArchiveCohort",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "https://localhost:44337/application/ArchiveCohort?cohortId=b",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"ArchiveCohort"
									],
									"query": [
										{
											"key": "cohortId",
											"value": "b"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sat, 28 Nov 2020 00:52:56 GMT"
								}
							],
							"cookie": [],
							"body": "Error(s) During ArchiveCohort: Invalid value for Cohort Id"
						}
					]
				},
				{
					"name": "/application/ArchiveCohort",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/ArchiveCohort?cohortId=                      ",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"ArchiveCohort"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "                      ",
									"description": "Error(s) During ArchiveCohort: cohortId is null. (Parameter 'cohortId')"
								}
							]
						},
						"description": "Archive Cohort by CohortId, call with valid parameters key and whitespaces as value"
					},
					"response": [
						{
							"name": "/application/ArchiveCohort",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "https://localhost:44337/application/ArchiveCohort?cohortId=b",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"ArchiveCohort"
									],
									"query": [
										{
											"key": "cohortId",
											"value": "b"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sat, 28 Nov 2020 00:52:56 GMT"
								}
							],
							"cookie": [],
							"body": "Error(s) During ArchiveCohort: Invalid value for Cohort Id"
						}
					]
				},
				{
					"name": "/application/ArchiveCohort",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/ArchiveCohort?cohortId=                   5               ",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"ArchiveCohort"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "                   5               ",
									"description": "Successfully Archived Cohort Id: 5"
								}
							]
						},
						"description": "Archive Cohort by CohortId, call with valid parameters key and whitespaces as value"
					},
					"response": [
						{
							"name": "/application/ArchiveCohort",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "https://localhost:44337/application/ArchiveCohort?cohortId=b",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"ArchiveCohort"
									],
									"query": [
										{
											"key": "cohortId",
											"value": "b"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sat, 28 Nov 2020 00:52:56 GMT"
								}
							],
							"cookie": [],
							"body": "Error(s) During ArchiveCohort: Invalid value for Cohort Id"
						}
					]
				},
				{
					"name": "/application/ArchiveCohort",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/ArchiveCohort?cohortId=2147483648",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"ArchiveCohort"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "2147483648",
									"description": "Error(s) During ArchiveCohort: Invalid value for Cohort Id, Cohort Id value should be between 1 & 2147483647 inclusive"
								},
								{
									"key": "cohortId",
									"value": "-1",
									"description": "Error(s) During ArchiveCohort: Cohort Id value should be between 1 & 2147483647 inclusive",
									"disabled": true
								}
							]
						},
						"description": "Archive Cohort by CohortId, call with valid parameters key and out of range value CohortId (int(10) 10)"
					},
					"response": [
						{
							"name": "/application/ArchiveCohort",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "https://localhost:44337/application/ArchiveCohort?cohortId=b",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"ArchiveCohort"
									],
									"query": [
										{
											"key": "cohortId",
											"value": "b"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sat, 28 Nov 2020 00:52:56 GMT"
								}
							],
							"cookie": [],
							"body": "Error(s) During ArchiveCohort: Invalid value for Cohort Id"
						}
					]
				},
				{
					"name": "/application/ArchiveCohort",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/ArchiveCohort?cohortId=4",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"ArchiveCohort"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "4",
									"description": "Successfully Archived Cohort Id: 4"
								}
							]
						},
						"description": "Archive Cohort by CohortId, call for archived cohort, with valid parameters keys and values"
					},
					"response": []
				}
			],
			"description": "CohortController EndPoints Testing\r\n/application/CreateCohort\r\n/application/UpdateCohort\r\n/application/GetCohorts\r\n/application/ArchiveCohort\r\n",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "e269d330-3163-4597-8465-5fb3105c31bb",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "97c6c8e0-f630-401e-9a9a-5199187b81c7",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "CourseController",
			"item": [
				{
					"name": "/application/CreateCourse",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateCourse",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateCourse"
							]
						},
						"description": "/application/CreateCourse With No database"
					},
					"response": []
				},
				{
					"name": "/application/CreateCourse",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateCourse",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateCourse"
							]
						},
						"description": "/application/CreateCourse  Api call with No parameters"
					},
					"response": []
				},
				{
					"name": "/application/CreateCourse",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateCourse?name=React&description=Basics&durationHrs=25",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateCourse"
							],
							"query": [
								{
									"key": "name",
									"value": "React"
								},
								{
									"key": "description",
									"value": "Basics"
								},
								{
									"key": "durationHrs",
									"value": "25"
								}
							]
						},
						"description": "/application/CreateCourse Api call with all valid parameters"
					},
					"response": []
				},
				{
					"name": "/application/CreateCourse",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateCourse?name=tESt CasING COURSE&description=BASics&durationHrs=25",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateCourse"
							],
							"query": [
								{
									"key": "name",
									"value": "tESt CasING COURSE"
								},
								{
									"key": "description",
									"value": "BASics"
								},
								{
									"key": "durationHrs",
									"value": "25"
								}
							]
						},
						"description": "/application/CreateCourse Api call with all valid parameters Case Insensitivity"
					},
					"response": []
				},
				{
					"name": "/application/CreateCourse",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateCourse?name=React&description=Basics&durationHrs=25",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateCourse"
							],
							"query": [
								{
									"key": "name",
									"value": "React"
								},
								{
									"key": "description",
									"value": "Basics"
								},
								{
									"key": "durationHrs",
									"value": "25"
								}
							]
						},
						"description": "/application/CreateCourse Api call with wrong api call type, all parameters provided"
					},
					"response": []
				},
				{
					"name": "/application/CreateCourse",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateCourse?name=React 4.0",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateCourse"
							],
							"query": [
								{
									"key": "name",
									"value": "React 4.0"
								},
								{
									"key": "description",
									"value": "Basics",
									"disabled": true
								},
								{
									"key": "durationHrs",
									"value": "25",
									"disabled": true
								}
							]
						},
						"description": "/application/CreateCourse Api call with some parameters"
					},
					"response": []
				},
				{
					"name": "/application/CreateCourse",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateCourse?name=&description=&durationHrs=",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateCourse"
							],
							"query": [
								{
									"key": "name",
									"value": "",
									"description": "Error(s) During Creation: name is null. (Parameter 'name'), description is null. (Parameter 'description'), durationHrs is null. (Parameter 'durationHrs')"
								},
								{
									"key": "description",
									"value": ""
								},
								{
									"key": "durationHrs",
									"value": ""
								}
							]
						},
						"description": "/application/CreateCourse Api call all parameters with null values"
					},
					"response": []
				},
				{
					"name": "/application/CreateCourse",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateCourse?name=                        &description=                                    &durationHrs=                                                          ",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateCourse"
							],
							"query": [
								{
									"key": "name",
									"value": "                        "
								},
								{
									"key": "description",
									"value": "                                    "
								},
								{
									"key": "durationHrs",
									"value": "                                                          "
								}
							]
						},
						"description": "/application/CreateCourse Api call with just whitespaces for Not Null Parameters no data in it \"\""
					},
					"response": []
				},
				{
					"name": "/application/CreateCourse",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateCourse?name=HTML                                        &description=Basics                                           &durationHrs=25                                                                           ",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateCourse"
							],
							"query": [
								{
									"key": "name",
									"value": "HTML                                        "
								},
								{
									"key": "description",
									"value": "Basics                                           "
								},
								{
									"key": "durationHrs",
									"value": "25                                                                           "
								}
							]
						},
						"description": "/application/CreateCourse Api call without trim"
					},
					"response": []
				},
				{
					"name": "/application/CreateCourse",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateCourse?name=MySQL&description=Basics&durationHrs=25.8888888888888 string",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateCourse"
							],
							"query": [
								{
									"key": "name",
									"value": "MySQL"
								},
								{
									"key": "description",
									"value": "Basics"
								},
								{
									"key": "durationHrs",
									"value": "25.8888888888888 string"
								}
							]
						},
						"description": "/application/CreateCourse Api call with invalid datatype (parsing)"
					},
					"response": []
				},
				{
					"name": "/application/CreateCourse",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateCourse?name=ReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReact&description=Basics&durationHrs=25",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateCourse"
							],
							"query": [
								{
									"key": "name",
									"value": "ReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReact"
								},
								{
									"key": "description",
									"value": "Basics"
								},
								{
									"key": "durationHrs",
									"value": "25"
								}
							]
						},
						"description": "/application/CreateCourse Api call with param exceeding the size"
					},
					"response": []
				},
				{
					"name": "/application/CreateCourse",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateCourse?name=React&description=Basics&durationHrs=25",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateCourse"
							],
							"query": [
								{
									"key": "name",
									"value": "React"
								},
								{
									"key": "description",
									"value": "Basics"
								},
								{
									"key": "durationHrs",
									"value": "25"
								}
							]
						},
						"description": "/application/CreateCourse Duplicate check by name"
					},
					"response": []
				},
				{
					"name": "/application/CreateCourse",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateCourse?name=React&description=Basics&durationHrs=2504.55555555",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateCourse"
							],
							"query": [
								{
									"key": "name",
									"value": "React"
								},
								{
									"key": "description",
									"value": "Basics"
								},
								{
									"key": "durationHrs",
									"value": "2504.55555555"
								}
							]
						},
						"description": "/application/CreateCourse Numeric values out of range  i.e., int and float datatypes"
					},
					"response": []
				},
				{
					"name": "/application/UpdateCourse",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateCourse",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateCourse"
							]
						},
						"description": "/application/UpdateCourse Api call with no parameters"
					},
					"response": []
				},
				{
					"name": "/application/UpdateCourse",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateCourse?name=Capstone&description=Presentations&durationHrs=8&courseId=16",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateCourse"
							],
							"query": [
								{
									"key": "name",
									"value": "Capstone"
								},
								{
									"key": "description",
									"value": "Presentations"
								},
								{
									"key": "durationHrs",
									"value": "8"
								},
								{
									"key": "courseId",
									"value": "16"
								}
							]
						},
						"description": "/application/UpdateCourse Api call with all valid parameters"
					},
					"response": []
				},
				{
					"name": "/application/UpdateCourse",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateCourse?name=reACT&description=CALCULATOR&durationHrs=2&courseId=1",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateCourse"
							],
							"query": [
								{
									"key": "name",
									"value": "reACT"
								},
								{
									"key": "description",
									"value": "CALCULATOR"
								},
								{
									"key": "durationHrs",
									"value": "2"
								},
								{
									"key": "courseId",
									"value": "1"
								}
							]
						},
						"description": "/application/UpdateCourse Api call with all valid parameters Case insensitivity"
					},
					"response": []
				},
				{
					"name": "/application/UpdateCourse",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateCourse?name=React&description=Calculator&durationHrs=2&courseId=1",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateCourse"
							],
							"query": [
								{
									"key": "name",
									"value": "React"
								},
								{
									"key": "description",
									"value": "Calculator"
								},
								{
									"key": "durationHrs",
									"value": "2"
								},
								{
									"key": "courseId",
									"value": "1"
								}
							]
						},
						"description": "/application/UpdateCourse Api call with wrong api call type, all parameters provided"
					},
					"response": []
				},
				{
					"name": "/application/UpdateCourse",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateCourse?name=React&description=Calculator",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateCourse"
							],
							"query": [
								{
									"key": "name",
									"value": "React"
								},
								{
									"key": "description",
									"value": "Calculator"
								},
								{
									"key": "durationHrs",
									"value": "2",
									"disabled": true
								},
								{
									"key": "courseId",
									"value": "1",
									"disabled": true
								}
							]
						},
						"description": "/application/UpdateCourse Api call with some parameters"
					},
					"response": []
				},
				{
					"name": "/application/UpdateCourse",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateCourse?name=&description=&durationHrs=&courseId=",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateCourse"
							],
							"query": [
								{
									"key": "name",
									"value": "",
									"description": "Error(s) During Creation: courseId is null. (Parameter 'courseId'), name is null. (Parameter 'name'), description is null. (Parameter 'description'), durationHrs is null. (Parameter 'durationHrs')"
								},
								{
									"key": "description",
									"value": ""
								},
								{
									"key": "durationHrs",
									"value": ""
								},
								{
									"key": "courseId",
									"value": ""
								}
							]
						},
						"description": "/application/UpdateCourse Api call all parameters with null values"
					},
					"response": []
				},
				{
					"name": "/application/UpdateCourse",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateCourse?name=                                                          &description=                    &durationHrs=               &courseId=          ",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateCourse"
							],
							"query": [
								{
									"key": "name",
									"value": "                                                          "
								},
								{
									"key": "description",
									"value": "                    "
								},
								{
									"key": "durationHrs",
									"value": "               "
								},
								{
									"key": "courseId",
									"value": "          "
								}
							]
						},
						"description": "/application/UpdateCourse Api call with just whitespaces for Not Null Parameters no data in it \"\""
					},
					"response": []
				},
				{
					"name": "/application/UpdateCourse",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateCourse?name=                        React&description=                 Todo App                 &durationHrs=2               &courseId=1",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateCourse"
							],
							"query": [
								{
									"key": "name",
									"value": "                        React"
								},
								{
									"key": "description",
									"value": "                 Todo App                 "
								},
								{
									"key": "durationHrs",
									"value": "2               "
								},
								{
									"key": "courseId",
									"value": "1"
								}
							]
						},
						"description": "/application/UpdateCourse Api call without trim"
					},
					"response": []
				},
				{
					"name": "/application/UpdateCourse",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateCourse?courseId=1&name=PHP&description=Basics&durationHrs=string",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateCourse"
							],
							"query": [
								{
									"key": "courseId",
									"value": "1"
								},
								{
									"key": "name",
									"value": "PHP"
								},
								{
									"key": "description",
									"value": "Basics"
								},
								{
									"key": "durationHrs",
									"value": "string"
								}
							]
						},
						"description": "/application/UpdateCourse Api call with invalid datatype (parsing)"
					},
					"response": []
				},
				{
					"name": "/application/UpdateCourse",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": ""
						},
						"description": "/application/UpdateCourse Api call with no param for nullable fileds"
					},
					"response": []
				},
				{
					"name": "/application/UpdateCourse",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateCourse?name=ReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactv&description=Calculator&durationHrs=10&courseId=111111111111111111111",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateCourse"
							],
							"query": [
								{
									"key": "name",
									"value": "ReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactReactv"
								},
								{
									"key": "description",
									"value": "Calculator"
								},
								{
									"key": "durationHrs",
									"value": "10"
								},
								{
									"key": "courseId",
									"value": "111111111111111111111"
								}
							]
						},
						"description": "/application/UpdateCourse Api call with param exceeding the size"
					},
					"response": []
				},
				{
					"name": "/application/UpdateCourse",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateCourse?courseId=1&name=PHP&description=Basics&durationHrs=50",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateCourse"
							],
							"query": [
								{
									"key": "courseId",
									"value": "1"
								},
								{
									"key": "name",
									"value": "PHP"
								},
								{
									"key": "description",
									"value": "Basics"
								},
								{
									"key": "durationHrs",
									"value": "50"
								}
							]
						},
						"description": "/application/UpdateCourse Api call to update archived record"
					},
					"response": []
				},
				{
					"name": "/application/UpdateCourse",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateCourse?courseId=2&name=PHP&description=Basics&durationHrs=50",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateCourse"
							],
							"query": [
								{
									"key": "courseId",
									"value": "2"
								},
								{
									"key": "name",
									"value": "PHP"
								},
								{
									"key": "description",
									"value": "Basics"
								},
								{
									"key": "durationHrs",
									"value": "50"
								}
							]
						},
						"description": "/application/UpdateCourse Duplicate check by name, criteria, email"
					},
					"response": []
				},
				{
					"name": "/application/UpdateCourse",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateCourse?courseId=1&name=PHP&description=Basics&durationHrs=500000",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateCourse"
							],
							"query": [
								{
									"key": "courseId",
									"value": "1"
								},
								{
									"key": "name",
									"value": "PHP"
								},
								{
									"key": "description",
									"value": "Basics"
								},
								{
									"key": "durationHrs",
									"value": "500000"
								}
							]
						},
						"description": "/application/UpdateCourse Numeric values out of range  i.e., int and float datatypes"
					},
					"response": []
				},
				{
					"name": "/application/GetCourses",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/GetCourses",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"GetCourses"
							]
						},
						"description": "/application/GetCourses Api call to GET all archived record"
					},
					"response": []
				},
				{
					"name": "/application/GetCourse",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/GetCourse?courseId=1",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"GetCourse"
							],
							"query": [
								{
									"key": "courseId",
									"value": "1"
								}
							]
						},
						"description": "/application/GetCourse Api call to GET with valid parmeters"
					},
					"response": []
				},
				{
					"name": "/application/GetCourse",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/GetCourse?courseId=",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"GetCourse"
							],
							"query": [
								{
									"key": "courseId",
									"value": ""
								}
							]
						},
						"description": "/application/GetCourse Api call all parameters with null values"
					},
					"response": []
				},
				{
					"name": "/application/GetCourse",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/GetCourse?courseId=     ",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"GetCourse"
							],
							"query": [
								{
									"key": "courseId",
									"value": "     "
								}
							]
						},
						"description": "/application/GetCourse Api call with just whitespaces for Not Null Parameters no data in it \"\""
					},
					"response": []
				},
				{
					"name": "/application/GetCourse",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/GetCourse",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"GetCourse"
							],
							"query": [
								{
									"key": "courseId",
									"value": "1",
									"disabled": true
								}
							]
						},
						"description": "/application/GetCourse Api call to GET with no parmeters"
					},
					"response": []
				},
				{
					"name": "/application/GetCourse",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/GetCourse?courseId=1           ",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"GetCourse"
							],
							"query": [
								{
									"key": "courseId",
									"value": "1           "
								}
							]
						},
						"description": "/application/GetCourse Api call without trim"
					},
					"response": []
				},
				{
					"name": "/application/GetCourse",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/GetCourse?courseId=155555555555555555555555",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"GetCourse"
							],
							"query": [
								{
									"key": "courseId",
									"value": "155555555555555555555555"
								}
							]
						},
						"description": "/application/GetCourse Api call with invalid datatype (parsing)"
					},
					"response": []
				},
				{
					"name": "/application/GetCourse",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/GetCourse?courseId=555555555555555555555555555",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"GetCourse"
							],
							"query": [
								{
									"key": "courseId",
									"value": "555555555555555555555555555"
								}
							]
						},
						"description": "/application/GetCourse Api call with param exceeding the size"
					},
					"response": []
				},
				{
					"name": "/application/GetCourse",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/GetCourse?courseId=15",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"GetCourse"
							],
							"query": [
								{
									"key": "courseId",
									"value": "15"
								}
							]
						},
						"description": "/application/GetCourse Api call to GET all archived record"
					},
					"response": []
				},
				{
					"name": "/application/GetCourse",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/GetCourse?courseId=15.555555555555",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"GetCourse"
							],
							"query": [
								{
									"key": "courseId",
									"value": "15.555555555555"
								}
							]
						},
						"description": "/application/GetCourse Numeric values out of range  i.e., int and float datatypes"
					},
					"response": []
				},
				{
					"name": "/application/GetCourse",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/GetCourse",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"GetCourse"
							],
							"query": [
								{
									"key": "courseId",
									"value": "1",
									"disabled": true
								}
							]
						},
						"description": "/application/GetCourse Api call with wrong api call type, all parameters provided"
					},
					"response": []
				},
				{
					"name": "/application/GetCourses",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/GetCourses",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"GetCourses"
							]
						},
						"description": "/application/GetCourses Api call with wrong api call type, all parameters provided"
					},
					"response": []
				},
				{
					"name": "/application/GetCourseSummary",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:5001/application/GetCourseSummary?cohortId=3",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"application",
								"GetCourseSummary"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "3"
								}
							]
						},
						"description": "/application/GetCourseSummary Api call with all parameters"
					},
					"response": [
						{
							"name": "FAILED CALL /application/GetCourseSummary No Instructor name received",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44337/application/GetCourseSummary?cohortId=2",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"GetCourseSummary"
									],
									"query": [
										{
											"key": "cohortId",
											"value": "2"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "1528"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sat, 28 Nov 2020 01:40:03 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"courseId\": 1,\n        \"name\": \"PHP\",\n        \"description\": \"Basics\",\n        \"durationHrs\": 50,\n        \"archive\": true,\n        \"homeworks\": [],\n        \"cohortCourses\": [\n            {\n                \"cohortId\": 1,\n                \"courseId\": 1,\n                \"instructorId\": 1,\n                \"startDate\": \"2020-04-01T00:00:00\",\n                \"endDate\": \"2020-07-01T00:00:00\",\n                \"resourcesLink\": null,\n                \"archive\": false,\n                \"cohort\": null,\n                \"instructor\": null\n            },\n            {\n                \"cohortId\": 2,\n                \"courseId\": 1,\n                \"instructorId\": 1,\n                \"startDate\": \"2020-04-04T00:00:00\",\n                \"endDate\": \"2020-05-04T00:00:00\",\n                \"resourcesLink\": \"https://docs.google.com/document/u/1/d/1q4GL3N9jYn4prBeEj7fCRIBqGpKlGcuEtj2kwSiwqvs/edit#\",\n                \"archive\": false,\n                \"cohort\": null,\n                \"instructor\": null\n            }\n        ]\n    },\n    {\n        \"courseId\": 2,\n        \"name\": \"HTML\",\n        \"description\": \"Basics\",\n        \"durationHrs\": 25,\n        \"archive\": false,\n        \"homeworks\": [],\n        \"cohortCourses\": [\n            {\n                \"cohortId\": 1,\n                \"courseId\": 2,\n                \"instructorId\": 1,\n                \"startDate\": \"2020-04-04T00:00:00\",\n                \"endDate\": \"2020-05-04T00:00:00\",\n                \"resourcesLink\": null,\n                \"archive\": false,\n                \"cohort\": null,\n                \"instructor\": null\n            },\n            {\n                \"cohortId\": 2,\n                \"courseId\": 2,\n                \"instructorId\": 1,\n                \"startDate\": \"2020-04-04T00:00:00\",\n                \"endDate\": \"2020-05-04T00:00:00\",\n                \"resourcesLink\": null,\n                \"archive\": false,\n                \"cohort\": null,\n                \"instructor\": null\n            }\n        ]\n    },\n    {\n        \"courseId\": 3,\n        \"name\": \"Redux\",\n        \"description\": \"Basics\",\n        \"durationHrs\": 25.89,\n        \"archive\": false,\n        \"homeworks\": [],\n        \"cohortCourses\": [\n            {\n                \"cohortId\": 1,\n                \"courseId\": 3,\n                \"instructorId\": 1,\n                \"startDate\": \"2020-04-04T00:00:00\",\n                \"endDate\": \"2020-05-04T00:00:00\",\n                \"resourcesLink\": null,\n                \"archive\": false,\n                \"cohort\": null,\n                \"instructor\": null\n            },\n            {\n                \"cohortId\": 2,\n                \"courseId\": 3,\n                \"instructorId\": 1,\n                \"startDate\": \"2020-04-04T00:00:00\",\n                \"endDate\": \"2020-05-04T00:00:00\",\n                \"resourcesLink\": null,\n                \"archive\": false,\n                \"cohort\": null,\n                \"instructor\": null\n            }\n        ]\n    }\n]"
						},
						{
							"name": "PASS /application/GetCourseSummary",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44337/application/GetCourseSummary?cohortId=3",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"GetCourseSummary"
									],
									"query": [
										{
											"key": "cohortId",
											"value": "3"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "7330"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Wed, 02 Dec 2020 17:47:08 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"item1\": {\n            \"courseId\": 1,\n            \"name\": \"C# Introduction\",\n            \"description\": \"Introduction to C# syntax, keywords, variables, control flow, comments, errors, exceptions, bugs and version control\",\n            \"durationHrs\": 24,\n            \"archive\": false,\n            \"homeworks\": [],\n            \"cohortCourses\": [\n                {\n                    \"cohortId\": 3,\n                    \"courseId\": 1,\n                    \"instructorId\": 3,\n                    \"startDate\": \"2020-08-10T00:00:00\",\n                    \"endDate\": \"2020-08-14T00:00:00\",\n                    \"resourcesLink\": \"https://drive.google.com/drive/u/1/folders/1g1gJmXjl14GbbTZDKjQ3A55RBxXY0GGN\",\n                    \"archive\": false,\n                    \"cohort\": null,\n                    \"instructor\": null\n                }\n            ]\n        },\n        \"item2\": \"James Grieve\"\n    },\n    {\n        \"item1\": {\n            \"courseId\": 2,\n            \"name\": \"Version Control Using Git\",\n            \"description\": \"Software code base version control management using git and GitHub environment\",\n            \"durationHrs\": 3.75,\n            \"archive\": false,\n            \"homeworks\": [],\n            \"cohortCourses\": [\n                {\n                    \"cohortId\": 3,\n                    \"courseId\": 2,\n                    \"instructorId\": 3,\n                    \"startDate\": \"2020-08-10T00:00:00\",\n                    \"endDate\": \"2020-08-14T00:00:00\",\n                    \"resourcesLink\": \"https://drive.google.com/drive/u/1/folders/1hD1Xi8bTwxc7DUtP73HEBJb67HBRAtss\",\n                    \"archive\": false,\n                    \"cohort\": null,\n                    \"instructor\": null\n                }\n            ]\n        },\n        \"item2\": \"James Grieve\"\n    },\n    {\n        \"item1\": {\n            \"courseId\": 3,\n            \"name\": \"HTML\\\\CSS Fundamentals\",\n            \"description\": \"HTML5 fundamentals, semantic tags, semantic Elements , web controls, forms and basic validation\",\n            \"durationHrs\": 2.5,\n            \"archive\": false,\n            \"homeworks\": [],\n            \"cohortCourses\": [\n                {\n                    \"cohortId\": 3,\n                    \"courseId\": 3,\n                    \"instructorId\": 3,\n                    \"startDate\": \"2020-08-17T00:00:00\",\n                    \"endDate\": \"2020-08-17T00:00:00\",\n                    \"resourcesLink\": \"https://drive.google.com/drive/u/1/folders/1Pa7joK3oA_SD9CVNvabL1GZeXtlOVyJt\",\n                    \"archive\": false,\n                    \"cohort\": null,\n                    \"instructor\": null\n                }\n            ]\n        },\n        \"item2\": \"James Grieve\"\n    },\n    {\n        \"item1\": {\n            \"courseId\": 4,\n            \"name\": \"CSS Advanced\",\n            \"description\": \"Theory, syntax, colors, selectors, attributes and layout models (box model, grid, etc.).\",\n            \"durationHrs\": 8.25,\n            \"archive\": false,\n            \"homeworks\": [],\n            \"cohortCourses\": [\n                {\n                    \"cohortId\": 3,\n                    \"courseId\": 4,\n                    \"instructorId\": 1,\n                    \"startDate\": \"2020-08-17T00:00:00\",\n                    \"endDate\": \"2020-08-19T00:00:00\",\n                    \"resourcesLink\": \"https://drive.google.com/drive/u/1/folders/1aovcOq8XnhXE0PXYVqGJv8jjMwqfsgYa\",\n                    \"archive\": false,\n                    \"cohort\": null,\n                    \"instructor\": null\n                }\n            ]\n        },\n        \"item2\": \"Warren Uhrich\"\n    },\n    {\n        \"item1\": {\n            \"courseId\": 5,\n            \"name\": \"JavaScript Fundamentals\",\n            \"description\": \"Variables, Strings, Functions, DOM, Events, API, Postman, AJAX, Fetch, JSON, Classes and Objects\",\n            \"durationHrs\": 15.75,\n            \"archive\": false,\n            \"homeworks\": [],\n            \"cohortCourses\": [\n                {\n                    \"cohortId\": 3,\n                    \"courseId\": 5,\n                    \"instructorId\": 1,\n                    \"startDate\": \"2020-08-21T00:00:00\",\n                    \"endDate\": \"2020-08-27T00:00:00\",\n                    \"resourcesLink\": \"https://drive.google.com/drive/u/1/folders/1bDH7fwIe-TZJ2x7zWtg6H4jnAE4sSBuF\",\n                    \"archive\": false,\n                    \"cohort\": null,\n                    \"instructor\": null\n                }\n            ]\n        },\n        \"item2\": \"Warren Uhrich\"\n    },\n    {\n        \"item1\": {\n            \"courseId\": 6,\n            \"name\": \"Reactjs\",\n            \"description\": \"Basic Intro; Install NPM; create-react-app, Components, Props, Events and State\",\n            \"durationHrs\": 8.75,\n            \"archive\": false,\n            \"homeworks\": [],\n            \"cohortCourses\": [\n                {\n                    \"cohortId\": 3,\n                    \"courseId\": 6,\n                    \"instructorId\": 1,\n                    \"startDate\": \"2020-09-09T00:00:00\",\n                    \"endDate\": \"2020-09-11T00:00:00\",\n                    \"resourcesLink\": \"https://drive.google.com/drive/u/1/folders/1fVxjYSfAA3ObX42u1AGLeQUpEpXs6MBb\",\n                    \"archive\": false,\n                    \"cohort\": null,\n                    \"instructor\": null\n                }\n            ]\n        },\n        \"item2\": \"Warren Uhrich\"\n    },\n    {\n        \"item1\": {\n            \"courseId\": 7,\n            \"name\": \"React-Redux\",\n            \"description\": \"Actions, Reducers, Store and React-Router-Dom\",\n            \"durationHrs\": 3.75,\n            \"archive\": false,\n            \"homeworks\": [],\n            \"cohortCourses\": [\n                {\n                    \"cohortId\": 3,\n                    \"courseId\": 7,\n                    \"instructorId\": 1,\n                    \"startDate\": \"2020-09-14T00:00:00\",\n                    \"endDate\": \"2020-09-16T00:00:00\",\n                    \"resourcesLink\": \"https://drive.google.com/drive/u/1/folders/1fVxjYSfAA3ObX42u1AGLeQUpEpXs6MBb\",\n                    \"archive\": false,\n                    \"cohort\": null,\n                    \"instructor\": null\n                }\n            ]\n        },\n        \"item2\": \"Warren Uhrich\"\n    },\n    {\n        \"item1\": {\n            \"courseId\": 8,\n            \"name\": \"PHP\",\n            \"description\": \"Basics, Global, Forms, Post, Get, Session, OOP, JSON and Files and API\",\n            \"durationHrs\": 16.5,\n            \"archive\": false,\n            \"homeworks\": [],\n            \"cohortCourses\": [\n                {\n                    \"cohortId\": 3,\n                    \"courseId\": 8,\n                    \"instructorId\": 1,\n                    \"startDate\": \"2020-09-30T00:00:00\",\n                    \"endDate\": \"2020-10-05T00:00:00\",\n                    \"resourcesLink\": \"https://drive.google.com/drive/u/1/folders/1o7yG1O4_sjf4uvow9OZq_TpvqO5PZYCI\",\n                    \"archive\": false,\n                    \"cohort\": null,\n                    \"instructor\": null\n                }\n            ]\n        },\n        \"item2\": \"Warren Uhrich\"\n    },\n    {\n        \"item1\": {\n            \"courseId\": 9,\n            \"name\": \"WordPress\",\n            \"description\": \"WordPress Introduction, WordPress Custom Theme and Plugin\",\n            \"durationHrs\": 16.15,\n            \"archive\": false,\n            \"homeworks\": [],\n            \"cohortCourses\": [\n                {\n                    \"cohortId\": 3,\n                    \"courseId\": 9,\n                    \"instructorId\": 1,\n                    \"startDate\": \"2020-10-06T00:00:00\",\n                    \"endDate\": \"2020-10-07T00:00:00\",\n                    \"resourcesLink\": \"https://drive.google.com/drive/u/1/folders/1o7yG1O4_sjf4uvow9OZq_TpvqO5PZYCI\",\n                    \"archive\": false,\n                    \"cohort\": null,\n                    \"instructor\": null\n                }\n            ]\n        },\n        \"item2\": \"Warren Uhrich\"\n    },\n    {\n        \"item1\": {\n            \"courseId\": 10,\n            \"name\": \"Database SQL\",\n            \"description\": \"ERD, Tables, Insert, Select, Join, Subquery, update and delete\",\n            \"durationHrs\": 19.25,\n            \"archive\": false,\n            \"homeworks\": [],\n            \"cohortCourses\": [\n                {\n                    \"cohortId\": 3,\n                    \"courseId\": 10,\n                    \"instructorId\": 2,\n                    \"startDate\": \"2020-10-08T00:00:00\",\n                    \"endDate\": \"2020-10-15T00:00:00\",\n                    \"resourcesLink\": \"https://drive.google.com/drive/u/1/folders/1d0dGorhiNkZREPnEC_pSRawM4Pr7viV1\",\n                    \"archive\": false,\n                    \"cohort\": null,\n                    \"instructor\": null\n                }\n            ]\n        },\n        \"item2\": \"Tammy Valgardson\"\n    },\n    {\n        \"item1\": {\n            \"courseId\": 11,\n            \"name\": \"C# OOP\",\n            \"description\": \"Syntax, Decisions, Iteration, Collections, Functions and Exceptions. OOP Properties, Methods, Constructors, Inheritance, Polymorphism. XUnit Theories and Facts. Collections and LINQ. Entity Framework Database First and Code First\",\n            \"durationHrs\": 30.25,\n            \"archive\": false,\n            \"homeworks\": [],\n            \"cohortCourses\": [\n                {\n                    \"cohortId\": 3,\n                    \"courseId\": 11,\n                    \"instructorId\": 3,\n                    \"startDate\": \"2020-10-19T00:00:00\",\n                    \"endDate\": \"2020-10-30T00:00:00\",\n                    \"resourcesLink\": \"https://drive.google.com/drive/u/1/folders/14GjgVCiD9IRmbvyJaUEOBDGrT2hicVSm\",\n                    \"archive\": false,\n                    \"cohort\": null,\n                    \"instructor\": null\n                }\n            ]\n        },\n        \"item2\": \"James Grieve\"\n    },\n    {\n        \"item1\": {\n            \"courseId\": 12,\n            \"name\": \"DotNet Core\",\n            \"description\": \"MVC Core with EF, MVC Core with Static List, Business Logic and Validation, Security and Filtering, API, Reactjs with DotNet Core\",\n            \"durationHrs\": 22.5,\n            \"archive\": false,\n            \"homeworks\": [],\n            \"cohortCourses\": [\n                {\n                    \"cohortId\": 3,\n                    \"courseId\": 12,\n                    \"instructorId\": 3,\n                    \"startDate\": \"2020-11-02T00:00:00\",\n                    \"endDate\": \"2020-11-11T00:00:00\",\n                    \"resourcesLink\": \"https://drive.google.com/drive/u/1/folders/1UlaZ4F_JDzmX1AGQ4TeKgLKm-FFt8iH2\",\n                    \"archive\": false,\n                    \"cohort\": null,\n                    \"instructor\": null\n                }\n            ]\n        },\n        \"item2\": \"James Grieve\"\n    },\n    {\n        \"item1\": {\n            \"courseId\": 13,\n            \"name\": \"Milestone Project 1\",\n            \"description\": \"Milestone project at the end of each major series of courses - Programming basics conclusion\",\n            \"durationHrs\": 40,\n            \"archive\": false,\n            \"homeworks\": [],\n            \"cohortCourses\": [\n                {\n                    \"cohortId\": 3,\n                    \"courseId\": 13,\n                    \"instructorId\": 1,\n                    \"startDate\": \"2020-08-28T00:00:00\",\n                    \"endDate\": \"2020-09-08T00:00:00\",\n                    \"resourcesLink\": null,\n                    \"archive\": false,\n                    \"cohort\": null,\n                    \"instructor\": null\n                }\n            ]\n        },\n        \"item2\": \"Warren Uhrich\"\n    },\n    {\n        \"item1\": {\n            \"courseId\": 14,\n            \"name\": \"Milestone Project 2\",\n            \"description\": \"Milestone project at the end of each major series of courses (React/Redux) - Frontend conclusion \",\n            \"durationHrs\": 40,\n            \"archive\": false,\n            \"homeworks\": [],\n            \"cohortCourses\": [\n                {\n                    \"cohortId\": 3,\n                    \"courseId\": 14,\n                    \"instructorId\": 1,\n                    \"startDate\": \"2020-09-21T00:00:00\",\n                    \"endDate\": \"2020-09-28T00:00:00\",\n                    \"resourcesLink\": null,\n                    \"archive\": false,\n                    \"cohort\": null,\n                    \"instructor\": null\n                }\n            ]\n        },\n        \"item2\": \"Warren Uhrich\"\n    },\n    {\n        \"item1\": {\n            \"courseId\": 15,\n            \"name\": \"Capstone Project\",\n            \"description\": \"Program conclusion project\",\n            \"durationHrs\": 120,\n            \"archive\": true,\n            \"homeworks\": [],\n            \"cohortCourses\": [\n                {\n                    \"cohortId\": 3,\n                    \"courseId\": 15,\n                    \"instructorId\": 3,\n                    \"startDate\": \"2020-11-12T00:00:00\",\n                    \"endDate\": \"2020-12-08T00:00:00\",\n                    \"resourcesLink\": null,\n                    \"archive\": false,\n                    \"cohort\": null,\n                    \"instructor\": null\n                }\n            ]\n        },\n        \"item2\": \"James Grieve\"\n    }\n]"
						}
					]
				},
				{
					"name": "/application/GetCourseSummary",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/GetCourseSummary?cohortId=1",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"GetCourseSummary"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "1"
								}
							]
						},
						"description": "/application/GetCourseSummary Api call to GET all archived record"
					},
					"response": [
						{
							"name": "FAILED CALL /application/GetCourseSummary Instructor name is not included in dataset",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44337/application/GetCourseSummary?cohortId=1",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"GetCourseSummary"
									],
									"query": [
										{
											"key": "cohortId",
											"value": "1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "1527"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sat, 28 Nov 2020 01:38:08 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"courseId\": 1,\n        \"name\": \"PHP\",\n        \"description\": \"Basics\",\n        \"durationHrs\": 50,\n        \"archive\": true,\n        \"homeworks\": [],\n        \"cohortCourses\": [\n            {\n                \"cohortId\": 1,\n                \"courseId\": 1,\n                \"instructorId\": 1,\n                \"startDate\": \"2020-04-01T00:00:00\",\n                \"endDate\": \"2020-07-01T00:00:00\",\n                \"resourcesLink\": null,\n                \"archive\": true,\n                \"cohort\": null,\n                \"instructor\": null\n            },\n            {\n                \"cohortId\": 2,\n                \"courseId\": 1,\n                \"instructorId\": 1,\n                \"startDate\": \"2020-04-04T00:00:00\",\n                \"endDate\": \"2020-05-04T00:00:00\",\n                \"resourcesLink\": \"https://docs.google.com/document/u/1/d/1q4GL3N9jYn4prBeEj7fCRIBqGpKlGcuEtj2kwSiwqvs/edit#\",\n                \"archive\": false,\n                \"cohort\": null,\n                \"instructor\": null\n            }\n        ]\n    },\n    {\n        \"courseId\": 2,\n        \"name\": \"HTML\",\n        \"description\": \"Basics\",\n        \"durationHrs\": 25,\n        \"archive\": false,\n        \"homeworks\": [],\n        \"cohortCourses\": [\n            {\n                \"cohortId\": 1,\n                \"courseId\": 2,\n                \"instructorId\": 1,\n                \"startDate\": \"2020-04-04T00:00:00\",\n                \"endDate\": \"2020-05-04T00:00:00\",\n                \"resourcesLink\": null,\n                \"archive\": false,\n                \"cohort\": null,\n                \"instructor\": null\n            },\n            {\n                \"cohortId\": 2,\n                \"courseId\": 2,\n                \"instructorId\": 1,\n                \"startDate\": \"2020-04-04T00:00:00\",\n                \"endDate\": \"2020-05-04T00:00:00\",\n                \"resourcesLink\": null,\n                \"archive\": false,\n                \"cohort\": null,\n                \"instructor\": null\n            }\n        ]\n    },\n    {\n        \"courseId\": 3,\n        \"name\": \"Redux\",\n        \"description\": \"Basics\",\n        \"durationHrs\": 25.89,\n        \"archive\": false,\n        \"homeworks\": [],\n        \"cohortCourses\": [\n            {\n                \"cohortId\": 1,\n                \"courseId\": 3,\n                \"instructorId\": 1,\n                \"startDate\": \"2020-04-04T00:00:00\",\n                \"endDate\": \"2020-05-04T00:00:00\",\n                \"resourcesLink\": null,\n                \"archive\": false,\n                \"cohort\": null,\n                \"instructor\": null\n            },\n            {\n                \"cohortId\": 2,\n                \"courseId\": 3,\n                \"instructorId\": 1,\n                \"startDate\": \"2020-04-04T00:00:00\",\n                \"endDate\": \"2020-05-04T00:00:00\",\n                \"resourcesLink\": null,\n                \"archive\": false,\n                \"cohort\": null,\n                \"instructor\": null\n            }\n        ]\n    }\n]"
						}
					]
				},
				{
					"name": "/application/GetCourseSummary",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/GetCourseSummary",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"GetCourseSummary"
							],
							"query": [
								{
									"key": "cohortId",
									"value": null,
									"disabled": true
								}
							]
						},
						"description": "/application/GetCourseSummary  Api call with wrong api call type, all parameters provided"
					},
					"response": []
				},
				{
					"name": "/application/ArchiveCourse",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/ArchiveCourse?courseId=2",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"ArchiveCourse"
							],
							"query": [
								{
									"key": "courseId",
									"value": "2",
									"description": "405Method Not Allowed"
								}
							]
						},
						"description": "Archive Course by Course, call with valid parameters keys and values but GET Request"
					},
					"response": []
				},
				{
					"name": "/application/ArchiveCourse",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/Archivecourse?courseId=2",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"Archivecourse"
							],
							"query": [
								{
									"key": "courseId",
									"value": "2",
									"description": "Successfully Archived Course Id: 2"
								}
							]
						},
						"description": "Archive Course by CourseId, call with valid parameters keys and values"
					},
					"response": []
				},
				{
					"name": "/application/ArchiveCourse",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/ArchiveCourse?courseId=",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"ArchiveCourse"
							],
							"query": [
								{
									"key": "courseId",
									"value": "",
									"description": "Error(s) During ArchiveCourse: courseId is null. (Parameter 'courseId')"
								}
							]
						},
						"description": "Archive Course by CourseId, call with valid parameters key and missing value"
					},
					"response": []
				},
				{
					"name": "/application/ArchiveCourse",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/ArchiveCourse",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"ArchiveCourse"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "",
									"description": "Error(s) During ArchiveCourse: courseId is null. (Parameter 'courseId')",
									"disabled": true
								}
							]
						},
						"description": "Archive Course by CourseId, call with missing parameters key and value"
					},
					"response": []
				},
				{
					"name": "/application/ArchiveCourse",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/ArchiveCourse?courseId=10",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"ArchiveCourse"
							],
							"query": [
								{
									"key": "courseId",
									"value": "10",
									"description": "Error(s) During ArchiveCourse: Course Id does not exist"
								}
							]
						},
						"description": "Archive Course by CoursetId, call with valid parameters key and nonexisting value"
					},
					"response": []
				},
				{
					"name": "/application/ArchiveCourse",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/ArchiveCourse?courseId=b",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"ArchiveCourse"
							],
							"query": [
								{
									"key": "courseId",
									"value": "b",
									"description": "Error(s) During ArchiveCourse: Invalid value for Course Id, Course Id value should be between 1 & 2147483647 inclusive"
								}
							]
						},
						"description": "Archive Course by CourseId, call with valid parameters key and invlaid value data type"
					},
					"response": [
						{
							"name": "/application/ArchiveCohort",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "https://localhost:44337/application/ArchiveCohort?cohortId=b",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"ArchiveCohort"
									],
									"query": [
										{
											"key": "cohortId",
											"value": "b"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sat, 28 Nov 2020 00:52:56 GMT"
								}
							],
							"cookie": [],
							"body": "Error(s) During ArchiveCohort: Invalid value for Cohort Id"
						}
					]
				},
				{
					"name": "/application/ArchiveCourse",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/ArchiveCourse?CourseId=2",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"ArchiveCourse"
							],
							"query": [
								{
									"key": "CourseId",
									"value": "2",
									"description": "Unexpected server/database error occurred. System error message(s): Table 'azlearndb.course' doesn't exist"
								}
							]
						},
						"description": "Archive Course by CourseId, call with valid parameters and no database"
					},
					"response": [
						{
							"name": "/application/ArchiveCohort",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "https://localhost:44337/application/ArchiveCohort?cohortId=b",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"ArchiveCohort"
									],
									"query": [
										{
											"key": "cohortId",
											"value": "b"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sat, 28 Nov 2020 00:52:56 GMT"
								}
							],
							"cookie": [],
							"body": "Error(s) During ArchiveCohort: Invalid value for Cohort Id"
						}
					]
				},
				{
					"name": "/application/ArchiveCourse",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/ArchiveCourse?courseId=1",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"ArchiveCourse"
							],
							"query": [
								{
									"key": "courseId",
									"value": "1",
									"description": "Error(s) During ArchiveCourse: Course Id does not exist"
								}
							]
						},
						"description": "Archive Course by CourseId, call with valid parameters and no data seeded in target tables (Course, cohortcourse, homework)"
					},
					"response": [
						{
							"name": "/application/ArchiveCohort",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "https://localhost:44337/application/ArchiveCohort?cohortId=b",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"ArchiveCohort"
									],
									"query": [
										{
											"key": "cohortId",
											"value": "b"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sat, 28 Nov 2020 00:52:56 GMT"
								}
							],
							"cookie": [],
							"body": "Error(s) During ArchiveCohort: Invalid value for Cohort Id"
						}
					]
				},
				{
					"name": "/application/ArchiveCourse",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/ArchiveCourse?courseId=                      ",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"ArchiveCourse"
							],
							"query": [
								{
									"key": "courseId",
									"value": "                      ",
									"description": "Error(s) During ArchiveCourse: courseId is null. (Parameter 'courseId')"
								}
							]
						},
						"description": "Archive Course by CourseId, call with valid parameters key and whitespaces as value"
					},
					"response": [
						{
							"name": "/application/ArchiveCohort",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "https://localhost:44337/application/ArchiveCohort?cohortId=b",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"ArchiveCohort"
									],
									"query": [
										{
											"key": "cohortId",
											"value": "b"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sat, 28 Nov 2020 00:52:56 GMT"
								}
							],
							"cookie": [],
							"body": "Error(s) During ArchiveCohort: Invalid value for Cohort Id"
						}
					]
				},
				{
					"name": "/application/ArchiveCourse",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/ArchiveCourse?courseId=                   1               ",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"ArchiveCourse"
							],
							"query": [
								{
									"key": "courseId",
									"value": "                   1               ",
									"description": "Successfully Archived Course Id: 1"
								}
							]
						},
						"description": "Archive Course by CoursetId, call with valid parameters key and whitespaces around value"
					},
					"response": [
						{
							"name": "/application/ArchiveCohort",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "https://localhost:44337/application/ArchiveCohort?cohortId=b",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"ArchiveCohort"
									],
									"query": [
										{
											"key": "cohortId",
											"value": "b"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sat, 28 Nov 2020 00:52:56 GMT"
								}
							],
							"cookie": [],
							"body": "Error(s) During ArchiveCohort: Invalid value for Cohort Id"
						}
					]
				},
				{
					"name": "/application/ArchiveCourse",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/ArchiveCourse?courseId=2147483648",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"ArchiveCourse"
							],
							"query": [
								{
									"key": "courseId",
									"value": "2147483648",
									"description": "Error(s) During ArchiveCourse: Invalid value for Course Id, Course Id value should be between 1 & 2147483647 inclusive"
								}
							]
						},
						"description": "Archive Cohort by CohortId, call with valid parameters key and out of range value CourseId (int(10) 10)"
					},
					"response": [
						{
							"name": "/application/ArchiveCohort",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "https://localhost:44337/application/ArchiveCohort?cohortId=b",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"ArchiveCohort"
									],
									"query": [
										{
											"key": "cohortId",
											"value": "b"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sat, 28 Nov 2020 00:52:56 GMT"
								}
							],
							"cookie": [],
							"body": "Error(s) During ArchiveCohort: Invalid value for Cohort Id"
						}
					]
				},
				{
					"name": "/application/ArchiveCourse",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/ArchiveCourse?CourseId=1",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"ArchiveCourse"
							],
							"query": [
								{
									"key": "CourseId",
									"value": "1",
									"description": "Error(s) During ArchiveCourse: Course is already archived"
								}
							]
						},
						"description": "Archive Course by CourseId, call for archived Course, with valid parameters keys and values"
					},
					"response": []
				}
			],
			"description": "CourseController EndPoints Testing\r\n/application/CreateCourse\r\n/application/UpdateCourse\r\n/application/UpdateAssignedCourse\r\n/application/AssignCourse\r\n/application/GetAssignedCourse\r\n/application/GetCourses\r\n/application/GetCourseSummary\r\n/application/ArchiveCourse\r\n",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "f98ce87c-1ffa-42c7-bf7e-a10fba381c70",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "11242415-502f-4da5-b58e-722279ffa916",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "CohortCourseController",
			"item": [
				{
					"name": "application/GetAssignedCourse",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/GetAssignedCourse?cohortId=2&courseId=2",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"GetAssignedCourse"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "2"
								},
								{
									"key": "courseId",
									"value": "2"
								}
							]
						},
						"description": "application/GetAssignedCourse Api call, FK constraint check\r\nCreate with archived existing FK refrential"
					},
					"response": [
						{
							"name": "FAIL CALL application/GetAssignedCourse Instructor name",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44337/application/GetAssignedCourse?cohortId=1&courseId=2",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"GetAssignedCourse"
									],
									"query": [
										{
											"key": "cohortId",
											"value": "1"
										},
										{
											"key": "courseId",
											"value": "2"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "479"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sat, 28 Nov 2020 03:43:39 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"courseId\": 2,\n    \"name\": \"HTML\",\n    \"description\": \"Basics\",\n    \"durationHrs\": 25,\n    \"archive\": false,\n    \"homeworks\": [],\n    \"cohortCourses\": [\n        {\n            \"cohortId\": 1,\n            \"courseId\": 2,\n            \"instructorId\": 1,\n            \"startDate\": \"2020-04-04T00:00:00\",\n            \"endDate\": \"2020-05-04T00:00:00\",\n            \"resourcesLink\": null,\n            \"archive\": false,\n            \"cohort\": null,\n            \"instructor\": null\n        },\n        {\n            \"cohortId\": 2,\n            \"courseId\": 2,\n            \"instructorId\": 1,\n            \"startDate\": \"2020-04-04T00:00:00\",\n            \"endDate\": \"2020-05-04T00:00:00\",\n            \"resourcesLink\": null,\n            \"archive\": false,\n            \"cohort\": null,\n            \"instructor\": null\n        }\n    ]\n}"
						},
						{
							"name": "FAIL application/GetAssignedCourse No Error shown,No Content Found ",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44337/application/GetAssignedCourse?cohortId=5&courseId=1",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"GetAssignedCourse"
									],
									"query": [
										{
											"key": "cohortId",
											"value": "5"
										},
										{
											"key": "courseId",
											"value": "1"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sat, 28 Nov 2020 04:01:02 GMT"
								}
							],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "application/GetAssignedCourse",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/GetAssignedCourse?cohortId=1&courseId=5",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"GetAssignedCourse"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "1"
								},
								{
									"key": "courseId",
									"value": "5"
								}
							]
						},
						"description": "application/GetAssignedCourse Api call with invalid datatype (parsing)"
					},
					"response": [
						{
							"name": "FAIL CALL application/GetAssignedCourse Instructor name",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44337/application/GetAssignedCourse?cohortId=1&courseId=2",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"GetAssignedCourse"
									],
									"query": [
										{
											"key": "cohortId",
											"value": "1"
										},
										{
											"key": "courseId",
											"value": "2"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "479"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sat, 28 Nov 2020 03:43:39 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"courseId\": 2,\n    \"name\": \"HTML\",\n    \"description\": \"Basics\",\n    \"durationHrs\": 25,\n    \"archive\": false,\n    \"homeworks\": [],\n    \"cohortCourses\": [\n        {\n            \"cohortId\": 1,\n            \"courseId\": 2,\n            \"instructorId\": 1,\n            \"startDate\": \"2020-04-04T00:00:00\",\n            \"endDate\": \"2020-05-04T00:00:00\",\n            \"resourcesLink\": null,\n            \"archive\": false,\n            \"cohort\": null,\n            \"instructor\": null\n        },\n        {\n            \"cohortId\": 2,\n            \"courseId\": 2,\n            \"instructorId\": 1,\n            \"startDate\": \"2020-04-04T00:00:00\",\n            \"endDate\": \"2020-05-04T00:00:00\",\n            \"resourcesLink\": null,\n            \"archive\": false,\n            \"cohort\": null,\n            \"instructor\": null\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "application/GetAssignedCourse",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/GetAssignedCourse?cohortId=&courseId=",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"GetAssignedCourse"
							],
							"query": [
								{
									"key": "cohortId",
									"value": ""
								},
								{
									"key": "courseId",
									"value": ""
								}
							]
						},
						"description": "application/GetAssignedCourse Api call all parameters with null values"
					},
					"response": [
						{
							"name": "FAIL CALL application/GetAssignedCourse Instructor name",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44337/application/GetAssignedCourse?cohortId=1&courseId=2",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"GetAssignedCourse"
									],
									"query": [
										{
											"key": "cohortId",
											"value": "1"
										},
										{
											"key": "courseId",
											"value": "2"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "479"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sat, 28 Nov 2020 03:43:39 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"courseId\": 2,\n    \"name\": \"HTML\",\n    \"description\": \"Basics\",\n    \"durationHrs\": 25,\n    \"archive\": false,\n    \"homeworks\": [],\n    \"cohortCourses\": [\n        {\n            \"cohortId\": 1,\n            \"courseId\": 2,\n            \"instructorId\": 1,\n            \"startDate\": \"2020-04-04T00:00:00\",\n            \"endDate\": \"2020-05-04T00:00:00\",\n            \"resourcesLink\": null,\n            \"archive\": false,\n            \"cohort\": null,\n            \"instructor\": null\n        },\n        {\n            \"cohortId\": 2,\n            \"courseId\": 2,\n            \"instructorId\": 1,\n            \"startDate\": \"2020-04-04T00:00:00\",\n            \"endDate\": \"2020-05-04T00:00:00\",\n            \"resourcesLink\": null,\n            \"archive\": false,\n            \"cohort\": null,\n            \"instructor\": null\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "/application/GetAssignedCourse",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/GetAssignedCourse",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"GetAssignedCourse"
							]
						},
						"description": "/application/GetAssignedCourse Api call with no parameters"
					},
					"response": []
				},
				{
					"name": "application/GetAssignedCourse",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/GetAssignedCourse?cohortId=                       1&courseId=2                                ",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"GetAssignedCourse"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "                       1"
								},
								{
									"key": "courseId",
									"value": "2                                "
								}
							]
						},
						"description": "application/GetAssignedCourse Api call without trim"
					},
					"response": [
						{
							"name": "FAIL CALL application/GetAssignedCourse Instructor name",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44337/application/GetAssignedCourse?cohortId=1&courseId=2",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"GetAssignedCourse"
									],
									"query": [
										{
											"key": "cohortId",
											"value": "1"
										},
										{
											"key": "courseId",
											"value": "2"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "479"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sat, 28 Nov 2020 03:43:39 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"courseId\": 2,\n    \"name\": \"HTML\",\n    \"description\": \"Basics\",\n    \"durationHrs\": 25,\n    \"archive\": false,\n    \"homeworks\": [],\n    \"cohortCourses\": [\n        {\n            \"cohortId\": 1,\n            \"courseId\": 2,\n            \"instructorId\": 1,\n            \"startDate\": \"2020-04-04T00:00:00\",\n            \"endDate\": \"2020-05-04T00:00:00\",\n            \"resourcesLink\": null,\n            \"archive\": false,\n            \"cohort\": null,\n            \"instructor\": null\n        },\n        {\n            \"cohortId\": 2,\n            \"courseId\": 2,\n            \"instructorId\": 1,\n            \"startDate\": \"2020-04-04T00:00:00\",\n            \"endDate\": \"2020-05-04T00:00:00\",\n            \"resourcesLink\": null,\n            \"archive\": false,\n            \"cohort\": null,\n            \"instructor\": null\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "application/GetAssignedCourse",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/GetAssignedCourse?cohortId=        $$$$$      1&courseId=2     string                           ",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"GetAssignedCourse"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "        $$$$$      1"
								},
								{
									"key": "courseId",
									"value": "2     string                           "
								}
							]
						},
						"description": "application/GetAssignedCourse Api call with invalid datatype (parsing)"
					},
					"response": [
						{
							"name": "FAIL CALL application/GetAssignedCourse Instructor name",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44337/application/GetAssignedCourse?cohortId=1&courseId=2",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"GetAssignedCourse"
									],
									"query": [
										{
											"key": "cohortId",
											"value": "1"
										},
										{
											"key": "courseId",
											"value": "2"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "479"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sat, 28 Nov 2020 03:43:39 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"courseId\": 2,\n    \"name\": \"HTML\",\n    \"description\": \"Basics\",\n    \"durationHrs\": 25,\n    \"archive\": false,\n    \"homeworks\": [],\n    \"cohortCourses\": [\n        {\n            \"cohortId\": 1,\n            \"courseId\": 2,\n            \"instructorId\": 1,\n            \"startDate\": \"2020-04-04T00:00:00\",\n            \"endDate\": \"2020-05-04T00:00:00\",\n            \"resourcesLink\": null,\n            \"archive\": false,\n            \"cohort\": null,\n            \"instructor\": null\n        },\n        {\n            \"cohortId\": 2,\n            \"courseId\": 2,\n            \"instructorId\": 1,\n            \"startDate\": \"2020-04-04T00:00:00\",\n            \"endDate\": \"2020-05-04T00:00:00\",\n            \"resourcesLink\": null,\n            \"archive\": false,\n            \"cohort\": null,\n            \"instructor\": null\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "application/GetAssignedCourse",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/GetAssignedCourse?cohortId=1",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"GetAssignedCourse"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "1"
								},
								{
									"key": "courseId",
									"value": "2",
									"disabled": true
								}
							]
						},
						"description": "application/GetAssignedCourse Api call with some parameters"
					},
					"response": [
						{
							"name": "FAIL CALL application/GetAssignedCourse Instructor name",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44337/application/GetAssignedCourse?cohortId=1&courseId=2",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"GetAssignedCourse"
									],
									"query": [
										{
											"key": "cohortId",
											"value": "1"
										},
										{
											"key": "courseId",
											"value": "2"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "479"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sat, 28 Nov 2020 03:43:39 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"courseId\": 2,\n    \"name\": \"HTML\",\n    \"description\": \"Basics\",\n    \"durationHrs\": 25,\n    \"archive\": false,\n    \"homeworks\": [],\n    \"cohortCourses\": [\n        {\n            \"cohortId\": 1,\n            \"courseId\": 2,\n            \"instructorId\": 1,\n            \"startDate\": \"2020-04-04T00:00:00\",\n            \"endDate\": \"2020-05-04T00:00:00\",\n            \"resourcesLink\": null,\n            \"archive\": false,\n            \"cohort\": null,\n            \"instructor\": null\n        },\n        {\n            \"cohortId\": 2,\n            \"courseId\": 2,\n            \"instructorId\": 1,\n            \"startDate\": \"2020-04-04T00:00:00\",\n            \"endDate\": \"2020-05-04T00:00:00\",\n            \"resourcesLink\": null,\n            \"archive\": false,\n            \"cohort\": null,\n            \"instructor\": null\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "application/GetAssignedCourse",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/GetAssignedCourse?cohortId=3&courseId=2",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"GetAssignedCourse"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "3"
								},
								{
									"key": "courseId",
									"value": "2"
								}
							]
						},
						"description": "application/GetAssignedCourse Api call with all valid parameters"
					},
					"response": [
						{
							"name": "FAIL CALL application/GetAssignedCourse",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44337/application/GetAssignedCourse?cohortId=1&courseId=2",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"GetAssignedCourse"
									],
									"query": [
										{
											"key": "cohortId",
											"value": "1"
										},
										{
											"key": "courseId",
											"value": "2"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "479"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sat, 28 Nov 2020 03:43:39 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"courseId\": 2,\n    \"name\": \"HTML\",\n    \"description\": \"Basics\",\n    \"durationHrs\": 25,\n    \"archive\": false,\n    \"homeworks\": [],\n    \"cohortCourses\": [\n        {\n            \"cohortId\": 1,\n            \"courseId\": 2,\n            \"instructorId\": 1,\n            \"startDate\": \"2020-04-04T00:00:00\",\n            \"endDate\": \"2020-05-04T00:00:00\",\n            \"resourcesLink\": null,\n            \"archive\": false,\n            \"cohort\": null,\n            \"instructor\": null\n        },\n        {\n            \"cohortId\": 2,\n            \"courseId\": 2,\n            \"instructorId\": 1,\n            \"startDate\": \"2020-04-04T00:00:00\",\n            \"endDate\": \"2020-05-04T00:00:00\",\n            \"resourcesLink\": null,\n            \"archive\": false,\n            \"cohort\": null,\n            \"instructor\": null\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "application/GetAssignedCourse",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/GetAssignedCourse?cohortId=&courseId=",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"GetAssignedCourse"
							],
							"query": [
								{
									"key": "cohortId",
									"value": ""
								},
								{
									"key": "courseId",
									"value": ""
								}
							]
						},
						"description": "application/GetAssignedCourse Api call with just whitespaces for Not Null Parameters no data in it \"\""
					},
					"response": [
						{
							"name": "FAIL CALL application/GetAssignedCourse Instructor name",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44337/application/GetAssignedCourse?cohortId=1&courseId=2",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"GetAssignedCourse"
									],
									"query": [
										{
											"key": "cohortId",
											"value": "1"
										},
										{
											"key": "courseId",
											"value": "2"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "479"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sat, 28 Nov 2020 03:43:39 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"courseId\": 2,\n    \"name\": \"HTML\",\n    \"description\": \"Basics\",\n    \"durationHrs\": 25,\n    \"archive\": false,\n    \"homeworks\": [],\n    \"cohortCourses\": [\n        {\n            \"cohortId\": 1,\n            \"courseId\": 2,\n            \"instructorId\": 1,\n            \"startDate\": \"2020-04-04T00:00:00\",\n            \"endDate\": \"2020-05-04T00:00:00\",\n            \"resourcesLink\": null,\n            \"archive\": false,\n            \"cohort\": null,\n            \"instructor\": null\n        },\n        {\n            \"cohortId\": 2,\n            \"courseId\": 2,\n            \"instructorId\": 1,\n            \"startDate\": \"2020-04-04T00:00:00\",\n            \"endDate\": \"2020-05-04T00:00:00\",\n            \"resourcesLink\": null,\n            \"archive\": false,\n            \"cohort\": null,\n            \"instructor\": null\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "application/GetAssignedCourse",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/GetAssignedCourse?cohortId=2string&courseId=1$$$$$",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"GetAssignedCourse"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "2string"
								},
								{
									"key": "courseId",
									"value": "1$$$$$"
								}
							]
						},
						"description": "application/GetAssignedCourseNumeric values out of range  i.e., int and float datatypes"
					},
					"response": [
						{
							"name": "FAIL CALL application/GetAssignedCourse Instructor name",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44337/application/GetAssignedCourse?cohortId=1&courseId=2",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"GetAssignedCourse"
									],
									"query": [
										{
											"key": "cohortId",
											"value": "1"
										},
										{
											"key": "courseId",
											"value": "2"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "479"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sat, 28 Nov 2020 03:43:39 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"courseId\": 2,\n    \"name\": \"HTML\",\n    \"description\": \"Basics\",\n    \"durationHrs\": 25,\n    \"archive\": false,\n    \"homeworks\": [],\n    \"cohortCourses\": [\n        {\n            \"cohortId\": 1,\n            \"courseId\": 2,\n            \"instructorId\": 1,\n            \"startDate\": \"2020-04-04T00:00:00\",\n            \"endDate\": \"2020-05-04T00:00:00\",\n            \"resourcesLink\": null,\n            \"archive\": false,\n            \"cohort\": null,\n            \"instructor\": null\n        },\n        {\n            \"cohortId\": 2,\n            \"courseId\": 2,\n            \"instructorId\": 1,\n            \"startDate\": \"2020-04-04T00:00:00\",\n            \"endDate\": \"2020-05-04T00:00:00\",\n            \"resourcesLink\": null,\n            \"archive\": false,\n            \"cohort\": null,\n            \"instructor\": null\n        }\n    ]\n}"
						},
						{
							"name": "FAIL application/GetAssignedCourse No Error shown,No Content Found ",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44337/application/GetAssignedCourse?cohortId=5&courseId=1",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"GetAssignedCourse"
									],
									"query": [
										{
											"key": "cohortId",
											"value": "5"
										},
										{
											"key": "courseId",
											"value": "1"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sat, 28 Nov 2020 04:01:02 GMT"
								}
							],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "/application/AssignCourse",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/AssignCourse?cohortId=2&courseId=3&instructorId=1&startDate=2020/04/04                                      &endDate=2020/05/04                       &resourcesLink=https://docs.google.com/document/d/1q4GL3N9jYn4prBeEj7fCRIBqGpKlGcuEtj2kwSiwqvs/edi",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"AssignCourse"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "2"
								},
								{
									"key": "courseId",
									"value": "3"
								},
								{
									"key": "instructorId",
									"value": "1"
								},
								{
									"key": "startDate",
									"value": "2020/04/04                                      "
								},
								{
									"key": "endDate",
									"value": "2020/05/04                       "
								},
								{
									"key": "resourcesLink",
									"value": "https://docs.google.com/document/d/1q4GL3N9jYn4prBeEj7fCRIBqGpKlGcuEtj2kwSiwqvs/edi"
								}
							]
						},
						"description": "/application/AssignCourse Api call, duplicate check by id"
					},
					"response": []
				},
				{
					"name": "/application/AssignCourse",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/AssignCourse?cohortId=4&courseId=3&instructorId=1&startDate=2020/10/04                                      &endDate=2020/05/04                       &resourcesLink=https://docs.google.com/document/d/1q4GL3N9jYn4prBeEj7fCRIBqGpKlGcuEtj2kwSiwqvs/edi",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"AssignCourse"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "4"
								},
								{
									"key": "courseId",
									"value": "3"
								},
								{
									"key": "instructorId",
									"value": "1"
								},
								{
									"key": "startDate",
									"value": "2020/10/04                                      "
								},
								{
									"key": "endDate",
									"value": "2020/05/04                       "
								},
								{
									"key": "resourcesLink",
									"value": "https://docs.google.com/document/d/1q4GL3N9jYn4prBeEj7fCRIBqGpKlGcuEtj2kwSiwqvs/edi"
								}
							]
						},
						"description": "/application/AssignCourse Api call,End date is older than start date"
					},
					"response": []
				},
				{
					"name": "/application/AssignCourse",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/AssignCourse?cohortId=1",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"AssignCourse"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "1"
								}
							]
						},
						"description": "/application/AssignCourse Api call with some parameters"
					},
					"response": []
				},
				{
					"name": "/application/AssignCourse",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/AssignCourse?cohortId=2&courseId=1&instructorId=1&startDate=2020/04/04 string                                      &endDate=2020/05/04                       string&resourcesLink=https://www.test.com",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"AssignCourse"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "2"
								},
								{
									"key": "courseId",
									"value": "1"
								},
								{
									"key": "instructorId",
									"value": "1"
								},
								{
									"key": "startDate",
									"value": "2020/04/04 string                                      "
								},
								{
									"key": "endDate",
									"value": "2020/05/04                       string"
								},
								{
									"key": "resourcesLink",
									"value": "https://www.test.com"
								}
							]
						},
						"description": "/application/AssignCourse Api call with invalid datatype (parsing)"
					},
					"response": []
				},
				{
					"name": "/application/AssignCourse",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/AssignCourse?cohortId=&courseId=&instructorId=&startDate=&endDate=",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"AssignCourse"
							],
							"query": [
								{
									"key": "cohortId",
									"value": ""
								},
								{
									"key": "courseId",
									"value": ""
								},
								{
									"key": "instructorId",
									"value": ""
								},
								{
									"key": "startDate",
									"value": ""
								},
								{
									"key": "endDate",
									"value": ""
								}
							]
						},
						"description": "/application/AssignCourse  Api call with  all parameters Api call all parameters with null values"
					},
					"response": []
				},
				{
					"name": "/application/AssignCourse",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/AssignCourse?cohortId=1&courseId=3&instructorId=1&startDate=2020/04/04                                      &endDate=2020/05/04                       &resourcesLink =www.test.ca",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"AssignCourse"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "1"
								},
								{
									"key": "courseId",
									"value": "3"
								},
								{
									"key": "instructorId",
									"value": "1"
								},
								{
									"key": "startDate",
									"value": "2020/04/04                                      "
								},
								{
									"key": "endDate",
									"value": "2020/05/04                       "
								},
								{
									"key": "resourcesLink ",
									"value": "www.test.ca"
								}
							]
						},
						"description": "/application/AssignCourse Api call without trim"
					},
					"response": []
				},
				{
					"name": "/application/AssignCourse",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/AssignCourse?cohortId=2&courseId=2&instructorId=1&startDate=&endDate=",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"AssignCourse"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "2"
								},
								{
									"key": "courseId",
									"value": "2"
								},
								{
									"key": "instructorId",
									"value": "1"
								},
								{
									"key": "startDate",
									"value": ""
								},
								{
									"key": "endDate",
									"value": ""
								}
							]
						},
						"description": "/application/AssignCourse Api call with just whitespaces for Not Null Parameters no data in it \"\""
					},
					"response": []
				},
				{
					"name": "/application/AssignCourse",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/AssignCourse?cohortId=5&courseId=1&instructorId=1&startDate=2020/04/04                                      &endDate=2020/05/04                       &resourcesLink=https://docs.google.com/document/d/1q4GL3N9jYn4prBeEj7fCRIBqGpKlGcuEtj2kwSiwqvs/edithttps://docs.google.com/document/d/1q4GL3N9jYn4prBeEj7fCRIBqGpKlGcuEtj2kwSiwqvs/edit",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"AssignCourse"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "5"
								},
								{
									"key": "courseId",
									"value": "1"
								},
								{
									"key": "instructorId",
									"value": "1"
								},
								{
									"key": "startDate",
									"value": "2020/04/04                                      "
								},
								{
									"key": "endDate",
									"value": "2020/05/04                       "
								},
								{
									"key": "resourcesLink",
									"value": "https://docs.google.com/document/d/1q4GL3N9jYn4prBeEj7fCRIBqGpKlGcuEtj2kwSiwqvs/edithttps://docs.google.com/document/d/1q4GL3N9jYn4prBeEj7fCRIBqGpKlGcuEtj2kwSiwqvs/edit"
								}
							]
						},
						"description": "/application/AssignCourse Api call, FK constraint check\r\nCreate with archived existing FK refrential"
					},
					"response": []
				},
				{
					"name": "/application/AssignCourse",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/AssignCourse?cohortId=1&courseId=2&instructorId=1&startDate=2020/04/04                                      &endDate=2020/05/04                       &resourcesLink=",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"AssignCourse"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "1"
								},
								{
									"key": "courseId",
									"value": "2"
								},
								{
									"key": "instructorId",
									"value": "1"
								},
								{
									"key": "startDate",
									"value": "2020/04/04                                      "
								},
								{
									"key": "endDate",
									"value": "2020/05/04                       "
								},
								{
									"key": "resourcesLink",
									"value": ""
								}
							]
						},
						"description": "/application/AssignCourse Api call with no param for nullable fileds"
					},
					"response": []
				},
				{
					"name": "/application/AssignCourse",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/AssignCourse?cohortId=30000000000000000000000000&courseId=-1000000000000000&instructorId=1888888888888888888888888&startDate=2020/04/04                                      &endDate=2020/05/04                       &resourcesLink=https://docs.google.com/document/d/1q4GL3N9jYn4prBeEj7fCRIBqGpKlGcuEtj2kwSiwqvs/edithttps://docs.google.com/document/d/1q4GL3N9jYn4prBeEj7fCRIBqGpKlGcuEtj2kwSiwqvs/edithttps://docs.google.com/document/d/1q4GL3N9jYn4prBeEj7fCRIBqGpKlGcuEtj2kwSiwqvs/edithttps://docs.google.com/document/d/1q4GL3N9jYn4prBeEj7fCRIBqGpKlGcuEtj2kwSiwqvs/edithttps://docs.google.com/document/d/1q4GL3N9jYn4prBeEj7fCRIBqGpKlGcuEtj2kwSiwqvs/edithttps://docs.google.com/document/d/1q4GL3N9jYn4prBeEj7fCRIBqGpKlGcuEtj2kwSiwqvs/edithttps://docs.google.com/document/d/1q4GL3N9jYn4prBeEj7fCRIBqGpKlGcuEtj2kwSiwqvs/edithttps://docs.google.com/document/d/1q4GL3N9jYn4prBeEj7fCRIBqGpKlGcuEtj2kwSiwqvs/edithttps://docs.google.com/document/d/1q4GL3N9jYn4prBeEj7fCRIBqGpKlGcuEtj2kwSiwqvs/edithttps://docs.google.com/document/d/1q4GL3N9jYn4prBeEj7fCRIBqGpKlGcuEtj2kwSiwqvs/edithttps://docs.google.com/document/d/1q4GL3N9jYn4prBeEj7fCRIBqGpKlGcuEtj2kwSiwqvs/edithttps://docs.google.com/document/d/1q4GL3N9jYn4prBeEj7fCRIBqGpKlGcuEtj2kwSiwqvs/edithttps://docs.google.com/document/d/1q4GL3N9jYn4prBeEj7fCRIBqGpKlGcuEtj2kwSiwqvs/edithttps://docs.google.com/document/d/1q4GL3N9jYn4prBeEj7fCRIBqGpKlGcuEtj2kwSiwqvs/edithttps://docs.google.com/document/d/1q4GL3N9jYn4prBeEj7fCRIBqGpKlGcuEtj2kwSiwqvs/edithttps://docs.google.com/document/d/1q4GL3N9jYn4prBeEj7fCRIBqGpKlGcuEtj2kwSiwqvs/edithttps://docs.google.com/document/d/1q4GL3N9jYn4prBeEj7fCRIBqGpKlGcuEtj2kwSiwqvs/edithttps://docs.google.com/document/d/1q4GL3N9jYn4prBeEj7fCRIBqGpKlGcuEtj2kwSiwqvs/edithttps://docs.google.com/document/d/1q4GL3N9jYn4prBeEj7fCRIBqGpKlGcuEtj2kwSiwqvs/edithttps://docs.google.com/document/d/1q4GL3N9jYn4prBeEj7fCRIBqGpKlGcuEtj2kwSiwqvs/edit",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"AssignCourse"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "30000000000000000000000000"
								},
								{
									"key": "courseId",
									"value": "-1000000000000000"
								},
								{
									"key": "instructorId",
									"value": "1888888888888888888888888"
								},
								{
									"key": "startDate",
									"value": "2020/04/04                                      "
								},
								{
									"key": "endDate",
									"value": "2020/05/04                       "
								},
								{
									"key": "resourcesLink",
									"value": "https://docs.google.com/document/d/1q4GL3N9jYn4prBeEj7fCRIBqGpKlGcuEtj2kwSiwqvs/edithttps://docs.google.com/document/d/1q4GL3N9jYn4prBeEj7fCRIBqGpKlGcuEtj2kwSiwqvs/edithttps://docs.google.com/document/d/1q4GL3N9jYn4prBeEj7fCRIBqGpKlGcuEtj2kwSiwqvs/edithttps://docs.google.com/document/d/1q4GL3N9jYn4prBeEj7fCRIBqGpKlGcuEtj2kwSiwqvs/edithttps://docs.google.com/document/d/1q4GL3N9jYn4prBeEj7fCRIBqGpKlGcuEtj2kwSiwqvs/edithttps://docs.google.com/document/d/1q4GL3N9jYn4prBeEj7fCRIBqGpKlGcuEtj2kwSiwqvs/edithttps://docs.google.com/document/d/1q4GL3N9jYn4prBeEj7fCRIBqGpKlGcuEtj2kwSiwqvs/edithttps://docs.google.com/document/d/1q4GL3N9jYn4prBeEj7fCRIBqGpKlGcuEtj2kwSiwqvs/edithttps://docs.google.com/document/d/1q4GL3N9jYn4prBeEj7fCRIBqGpKlGcuEtj2kwSiwqvs/edithttps://docs.google.com/document/d/1q4GL3N9jYn4prBeEj7fCRIBqGpKlGcuEtj2kwSiwqvs/edithttps://docs.google.com/document/d/1q4GL3N9jYn4prBeEj7fCRIBqGpKlGcuEtj2kwSiwqvs/edithttps://docs.google.com/document/d/1q4GL3N9jYn4prBeEj7fCRIBqGpKlGcuEtj2kwSiwqvs/edithttps://docs.google.com/document/d/1q4GL3N9jYn4prBeEj7fCRIBqGpKlGcuEtj2kwSiwqvs/edithttps://docs.google.com/document/d/1q4GL3N9jYn4prBeEj7fCRIBqGpKlGcuEtj2kwSiwqvs/edithttps://docs.google.com/document/d/1q4GL3N9jYn4prBeEj7fCRIBqGpKlGcuEtj2kwSiwqvs/edithttps://docs.google.com/document/d/1q4GL3N9jYn4prBeEj7fCRIBqGpKlGcuEtj2kwSiwqvs/edithttps://docs.google.com/document/d/1q4GL3N9jYn4prBeEj7fCRIBqGpKlGcuEtj2kwSiwqvs/edithttps://docs.google.com/document/d/1q4GL3N9jYn4prBeEj7fCRIBqGpKlGcuEtj2kwSiwqvs/edithttps://docs.google.com/document/d/1q4GL3N9jYn4prBeEj7fCRIBqGpKlGcuEtj2kwSiwqvs/edithttps://docs.google.com/document/d/1q4GL3N9jYn4prBeEj7fCRIBqGpKlGcuEtj2kwSiwqvs/edit"
								}
							]
						},
						"description": "/application/AssignCourse Api call with param exceeding the size"
					},
					"response": []
				},
				{
					"name": "/application/AssignCourse",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/AssignCourse?cohortId=1&courseId=1&instructorId=1&startDate=2020/04/01&endDate=2020/07/01",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"AssignCourse"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "1"
								},
								{
									"key": "courseId",
									"value": "1"
								},
								{
									"key": "instructorId",
									"value": "1"
								},
								{
									"key": "startDate",
									"value": "2020/04/01"
								},
								{
									"key": "endDate",
									"value": "2020/07/01"
								}
							]
						},
						"description": "/application/AssignCourse  Api call with  all parameters provided"
					},
					"response": []
				},
				{
					"name": "/application/AssignCourse",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/AssignCourse?cohortId=4&courseId=1&instructorId=1&startDate=2020/04/04                                      &endDate=2020/05/04                       &resourcesLink=https://docs.google.com/document/d/1q4GL3N9jYn4prBeEj7fCRIBqGpKlGcuEtj2kwSiwqvs/edi",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"AssignCourse"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "4"
								},
								{
									"key": "courseId",
									"value": "1"
								},
								{
									"key": "instructorId",
									"value": "1"
								},
								{
									"key": "startDate",
									"value": "2020/04/04                                      "
								},
								{
									"key": "endDate",
									"value": "2020/05/04                       "
								},
								{
									"key": "resourcesLink",
									"value": "https://docs.google.com/document/d/1q4GL3N9jYn4prBeEj7fCRIBqGpKlGcuEtj2kwSiwqvs/edi"
								}
							]
						},
						"description": "/application/AssignCourse Api call, FK constraint check\r\nAPI Create action with none existing FK refrential"
					},
					"response": []
				},
				{
					"name": "/application/AssignCourse",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/AssignCourse?cohortId=3&courseId=1&instructorId=1&startDate=2020/04/04                                      &endDate=2020/05/04                       &resourcesLink=www.test.ca",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"AssignCourse"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "3"
								},
								{
									"key": "courseId",
									"value": "1"
								},
								{
									"key": "instructorId",
									"value": "1"
								},
								{
									"key": "startDate",
									"value": "2020/04/04                                      "
								},
								{
									"key": "endDate",
									"value": "2020/05/04                       "
								},
								{
									"key": "resourcesLink",
									"value": "www.test.ca"
								}
							]
						},
						"description": "/application/AssignCourse Api call with invalid hyperlink format"
					},
					"response": []
				},
				{
					"name": "/application/AssignCourse",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/AssignCourse",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"AssignCourse"
							]
						},
						"description": "/application/AssignCourse Api call with no parameters"
					},
					"response": []
				},
				{
					"name": "/application/AssignCourse",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/AssignCourse?cohortId=2&courseId=1&instructorId=1&startDate=2020/04/04                                      &endDate=2020/05/04                       &resourcesLink=https://docs.google.com/document/u/1/d/1q4GL3N9jYn4prBeEj7fCRIBqGpKlGcuEtj2kwSiwqvs/edit%23",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"AssignCourse"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "2"
								},
								{
									"key": "courseId",
									"value": "1"
								},
								{
									"key": "instructorId",
									"value": "1"
								},
								{
									"key": "startDate",
									"value": "2020/04/04                                      "
								},
								{
									"key": "endDate",
									"value": "2020/05/04                       "
								},
								{
									"key": "resourcesLink",
									"value": "https://docs.google.com/document/u/1/d/1q4GL3N9jYn4prBeEj7fCRIBqGpKlGcuEtj2kwSiwqvs/edit#"
								}
							]
						},
						"description": "/application/AssignCourse Api call with valid hyperlink format"
					},
					"response": []
				},
				{
					"name": "/application/AssignCourse",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/AssignCourse?cohortId=4&courseId=3&instructorId=1&startDate=2020/14/04                                      &endDate=2020/05/04                       &resourcesLink=https://docs.google.com/document/d/1q4GL3N9jYn4prBeEj7fCRIBqGpKlGcuEtj2kwSiwqvs/edi",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"AssignCourse"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "4"
								},
								{
									"key": "courseId",
									"value": "3"
								},
								{
									"key": "instructorId",
									"value": "1"
								},
								{
									"key": "startDate",
									"value": "2020/14/04                                      "
								},
								{
									"key": "endDate",
									"value": "2020/05/04                       "
								},
								{
									"key": "resourcesLink",
									"value": "https://docs.google.com/document/d/1q4GL3N9jYn4prBeEj7fCRIBqGpKlGcuEtj2kwSiwqvs/edi"
								}
							]
						},
						"description": "/application/AssignCourse Api call, Numeric values out of range  i.e.,Date datatypes"
					},
					"response": []
				},
				{
					"name": "/application/UpdateAssignedCourse",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateAssignedCourse?cohortId=             1$$$&courseId=            3%26%26%26%26&instructorId=                  1?????????&startDate=2020/06/04%%%%                   &endDate=2020/08/30                         AAAA",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateAssignedCourse"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "             1$$$"
								},
								{
									"key": "courseId",
									"value": "            3&&&&"
								},
								{
									"key": "instructorId",
									"value": "                  1?????????"
								},
								{
									"key": "startDate",
									"value": "2020/06/04%%%%                   "
								},
								{
									"key": "endDate",
									"value": "2020/08/30                         AAAA"
								}
							]
						},
						"description": "/application/UpdateAssignedCourse Api call with invalid datatype (parsing)"
					},
					"response": []
				},
				{
					"name": "/application/UpdateAssignedCourse",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateAssignedCourse",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateAssignedCourse"
							]
						},
						"description": "/application/UpdateAssignedCourse Api call with no parameters"
					},
					"response": []
				},
				{
					"name": "/application/UpdateAssignedCourse",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateAssignedCourse",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateAssignedCourse"
							]
						},
						"description": "/application/UpdateAssignedCourse with No seed data"
					},
					"response": []
				},
				{
					"name": "/application/GetAssignedCourse",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/GetAssignedCourse",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"GetAssignedCourse"
							],
							"query": [
								{
									"key": "courseId",
									"value": "2",
									"disabled": true
								},
								{
									"key": "name",
									"value": "PHP",
									"disabled": true
								},
								{
									"key": "description",
									"value": "Basics",
									"disabled": true
								},
								{
									"key": "durationHrs",
									"value": "500000",
									"disabled": true
								}
							]
						},
						"description": "/application/GetAssignedCourse Api call with wrong api call type, all parameters provided"
					},
					"response": []
				},
				{
					"name": "/application/UpdateAssignedCourse",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateAssignedCourse?cohortId=&courseId=&instructorId=&startDate=2020/06/04&endDate=2020/08/30",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateAssignedCourse"
							],
							"query": [
								{
									"key": "cohortId",
									"value": ""
								},
								{
									"key": "courseId",
									"value": ""
								},
								{
									"key": "instructorId",
									"value": ""
								},
								{
									"key": "startDate",
									"value": "2020/06/04"
								},
								{
									"key": "endDate",
									"value": "2020/08/30"
								}
							]
						},
						"description": "/application/UpdateAssignedCourse Api call with just whitespaces for Not Null Parameters no data in it \"\""
					},
					"response": []
				},
				{
					"name": "/application/UpdateAssignedCourse",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateAssignedCourse?cohortId=1&courseId=2&instructorId=1&startDate=2020/06/04&endDate=2020/08/30",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateAssignedCourse"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "1"
								},
								{
									"key": "courseId",
									"value": "2"
								},
								{
									"key": "instructorId",
									"value": "1"
								},
								{
									"key": "startDate",
									"value": "2020/06/04"
								},
								{
									"key": "endDate",
									"value": "2020/08/30"
								}
							]
						},
						"description": "/application/UpdateAssignedCourse Api call with all valid parameters"
					},
					"response": []
				},
				{
					"name": "/application/UpdateAssignedCourse",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateAssignedCourse?cohortId=&courseId=&instructorId=&startDate=2020/06/04&endDate=2020/08/30",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateAssignedCourse"
							],
							"query": [
								{
									"key": "cohortId",
									"value": ""
								},
								{
									"key": "courseId",
									"value": ""
								},
								{
									"key": "instructorId",
									"value": ""
								},
								{
									"key": "startDate",
									"value": "2020/06/04"
								},
								{
									"key": "endDate",
									"value": "2020/08/30"
								}
							]
						},
						"description": "/application/UpdateAssignedCourse Api call all parameters with null values"
					},
					"response": []
				},
				{
					"name": "/application/UpdateAssignedCourse",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateAssignedCourse?cohortId=1&courseId=2&startDate=2020/06/04&endDate=2020/08/30",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateAssignedCourse"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "1"
								},
								{
									"key": "courseId",
									"value": "2"
								},
								{
									"key": "instructorId",
									"value": "1",
									"disabled": true
								},
								{
									"key": "startDate",
									"value": "2020/06/04"
								},
								{
									"key": "endDate",
									"value": "2020/08/30"
								}
							]
						},
						"description": "/application/UpdateAssignedCourse Api call with some parameters"
					},
					"response": []
				},
				{
					"name": "/application/ArchiveAssignedCourse",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/ArchiveAssignedCourse?courseId=1&cohortId=4",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"ArchiveAssignedCourse"
							],
							"query": [
								{
									"key": "courseId",
									"value": "1",
									"description": "405Method Not Allowed"
								},
								{
									"key": "cohortId",
									"value": "4"
								}
							]
						},
						"description": "Archive ArchiveAssignedCourse by CohortId and CourseId, call with valid parameters keys and values but GET Request"
					},
					"response": []
				},
				{
					"name": "/application/UpdateAssignedCourse",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateAssignedCourse?cohortId=5&courseId=1&instructorId=1&startDate=2020/08/05&endDate=2020/12/04",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateAssignedCourse"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "5"
								},
								{
									"key": "courseId",
									"value": "1"
								},
								{
									"key": "instructorId",
									"value": "1"
								},
								{
									"key": "startDate",
									"value": "2020/08/05"
								},
								{
									"key": "endDate",
									"value": "2020/12/04"
								}
							]
						},
						"description": "/application/UpdateAssignedCourse Api call to update archived record"
					},
					"response": []
				},
				{
					"name": "/application/UpdateAssignedCourse",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateAssignedCourse?cohortId=2147483647000&courseId=200000000000000000000000000000&instructorId=1000000000000000000000000000000&startDate=2020/08/05                 0000000/01/04&endDate=20/12/2020",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateAssignedCourse"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "2147483647000"
								},
								{
									"key": "courseId",
									"value": "200000000000000000000000000000"
								},
								{
									"key": "instructorId",
									"value": "1000000000000000000000000000000"
								},
								{
									"key": "startDate",
									"value": "2020/08/05                 0000000/01/04"
								},
								{
									"key": "endDate",
									"value": "20/12/2020"
								}
							]
						},
						"description": "/application/UpdateAssignedCourse Numeric values out of range  i.e., Date datatypes"
					},
					"response": []
				},
				{
					"name": "/application/UpdateAssignedCourse",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateAssignedCourse?cohortId=5&courseId=1&instructorId=1&startDate=2020/08/01&endDate=2020/12/04",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateAssignedCourse"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "5"
								},
								{
									"key": "courseId",
									"value": "1"
								},
								{
									"key": "instructorId",
									"value": "1"
								},
								{
									"key": "startDate",
									"value": "2020/08/01"
								},
								{
									"key": "endDate",
									"value": "2020/12/04"
								}
							]
						},
						"description": "/application/UpdateAssignedCourse Api call, FK constraint check\r\nUpdate/Get with none existing FK refrential"
					},
					"response": []
				},
				{
					"name": "/application/UpdateAssignedCourse",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateAssignedCourse?cohortId=             1&courseId=            3&instructorId=                  1&startDate=2020/06/04                   &endDate=2020/08/30                         ",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateAssignedCourse"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "             1"
								},
								{
									"key": "courseId",
									"value": "            3"
								},
								{
									"key": "instructorId",
									"value": "                  1"
								},
								{
									"key": "startDate",
									"value": "2020/06/04                   "
								},
								{
									"key": "endDate",
									"value": "2020/08/30                         "
								}
							]
						},
						"description": "/application/UpdateAssignedCourse Api call without trim"
					},
					"response": []
				},
				{
					"name": "/application/UpdateAssignedCourse",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateAssignedCourse?cohortId=1&courseId=2&instructorId=1&startDate=2020/06/04&endDate=2020/08/30",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateAssignedCourse"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "1"
								},
								{
									"key": "courseId",
									"value": "2"
								},
								{
									"key": "instructorId",
									"value": "1"
								},
								{
									"key": "startDate",
									"value": "2020/06/04"
								},
								{
									"key": "endDate",
									"value": "2020/08/30"
								}
							]
						},
						"description": "/application/UpdateAssignedCourse Api call with no parameters"
					},
					"response": []
				},
				{
					"name": "/application/UpdateAssignedCourse",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateAssignedCourse?cohortId=1&courseId=6&instructorId=3&startDate=2020/08/01&endDate=2020/12/04",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateAssignedCourse"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "1"
								},
								{
									"key": "courseId",
									"value": "6"
								},
								{
									"key": "instructorId",
									"value": "3"
								},
								{
									"key": "startDate",
									"value": "2020/08/01"
								},
								{
									"key": "endDate",
									"value": "2020/12/04"
								}
							]
						},
						"description": "/application/UpdateAssignedCourse Api call, FK constraint check\r\nUpdate/Get with none existing FK refrential"
					},
					"response": []
				},
				{
					"name": "/application/UpdateAssignedCourse",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateAssignedCourse?cohortId=2&courseId=2&instructorId=1&startDate=2020/08/05   &endDate=2020/06/01",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateAssignedCourse"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "2"
								},
								{
									"key": "courseId",
									"value": "2"
								},
								{
									"key": "instructorId",
									"value": "1"
								},
								{
									"key": "startDate",
									"value": "2020/08/05   "
								},
								{
									"key": "endDate",
									"value": "2020/06/01"
								}
							]
						},
						"description": "/application/UpdateAssignedCourse End date is older than start date"
					},
					"response": []
				},
				{
					"name": "/application/ArchiveAssignedCourse",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/ArchiveAssignedCourse?courseId&cohortId",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"ArchiveAssignedCourse"
							],
							"query": [
								{
									"key": "courseId",
									"value": null,
									"description": "Error(s) During ArchiveAssignedCourse: courseId is null. (Parameter 'courseId'), cohortId is null. (Parameter 'cohortId'), No valid Course and Cohort combination found"
								},
								{
									"key": "cohortId",
									"value": null
								}
							]
						},
						"description": "Archive ArchiveAssignedCourse by CohortId and CourseId,  call with valid parameters key and missing value"
					},
					"response": []
				},
				{
					"name": "/application/ArchiveAssignedCourse",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/ArchiveAssignedCourse?",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"ArchiveAssignedCourse"
							],
							"query": [
								{
									"key": "",
									"value": null,
									"description": "Error(s) During ArchiveAssignedCourse: courseId is null. (Parameter 'courseId'), cohortId is null. (Parameter 'cohortId'), No valid Course and Cohort combination found"
								}
							]
						},
						"description": "Archive ArchiveAssignedCourse by CohortId and CourseId,  call with missing parameters key and value"
					},
					"response": []
				},
				{
					"name": "/application/ArchiveAssignedCourse",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/ArchiveAssignedCourse?courseId=5&cohortId=10",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"ArchiveAssignedCourse"
							],
							"query": [
								{
									"key": "courseId",
									"value": "5",
									"description": "Error(s) During ArchiveAssignedCourse: Course Id does not exist, Cohort Id does not exist, No valid Course and Cohort combination found"
								},
								{
									"key": "cohortId",
									"value": "10"
								}
							]
						},
						"description": "Archive ArchiveAssignedCourse by CohortId and CourseId,  call with valid parameters key and nonexisting value"
					},
					"response": []
				},
				{
					"name": "/application/ArchiveAssignedCourse",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/ArchiveAssignedCourse?courseId=d&cohortId=d&",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"ArchiveAssignedCourse"
							],
							"query": [
								{
									"key": "courseId",
									"value": "d",
									"description": "Error(s) During ArchiveAssignedCourse: Invalid value for Course Id, Course Id value should be between 1 & 2147483647 inclusive, No valid Course and Cohort combination found"
								},
								{
									"key": "cohortId",
									"value": "d",
									"description": "Error(s) During ArchiveAssignedCourse: Invalid value for Cohort Id, Cohort Id value should be between 1 & 2147483647 inclusive, No valid Course and Cohort combination found\n"
								},
								{
									"key": "",
									"value": null,
									"description": "Invalid value for Course Id, Course Id value should be between 1 & 2147483647 inclusive, Invalid value for Cohort Id, Cohort Id value should be between 1 & 2147483647 inclusive, No valid Course and Cohort combination found"
								}
							]
						},
						"description": "Archive ArchiveAssignedCourse by CohortId and CourseId, call with valid parameters key and invlaid value data type"
					},
					"response": [
						{
							"name": "/application/ArchiveCohort",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "https://localhost:44337/application/ArchiveCohort?cohortId=b",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"ArchiveCohort"
									],
									"query": [
										{
											"key": "cohortId",
											"value": "b"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sat, 28 Nov 2020 00:52:56 GMT"
								}
							],
							"cookie": [],
							"body": "Error(s) During ArchiveCohort: Invalid value for Cohort Id"
						}
					]
				},
				{
					"name": "/application/ArchiveAssignedCourse",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/ArchiveAssignedCourse?courseId=1&cohortId=4",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"ArchiveAssignedCourse"
							],
							"query": [
								{
									"key": "courseId",
									"value": "1",
									"description": "Unexpected server/database error occurred. System error message(s): Table 'azlearndb.course' doesn't exist"
								},
								{
									"key": "cohortId",
									"value": "4"
								}
							]
						},
						"description": "Archive ArchiveAssignedCourse by CohortId and CourseId,  call with valid parameters and no database"
					},
					"response": [
						{
							"name": "/application/ArchiveCohort",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "https://localhost:44337/application/ArchiveCohort?cohortId=b",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"ArchiveCohort"
									],
									"query": [
										{
											"key": "cohortId",
											"value": "b"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sat, 28 Nov 2020 00:52:56 GMT"
								}
							],
							"cookie": [],
							"body": "Error(s) During ArchiveCohort: Invalid value for Cohort Id"
						}
					]
				},
				{
					"name": "/application/ArchiveAssignedCourse",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/ArchiveAssignedCourse?courseId=                      &cohortId=                    ",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"ArchiveAssignedCourse"
							],
							"query": [
								{
									"key": "courseId",
									"value": "                      ",
									"description": "Error(s) During ArchiveAssignedCourse: courseId is null. (Parameter 'courseId'), cohortId is null. (Parameter 'cohortId'), No valid Course and Cohort combination found"
								},
								{
									"key": "cohortId",
									"value": "                    "
								}
							]
						},
						"description": "Archive ArchiveAssignedCourse by CohortId and CourseId, call with valid parameters key and whitespaces as value"
					},
					"response": [
						{
							"name": "/application/ArchiveCohort",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "https://localhost:44337/application/ArchiveCohort?cohortId=b",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"ArchiveCohort"
									],
									"query": [
										{
											"key": "cohortId",
											"value": "b"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sat, 28 Nov 2020 00:52:56 GMT"
								}
							],
							"cookie": [],
							"body": "Error(s) During ArchiveCohort: Invalid value for Cohort Id"
						}
					]
				},
				{
					"name": "/application/ArchiveAssignedCourse",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/ArchiveAssignedCourse?courseId=            2              &cohortId=             4              ",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"ArchiveAssignedCourse"
							],
							"query": [
								{
									"key": "courseId",
									"value": "            2              ",
									"description": "Successfully Archived course assignment. Course Id: 2 | Cohort Id: 4"
								},
								{
									"key": "cohortId",
									"value": "             4              "
								}
							]
						},
						"description": "Archive ArchiveAssignedCourse by CohortId and CourseId, call with valid parameters key and whitespaces around the value"
					},
					"response": [
						{
							"name": "/application/ArchiveCohort",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "https://localhost:44337/application/ArchiveCohort?cohortId=b",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"ArchiveCohort"
									],
									"query": [
										{
											"key": "cohortId",
											"value": "b"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sat, 28 Nov 2020 00:52:56 GMT"
								}
							],
							"cookie": [],
							"body": "Error(s) During ArchiveCohort: Invalid value for Cohort Id"
						}
					]
				},
				{
					"name": "/application/ArchiveAssignedCourse",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/ArchiveAssignedCourse?courseId=1&cohortId=21474836470",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"ArchiveAssignedCourse"
							],
							"query": [
								{
									"key": "courseId",
									"value": "1",
									"description": "Error(s) During ArchiveAssignedCourse: Invalid value for Course Id, Course Id value should be between 1 & 2147483647 inclusive, No valid Course and Cohort combination found"
								},
								{
									"key": "cohortId",
									"value": "21474836470",
									"description": "Error(s) During ArchiveAssignedCourse: Invalid value for Cohort Id, Cohort Id value should be between 1 & 2147483647 inclusive, No valid Course and Cohort combination found"
								}
							]
						},
						"description": "Archive ArchiveAssignedCourse by CohortId and CourseId,  call with valid parameters key and out of range value CohortId / CourseId (int(10) 10)"
					},
					"response": [
						{
							"name": "/application/ArchiveCohort",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "https://localhost:44337/application/ArchiveCohort?cohortId=b",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"ArchiveCohort"
									],
									"query": [
										{
											"key": "cohortId",
											"value": "b"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sat, 28 Nov 2020 00:52:56 GMT"
								}
							],
							"cookie": [],
							"body": "Error(s) During ArchiveCohort: Invalid value for Cohort Id"
						}
					]
				},
				{
					"name": "/application/ArchiveAssignedCourse",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/ArchiveAssignedCourse?courseId=2&cohortId=4",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"ArchiveAssignedCourse"
							],
							"query": [
								{
									"key": "courseId",
									"value": "2",
									"description": "Error(s) During ArchiveAssignedCourse: Course and Cohort combination is already archived"
								},
								{
									"key": "cohortId",
									"value": "4"
								}
							]
						},
						"description": "Archive ArchiveAssignedCourse by CohortId and CourseId, call for archived cohort, with valid parameters keys and values"
					},
					"response": []
				},
				{
					"name": "/application/ArchiveAssignedCourse",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/ArchiveAssignedCourse?courseId=1&cohortId=4",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"ArchiveAssignedCourse"
							],
							"query": [
								{
									"key": "courseId",
									"value": "1",
									"description": "Successfully Archived course assignment. Course Id: 1 | Cohort Id: 4"
								},
								{
									"key": "cohortId",
									"value": "4"
								}
							]
						},
						"description": "Archive ArchiveAssignedCourse by CohortId and CourseId,  call with valid parameters keys and values"
					},
					"response": []
				},
				{
					"name": "/application/ArchiveAssignedCourse",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/ArchiveAssignedCourse?courseId&cohortId",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"ArchiveAssignedCourse"
							],
							"query": [
								{
									"key": "courseId",
									"value": null,
									"description": "Error(s) During ArchiveAssignedCourse: courseId is null. (Parameter 'courseId'), cohortId is null. (Parameter 'cohortId'), No valid Course and Cohort combination found"
								},
								{
									"key": "cohortId",
									"value": null
								}
							]
						},
						"description": "Archive ArchiveAssignedCourse by CohortId and CourseId,  call with valid parameters and no data seeded in target tables (cohortcourse, homework,etc.)"
					},
					"response": [
						{
							"name": "/application/ArchiveCohort",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "https://localhost:44337/application/ArchiveCohort?cohortId=b",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"ArchiveCohort"
									],
									"query": [
										{
											"key": "cohortId",
											"value": "b"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sat, 28 Nov 2020 00:52:56 GMT"
								}
							],
							"cookie": [],
							"body": "Error(s) During ArchiveCohort: Invalid value for Cohort Id"
						}
					]
				},
				{
					"name": "/application/ArchiveAssignedCourse",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/ArchiveAssignedCourse?courseId=1&cohortId=4",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"ArchiveAssignedCourse"
							],
							"query": [
								{
									"key": "courseId",
									"value": "1",
									"description": "Successfully Archived course assignment. Course Id: 1 | Cohort Id: 4"
								},
								{
									"key": "cohortId",
									"value": "4"
								}
							]
						},
						"description": "Archive ArchiveAssignedCourse by CohortId and CourseId, call with valid parameters and one parameter is archived and the other is active (FK constrainted archived)"
					},
					"response": [
						{
							"name": "/application/ArchiveCohort",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "https://localhost:44337/application/ArchiveCohort?cohortId=b",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"ArchiveCohort"
									],
									"query": [
										{
											"key": "cohortId",
											"value": "b"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sat, 28 Nov 2020 00:52:56 GMT"
								}
							],
							"cookie": [],
							"body": "Error(s) During ArchiveCohort: Invalid value for Cohort Id"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "HomeworkController",
			"item": [
				{
					"name": "/application/CreateHomework",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateHomework",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateHomework"
							]
						},
						"description": "/application/CreateHomework With No Parameters"
					},
					"response": []
				},
				{
					"name": "/application/CreateHomework",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateHomework?courseId=2&cohortId=1&instructorId=1&title=react calcULATOR&avgCompletionTime=1&dueDate=2020/01/04&isAssignment=true",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateHomework"
							],
							"query": [
								{
									"key": "courseId",
									"value": "2"
								},
								{
									"key": "cohortId",
									"value": "1"
								},
								{
									"key": "instructorId",
									"value": "1"
								},
								{
									"key": "title",
									"value": "react calcULATOR"
								},
								{
									"key": "avgCompletionTime",
									"value": "1"
								},
								{
									"key": "dueDate",
									"value": "2020/01/04"
								},
								{
									"key": "isAssignment",
									"value": "true"
								},
								{
									"key": "",
									"value": null,
									"disabled": true
								}
							]
						},
						"description": "/application/CreateHomework With all valid Parameters"
					},
					"response": []
				},
				{
					"name": "/application/CreateHomework",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateHomework?courseId=2&cohortId=1",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateHomework"
							],
							"query": [
								{
									"key": "courseId",
									"value": "2"
								},
								{
									"key": "cohortId",
									"value": "1"
								}
							]
						},
						"description": "/application/CreateHomework Api call with wrong api call type, all parameters provided"
					},
					"response": []
				},
				{
					"name": "/application/CreateHomework",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateHomework?courseId=&cohortId=&instructorId=&title=&avgCompletionTime=&dueDate=&isAssignment=&releaseDate=",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateHomework"
							],
							"query": [
								{
									"key": "courseId",
									"value": ""
								},
								{
									"key": "cohortId",
									"value": ""
								},
								{
									"key": "instructorId",
									"value": ""
								},
								{
									"key": "title",
									"value": ""
								},
								{
									"key": "avgCompletionTime",
									"value": ""
								},
								{
									"key": "dueDate",
									"value": ""
								},
								{
									"key": "isAssignment",
									"value": ""
								},
								{
									"key": "releaseDate",
									"value": ""
								}
							]
						},
						"description": "/application/CreateHomework Api call all parameters with null values"
					},
					"response": []
				},
				{
					"name": "/application/CreateHomework",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateHomework?courseId=                &cohortId=               &instructorId=                   &title=                                &avgCompletionTime=&dueDate=&isAssignment=                           ",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateHomework"
							],
							"query": [
								{
									"key": "courseId",
									"value": "                "
								},
								{
									"key": "cohortId",
									"value": "               "
								},
								{
									"key": "instructorId",
									"value": "                   "
								},
								{
									"key": "title",
									"value": "                                "
								},
								{
									"key": "avgCompletionTime",
									"value": ""
								},
								{
									"key": "dueDate",
									"value": ""
								},
								{
									"key": "isAssignment",
									"value": "                           "
								},
								{
									"key": "releaseDae",
									"value": null,
									"disabled": true
								}
							]
						},
						"description": "/application/CreateHomework Api call with just whitespaces for Not Null Parameters no data in it \"\""
					},
					"response": []
				},
				{
					"name": "/application/CreateHomework",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateHomework?courseId=2&cohortId=1",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateHomework"
							],
							"query": [
								{
									"key": "courseId",
									"value": "2"
								},
								{
									"key": "cohortId",
									"value": "1"
								},
								{
									"key": "",
									"value": null,
									"disabled": true
								}
							]
						},
						"description": "/application/CreateHomework With some Parameters"
					},
					"response": []
				},
				{
					"name": "/application/CreateHomework",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateHomework?courseId=2&cohortId=1&instructorId=1&title=react calcULATOR&avgCompletionTime=1&dueDate=2020/01/04&isAssignment=true",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateHomework"
							],
							"query": [
								{
									"key": "courseId",
									"value": "2"
								},
								{
									"key": "cohortId",
									"value": "1"
								},
								{
									"key": "instructorId",
									"value": "1"
								},
								{
									"key": "title",
									"value": "react calcULATOR"
								},
								{
									"key": "avgCompletionTime",
									"value": "1"
								},
								{
									"key": "dueDate",
									"value": "2020/01/04"
								},
								{
									"key": "isAssignment",
									"value": "true"
								},
								{
									"key": "",
									"value": null,
									"disabled": true
								}
							]
						},
						"description": "/application/CreateHomework Duplicate check by name, criteria, email"
					},
					"response": []
				},
				{
					"name": "/application/CreateHomework",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateHomework?courseId=2&cohortId=1&instructorId=1&title=                         mySqli&avgCompletionTime=&dueDate=&isAssignment=true      &releaseDate&documentLink&gitHubClassRoomLink",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateHomework"
							],
							"query": [
								{
									"key": "courseId",
									"value": "2"
								},
								{
									"key": "cohortId",
									"value": "1"
								},
								{
									"key": "instructorId",
									"value": "1"
								},
								{
									"key": "title",
									"value": "                         mySqli"
								},
								{
									"key": "avgCompletionTime",
									"value": ""
								},
								{
									"key": "dueDate",
									"value": ""
								},
								{
									"key": "isAssignment",
									"value": "true      "
								},
								{
									"key": "releaseDate",
									"value": null
								},
								{
									"key": "documentLink",
									"value": null
								},
								{
									"key": "gitHubClassRoomLink",
									"value": null
								}
							]
						},
						"description": "/application/CreateHomework Api call with no param for nullable fileds"
					},
					"response": []
				},
				{
					"name": "/application/CreateHomework",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateHomework?courseId=2&cohortId=1&instructorId=1&title=TEST ASSIGNMENT 3&avgCompletionTime=1&dueDate=2020/01/04&isAssignment=true",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateHomework"
							],
							"query": [
								{
									"key": "courseId",
									"value": "2"
								},
								{
									"key": "cohortId",
									"value": "1"
								},
								{
									"key": "instructorId",
									"value": "1"
								},
								{
									"key": "title",
									"value": "TEST ASSIGNMENT 3"
								},
								{
									"key": "avgCompletionTime",
									"value": "1"
								},
								{
									"key": "dueDate",
									"value": "2020/01/04"
								},
								{
									"key": "isAssignment",
									"value": "true"
								},
								{
									"key": "",
									"value": null,
									"disabled": true
								}
							]
						},
						"description": "/application/CreateHomework Api call to check case insensitivity"
					},
					"response": []
				},
				{
					"name": "/application/CreateHomework",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateHomework?courseId=2&cohortId=1&instructorId=5&title=calcULATOR&avgCompletionTime=1&dueDate=2020/01/04&isAssignment=true",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateHomework"
							],
							"query": [
								{
									"key": "courseId",
									"value": "2"
								},
								{
									"key": "cohortId",
									"value": "1"
								},
								{
									"key": "instructorId",
									"value": "5"
								},
								{
									"key": "title",
									"value": "calcULATOR"
								},
								{
									"key": "avgCompletionTime",
									"value": "1"
								},
								{
									"key": "dueDate",
									"value": "2020/01/04"
								},
								{
									"key": "isAssignment",
									"value": "true"
								},
								{
									"key": "",
									"value": null,
									"disabled": true
								}
							]
						},
						"description": "/application/CreateHomework Api call, FK constraint check\r\nAPI Create action with none existing FK refrentia"
					},
					"response": []
				},
				{
					"name": "/application/CreateHomework",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateHomework?courseId=1&cohortId=5&instructorId=5&title=calcULATOR&avgCompletionTime=1&dueDate=2020/01/04&isAssignment=true",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateHomework"
							],
							"query": [
								{
									"key": "courseId",
									"value": "1"
								},
								{
									"key": "cohortId",
									"value": "5"
								},
								{
									"key": "instructorId",
									"value": "5"
								},
								{
									"key": "title",
									"value": "calcULATOR"
								},
								{
									"key": "avgCompletionTime",
									"value": "1"
								},
								{
									"key": "dueDate",
									"value": "2020/01/04"
								},
								{
									"key": "isAssignment",
									"value": "true"
								},
								{
									"key": "",
									"value": null,
									"disabled": true
								}
							]
						},
						"description": "/application/CreateHomework\r\nCreate with archived existing FK refrential\r\nAPI Create action with Api call, FK constraint check\r\nCreate with archived existing FK refrential"
					},
					"response": []
				},
				{
					"name": "/application/CreateHomework",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateHomework?courseId=2&cohortId=1&instructorId=210000000000000000000000000000000000001&title=java&avgCompletionTime=111111111111111111111111111111111111111111111111&dueDate=2020/01/04&isAssignment=true",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateHomework"
							],
							"query": [
								{
									"key": "courseId",
									"value": "2"
								},
								{
									"key": "cohortId",
									"value": "1"
								},
								{
									"key": "instructorId",
									"value": "210000000000000000000000000000000000001"
								},
								{
									"key": "title",
									"value": "java"
								},
								{
									"key": "avgCompletionTime",
									"value": "111111111111111111111111111111111111111111111111"
								},
								{
									"key": "dueDate",
									"value": "2020/01/04"
								},
								{
									"key": "isAssignment",
									"value": "true"
								},
								{
									"key": "",
									"value": null,
									"disabled": true
								}
							]
						},
						"description": "/application/CreateHomework Api call with param exceeding the size"
					},
					"response": []
				},
				{
					"name": "/application/CreateHomework",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateHomework?courseId=2&cohortId=1&instructorId=1&title=Queries&avgCompletionTime=19999999999999999&dueDate=2020/25/04&isAssignment=true",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateHomework"
							],
							"query": [
								{
									"key": "courseId",
									"value": "2"
								},
								{
									"key": "cohortId",
									"value": "1"
								},
								{
									"key": "instructorId",
									"value": "1"
								},
								{
									"key": "title",
									"value": "Queries"
								},
								{
									"key": "avgCompletionTime",
									"value": "19999999999999999"
								},
								{
									"key": "dueDate",
									"value": "2020/25/04"
								},
								{
									"key": "isAssignment",
									"value": "true"
								},
								{
									"key": "",
									"value": null,
									"disabled": true
								}
							]
						},
						"description": "/application/CreateHomework Numeric values out of range  i.e., int and float datatypes"
					},
					"response": []
				},
				{
					"name": "/application/CreateHomework",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateHomework?courseId=2&cohortId=1&instructorId=1&title=react ToDo&avgCompletionTime=1&dueDate=2020/01/04&isAssignment=true&documentLink=https://docs.google.com/document/d/1q4GL3N9jYn4prBeEj7fCRIBqGpKlGcuEtj2kwSiwqvs/edit&gitHubClassroomLink=https://github.com/TECHCareers-by-Manpower",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateHomework"
							],
							"query": [
								{
									"key": "courseId",
									"value": "2"
								},
								{
									"key": "cohortId",
									"value": "1"
								},
								{
									"key": "instructorId",
									"value": "1"
								},
								{
									"key": "title",
									"value": "react ToDo"
								},
								{
									"key": "avgCompletionTime",
									"value": "1"
								},
								{
									"key": "dueDate",
									"value": "2020/01/04"
								},
								{
									"key": "isAssignment",
									"value": "true"
								},
								{
									"key": "documentLink",
									"value": "https://docs.google.com/document/d/1q4GL3N9jYn4prBeEj7fCRIBqGpKlGcuEtj2kwSiwqvs/edit"
								},
								{
									"key": "gitHubClassroomLink",
									"value": "https://github.com/TECHCareers-by-Manpower"
								}
							]
						},
						"description": "/application/CreateHomework Api call with valid hyperlink format"
					},
					"response": []
				},
				{
					"name": "/application/CreateHomework",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateHomework?courseId=2&cohortId=1&instructorId=1&title=                         Php Calculator&avgCompletionTime=1&dueDate=2020/01/04&isAssignment=true",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateHomework"
							],
							"query": [
								{
									"key": "courseId",
									"value": "2"
								},
								{
									"key": "cohortId",
									"value": "1"
								},
								{
									"key": "instructorId",
									"value": "1"
								},
								{
									"key": "title",
									"value": "                         Php Calculator"
								},
								{
									"key": "avgCompletionTime",
									"value": "1"
								},
								{
									"key": "dueDate",
									"value": "2020/01/04"
								},
								{
									"key": "isAssignment",
									"value": "true"
								},
								{
									"key": "",
									"value": null,
									"disabled": true
								}
							]
						},
						"description": "/application/CreateHomework Api call without trim"
					},
					"response": []
				},
				{
					"name": "/application/CreateHomework",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateHomework?courseId=2&cohortId=1&instructorId=1&title=                         Adveworksnture&avgCompletionTime=1string&dueDate=2020/01/04 string&isAssignment=true      00000",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateHomework"
							],
							"query": [
								{
									"key": "courseId",
									"value": "2"
								},
								{
									"key": "cohortId",
									"value": "1"
								},
								{
									"key": "instructorId",
									"value": "1"
								},
								{
									"key": "title",
									"value": "                         Adveworksnture"
								},
								{
									"key": "avgCompletionTime",
									"value": "1string"
								},
								{
									"key": "dueDate",
									"value": "2020/01/04 string"
								},
								{
									"key": "isAssignment",
									"value": "true      00000"
								},
								{
									"key": "",
									"value": null,
									"disabled": true
								}
							]
						},
						"description": "/application/CreateHomework Api call with invalid datatype (parsing)"
					},
					"response": []
				},
				{
					"name": "/application/CreateHomework",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateHomework?courseId=2&cohortId=1&instructorId=1&title=react &avgCompletionTime=1&dueDate=2020/01/04&isAssignment=true&documentLink=www.docs.google.com/document/d/1q4GL3N9jYn4prBeEj7fCRIBqGpKlGcuEtj2kwSiwqvs/edit&gitHubClassroomLink=https//github.com/TECHCareers-by-Manpower",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateHomework"
							],
							"query": [
								{
									"key": "courseId",
									"value": "2"
								},
								{
									"key": "cohortId",
									"value": "1"
								},
								{
									"key": "instructorId",
									"value": "1"
								},
								{
									"key": "title",
									"value": "react "
								},
								{
									"key": "avgCompletionTime",
									"value": "1"
								},
								{
									"key": "dueDate",
									"value": "2020/01/04"
								},
								{
									"key": "isAssignment",
									"value": "true"
								},
								{
									"key": "documentLink",
									"value": "www.docs.google.com/document/d/1q4GL3N9jYn4prBeEj7fCRIBqGpKlGcuEtj2kwSiwqvs/edit"
								},
								{
									"key": "gitHubClassroomLink",
									"value": "https//github.com/TECHCareers-by-Manpower"
								}
							]
						},
						"description": "/application/CreateHomework Api call with invalid hyperlink format"
					},
					"response": []
				},
				{
					"name": "/application/UpdateHomework",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateHomework?courseId=2&cohortId=1&instructorId=1&title=testUpdate&avgCompletionTime=2&dueDate=2020/01/05&isAssignment=true&homeworkId=2&releaseDate=2020/01/01&documentLink=https://docs.google.com/document/d/1q4gl3n9jyn4prb&gitHubClassRoomLink=https://github.com/techcareers-by-manpower",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateHomework"
							],
							"query": [
								{
									"key": "courseId",
									"value": "2"
								},
								{
									"key": "cohortId",
									"value": "1"
								},
								{
									"key": "instructorId",
									"value": "1"
								},
								{
									"key": "title",
									"value": "testUpdate"
								},
								{
									"key": "avgCompletionTime",
									"value": "2"
								},
								{
									"key": "dueDate",
									"value": "2020/01/05"
								},
								{
									"key": "isAssignment",
									"value": "true"
								},
								{
									"key": "homeworkId",
									"value": "2"
								},
								{
									"key": "releaseDate",
									"value": "2020/01/01"
								},
								{
									"key": "documentLink",
									"value": "https://docs.google.com/document/d/1q4gl3n9jyn4prb"
								},
								{
									"key": "gitHubClassRoomLink",
									"value": "https://github.com/techcareers-by-manpower"
								}
							]
						},
						"description": "/application/UpdateHomework With all valid Parameters"
					},
					"response": []
				},
				{
					"name": "/application/UpdateHomework",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateHomework?courseId=2&cohortId=1&instructorId=1&title=testUpdate&avgCompletionTime=2&dueDate=&isAssignment=true&homeworkId=2&releaseDate=&documentLink=&gitHubClassRoomLink=",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateHomework"
							],
							"query": [
								{
									"key": "courseId",
									"value": "2"
								},
								{
									"key": "cohortId",
									"value": "1"
								},
								{
									"key": "instructorId",
									"value": "1"
								},
								{
									"key": "title",
									"value": "testUpdate"
								},
								{
									"key": "avgCompletionTime",
									"value": "2"
								},
								{
									"key": "dueDate",
									"value": ""
								},
								{
									"key": "isAssignment",
									"value": "true"
								},
								{
									"key": "homeworkId",
									"value": "2"
								},
								{
									"key": "releaseDate",
									"value": ""
								},
								{
									"key": "documentLink",
									"value": ""
								},
								{
									"key": "gitHubClassRoomLink",
									"value": ""
								}
							]
						},
						"description": "/application/UpdateHomework Api call with no param for nullable fileds"
					},
					"response": []
				},
				{
					"name": "/application/UpdateHomework",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateHomework?courseId=2&cohortId=1&instructorId=1&title=cASing cHECK&avgCompletionTime=2&dueDate=&isAssignment=true&homeworkId=2&releaseDate=&documentLink=&gitHubClassRoomLink=",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateHomework"
							],
							"query": [
								{
									"key": "courseId",
									"value": "2"
								},
								{
									"key": "cohortId",
									"value": "1"
								},
								{
									"key": "instructorId",
									"value": "1"
								},
								{
									"key": "title",
									"value": "cASing cHECK"
								},
								{
									"key": "avgCompletionTime",
									"value": "2"
								},
								{
									"key": "dueDate",
									"value": ""
								},
								{
									"key": "isAssignment",
									"value": "true"
								},
								{
									"key": "homeworkId",
									"value": "2"
								},
								{
									"key": "releaseDate",
									"value": ""
								},
								{
									"key": "documentLink",
									"value": ""
								},
								{
									"key": "gitHubClassRoomLink",
									"value": ""
								}
							]
						},
						"description": "/application/UpdateHomework Api call with no param for Case Insensitivity"
					},
					"response": []
				},
				{
					"name": "/application/UpdateHomework",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateHomework?courseId=2&cohortId=1&instructorId=1&title=Design Test Page&avgCompletionTime=1&dueDate=2020/01/04&IsAssignment=true&releaseDate=2020/01/05&homeworkId=1",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateHomework"
							],
							"query": [
								{
									"key": "courseId",
									"value": "2"
								},
								{
									"key": "cohortId",
									"value": "1"
								},
								{
									"key": "instructorId",
									"value": "1"
								},
								{
									"key": "title",
									"value": "Design Test Page"
								},
								{
									"key": "avgCompletionTime",
									"value": "1"
								},
								{
									"key": "dueDate",
									"value": "2020/01/04"
								},
								{
									"key": "IsAssignment",
									"value": "true"
								},
								{
									"key": "releaseDate",
									"value": "2020/01/05"
								},
								{
									"key": "homeworkId",
									"value": "1"
								}
							]
						},
						"description": "/application/UpdateHomework omework can not be due before it is released"
					},
					"response": []
				},
				{
					"name": "/application/UpdateHomework",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateHomework?courseId=2&cohortId=1&instructorId=1&Title=react calc&AvgCompletionTime=2&DueDate=2020/01/05&IsAssignment=true&homeworkId=2",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateHomework"
							],
							"query": [
								{
									"key": "courseId",
									"value": "2"
								},
								{
									"key": "cohortId",
									"value": "1"
								},
								{
									"key": "instructorId",
									"value": "1"
								},
								{
									"key": "Title",
									"value": "react calc"
								},
								{
									"key": "AvgCompletionTime",
									"value": "2"
								},
								{
									"key": "DueDate",
									"value": "2020/01/05"
								},
								{
									"key": "IsAssignment",
									"value": "true"
								},
								{
									"key": "homeworkId",
									"value": "2"
								}
							]
						},
						"description": "/application/UpdateHomework With wrong api call type, all parameters provided"
					},
					"response": []
				},
				{
					"name": "/application/UpdateHomework",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateHomework",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateHomework"
							],
							"query": [
								{
									"key": "courseId",
									"value": "2",
									"disabled": true
								},
								{
									"key": "cohortId",
									"value": "1",
									"disabled": true
								},
								{
									"key": "instructorId",
									"value": "1",
									"disabled": true
								},
								{
									"key": "Title",
									"value": "react calc",
									"disabled": true
								},
								{
									"key": "AvgCompletionTime",
									"value": "2",
									"disabled": true
								},
								{
									"key": "DueDate",
									"value": "2020/01/05",
									"disabled": true
								},
								{
									"key": "IsAssignment",
									"value": "true",
									"disabled": true
								},
								{
									"key": "homeworkId",
									"value": "2",
									"disabled": true
								}
							]
						},
						"description": "/application/UpdateHomework With no Parameters"
					},
					"response": []
				},
				{
					"name": "/application/UpdateHomework",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateHomework?courseId=2&cohortId=1&instructorId=1&homeworkId=2",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateHomework"
							],
							"query": [
								{
									"key": "courseId",
									"value": "2"
								},
								{
									"key": "cohortId",
									"value": "1"
								},
								{
									"key": "instructorId",
									"value": "1"
								},
								{
									"key": "Title",
									"value": "react calc",
									"disabled": true
								},
								{
									"key": "AvgCompletionTime",
									"value": "2",
									"disabled": true
								},
								{
									"key": "DueDate",
									"value": "2020/01/05",
									"disabled": true
								},
								{
									"key": "IsAssignment",
									"value": "true",
									"disabled": true
								},
								{
									"key": "homeworkId",
									"value": "2"
								}
							]
						},
						"description": "/application/UpdateHomework With some Parameters"
					},
					"response": []
				},
				{
					"name": "/application/UpdateHomework",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateHomework?courseId=2&cohortId=1&instructorId=210000000000000000000000000000000000001&title=java&avgCompletionTime=111111111111111111111111111111111111111111111111&dueDate=2020/01/04&isAssignment=true&homeworkId=7",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateHomework"
							],
							"query": [
								{
									"key": "courseId",
									"value": "2"
								},
								{
									"key": "cohortId",
									"value": "1"
								},
								{
									"key": "instructorId",
									"value": "210000000000000000000000000000000000001"
								},
								{
									"key": "title",
									"value": "java"
								},
								{
									"key": "avgCompletionTime",
									"value": "111111111111111111111111111111111111111111111111"
								},
								{
									"key": "dueDate",
									"value": "2020/01/04"
								},
								{
									"key": "isAssignment",
									"value": "true"
								},
								{
									"key": "homeworkId",
									"value": "7"
								}
							]
						},
						"description": "/application/UpdateHomework Api call with param exceeding the size"
					},
					"response": []
				},
				{
					"name": "/application/UpdateHomework",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateHomework?courseId=2&cohortId=1&instructorId=1&title=jkslu&avgCompletionTime=1&dueDate=2020/01/04&isAssignment=true&documentLink=https://docs.google.com/document/d/1q4GL3N9jYn4prBeEj7fCRIBqGpKlGcuEtj2kwSiwqvs/edit&gitHubClassroomLink=https://github.com/TECHCareers-by-Manpower&homeworkId=7",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateHomework"
							],
							"query": [
								{
									"key": "courseId",
									"value": "2"
								},
								{
									"key": "cohortId",
									"value": "1"
								},
								{
									"key": "instructorId",
									"value": "1"
								},
								{
									"key": "title",
									"value": "jkslu"
								},
								{
									"key": "avgCompletionTime",
									"value": "1"
								},
								{
									"key": "dueDate",
									"value": "2020/01/04"
								},
								{
									"key": "isAssignment",
									"value": "true"
								},
								{
									"key": "documentLink",
									"value": "https://docs.google.com/document/d/1q4GL3N9jYn4prBeEj7fCRIBqGpKlGcuEtj2kwSiwqvs/edit"
								},
								{
									"key": "gitHubClassroomLink",
									"value": "https://github.com/TECHCareers-by-Manpower"
								},
								{
									"key": "homeworkId",
									"value": "7"
								}
							]
						},
						"description": "/application/UpdateHomework Api call with valid hyperlink format"
					},
					"response": []
				},
				{
					"name": "/application/UpdateHomework",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateHomework?courseId=2&cohortId=1&instructorId=1&title=jkslu&avgCompletionTime=1&dueDate=2020/01/04&isAssignment=true&documentLink=http://docs.google.com/document/d/1q4GL3N9jYn4prBeEj7fCRIBqGpKlGcuEtj2kwSiwqvs/edit&gitHubClassroomLink=www://github.com/TECHCareer&homeworkId=7",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateHomework"
							],
							"query": [
								{
									"key": "courseId",
									"value": "2"
								},
								{
									"key": "cohortId",
									"value": "1"
								},
								{
									"key": "instructorId",
									"value": "1"
								},
								{
									"key": "title",
									"value": "jkslu"
								},
								{
									"key": "avgCompletionTime",
									"value": "1"
								},
								{
									"key": "dueDate",
									"value": "2020/01/04"
								},
								{
									"key": "isAssignment",
									"value": "true"
								},
								{
									"key": "documentLink",
									"value": "http://docs.google.com/document/d/1q4GL3N9jYn4prBeEj7fCRIBqGpKlGcuEtj2kwSiwqvs/edit"
								},
								{
									"key": "gitHubClassroomLink",
									"value": "www://github.com/TECHCareer"
								},
								{
									"key": "homeworkId",
									"value": "7"
								}
							]
						},
						"description": "/application/UpdateHomework Api call with invalid hyperlink format"
					},
					"response": []
				},
				{
					"name": "/application/UpdateHomework",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateHomework?courseId=2&cohortId=1&instructorId=1&title=react calc&avgCompletionTime=2&dueDate=2020/01/05&isAssignment=true&homeworkId=2&releaseDate",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateHomework"
							],
							"query": [
								{
									"key": "courseId",
									"value": "2"
								},
								{
									"key": "cohortId",
									"value": "1"
								},
								{
									"key": "instructorId",
									"value": "1"
								},
								{
									"key": "title",
									"value": "react calc"
								},
								{
									"key": "avgCompletionTime",
									"value": "2"
								},
								{
									"key": "dueDate",
									"value": "2020/01/05"
								},
								{
									"key": "isAssignment",
									"value": "true"
								},
								{
									"key": "homeworkId",
									"value": "2"
								},
								{
									"key": "releaseDate",
									"value": null
								}
							]
						},
						"description": "/application/UpdateHomework Duplicate check by name, criteria, email"
					},
					"response": []
				},
				{
					"name": "/application/UpdateHomework",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateHomework?courseId=2&cohortId=1&instructorId=1&title=calculator&avgCompletionTime=2&dueDate=2020/01/05&isAssignment=true&homeworkId=2",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateHomework"
							],
							"query": [
								{
									"key": "courseId",
									"value": "2"
								},
								{
									"key": "cohortId",
									"value": "1"
								},
								{
									"key": "instructorId",
									"value": "1"
								},
								{
									"key": "title",
									"value": "calculator"
								},
								{
									"key": "avgCompletionTime",
									"value": "2"
								},
								{
									"key": "dueDate",
									"value": "2020/01/05"
								},
								{
									"key": "isAssignment",
									"value": "true"
								},
								{
									"key": "homeworkId",
									"value": "2"
								}
							]
						},
						"description": "/application/UpdateHomework Api call, duplicate check by id"
					},
					"response": []
				},
				{
					"name": "/application/UpdateHomework",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateHomework?courseId=2000000000000000000&cohortId=100000000000000000&instructorId=1&title=calculator&avgCompletionTime=222222222222&dueDate=2020/01/05&isAssignment=true&homeworkId=2",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateHomework"
							],
							"query": [
								{
									"key": "courseId",
									"value": "2000000000000000000"
								},
								{
									"key": "cohortId",
									"value": "100000000000000000"
								},
								{
									"key": "instructorId",
									"value": "1"
								},
								{
									"key": "title",
									"value": "calculator"
								},
								{
									"key": "avgCompletionTime",
									"value": "222222222222"
								},
								{
									"key": "dueDate",
									"value": "2020/01/05"
								},
								{
									"key": "isAssignment",
									"value": "true"
								},
								{
									"key": "homeworkId",
									"value": "2"
								}
							]
						},
						"description": "/application/UpdateHomework Numeric values out of range  i.e., int and float datatypes"
					},
					"response": []
				},
				{
					"name": "/application/UpdateHomework",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateHomework?courseId=&cohortId=&instructorId=&Title=&IsAssignment=&homeworkId=2",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateHomework"
							],
							"query": [
								{
									"key": "courseId",
									"value": ""
								},
								{
									"key": "cohortId",
									"value": ""
								},
								{
									"key": "instructorId",
									"value": ""
								},
								{
									"key": "Title",
									"value": ""
								},
								{
									"key": "AvgCompletionTime",
									"value": "2",
									"disabled": true
								},
								{
									"key": "DueDate",
									"value": "2020/01/05",
									"disabled": true
								},
								{
									"key": "IsAssignment",
									"value": ""
								},
								{
									"key": "homeworkId",
									"value": "2"
								}
							]
						},
						"description": "/application/UpdateHomework With Api call all parameters with null values"
					},
					"response": []
				},
				{
					"name": "/application/UpdateHomework",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateHomework?courseId=                            &cohortId=                     &instructorId=                &title=                        &isAssignment=&homeworkId=2",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateHomework"
							],
							"query": [
								{
									"key": "courseId",
									"value": "                            "
								},
								{
									"key": "cohortId",
									"value": "                     "
								},
								{
									"key": "instructorId",
									"value": "                "
								},
								{
									"key": "title",
									"value": "                        "
								},
								{
									"key": "AvgCompletionTime",
									"value": "2",
									"disabled": true
								},
								{
									"key": "DueDate",
									"value": "2020/01/05",
									"disabled": true
								},
								{
									"key": "isAssignment",
									"value": ""
								},
								{
									"key": "homeworkId",
									"value": "2"
								}
							]
						},
						"description": "/application/UpdateHomework with just whitespaces for Not Null Parameters no data in it \"\""
					},
					"response": []
				},
				{
					"name": "/application/UpdateHomework",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateHomework?courseId=2&cohortId=1&instructorId=1&title=              Javascript Hangman&avgCompletionTime=20&dueDate=2020/01/05&isAssignment=      false&homeworkId=2",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateHomework"
							],
							"query": [
								{
									"key": "courseId",
									"value": "2"
								},
								{
									"key": "cohortId",
									"value": "1"
								},
								{
									"key": "instructorId",
									"value": "1"
								},
								{
									"key": "title",
									"value": "              Javascript Hangman"
								},
								{
									"key": "avgCompletionTime",
									"value": "20"
								},
								{
									"key": "dueDate",
									"value": "2020/01/05"
								},
								{
									"key": "isAssignment",
									"value": "      false"
								},
								{
									"key": "homeworkId",
									"value": "2"
								}
							]
						},
						"description": "/application/UpdateHomework Api call without trim"
					},
					"response": []
				},
				{
					"name": "/application/UpdateHomework",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateHomework?courseId=1&cohortId=5&instructorId=5&title=calcULATOR&avgCompletionTime=1&dueDate=2020/01/04&isAssignment=true&homeworkId=8",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateHomework"
							],
							"query": [
								{
									"key": "courseId",
									"value": "1"
								},
								{
									"key": "cohortId",
									"value": "5"
								},
								{
									"key": "instructorId",
									"value": "5"
								},
								{
									"key": "title",
									"value": "calcULATOR"
								},
								{
									"key": "avgCompletionTime",
									"value": "1"
								},
								{
									"key": "dueDate",
									"value": "2020/01/04"
								},
								{
									"key": "isAssignment",
									"value": "true"
								},
								{
									"key": "homeworkId",
									"value": "8"
								}
							]
						},
						"description": "/application/UpdateHomework API Api call, FK constraint check\r\nUpdate with archived existing FK refrential"
					},
					"response": []
				},
				{
					"name": "/application/UpdateHomework",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateHomework?courseId=1&cohortId=5&instructorId=5&Title=testt123&AvgCompletionTime=1&DueDate=2020/01/04&IsAssignment=true&homeworkId=8",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateHomework"
							],
							"query": [
								{
									"key": "courseId",
									"value": "1"
								},
								{
									"key": "cohortId",
									"value": "5"
								},
								{
									"key": "instructorId",
									"value": "5"
								},
								{
									"key": "Title",
									"value": "testt123"
								},
								{
									"key": "AvgCompletionTime",
									"value": "1"
								},
								{
									"key": "DueDate",
									"value": "2020/01/04"
								},
								{
									"key": "IsAssignment",
									"value": "true"
								},
								{
									"key": "homeworkId",
									"value": "8"
								}
							]
						},
						"description": "/application/UpdateHomework API Api call to update archived record\r\nUpdate with archived existing FK refrential"
					},
					"response": []
				},
				{
					"name": "/application/UpdateHomework",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateHomework?courseId=2&cohortId=1&instructorId=1&title=calcULATOR&avgCompletionTime=1&dueDate=2020/01/04&isAssignment=true&homeworkId=10",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateHomework"
							],
							"query": [
								{
									"key": "courseId",
									"value": "2"
								},
								{
									"key": "cohortId",
									"value": "1"
								},
								{
									"key": "instructorId",
									"value": "1"
								},
								{
									"key": "title",
									"value": "calcULATOR"
								},
								{
									"key": "avgCompletionTime",
									"value": "1"
								},
								{
									"key": "dueDate",
									"value": "2020/01/04"
								},
								{
									"key": "isAssignment",
									"value": "true"
								},
								{
									"key": "homeworkId",
									"value": "10"
								}
							]
						},
						"description": "/application/UpdateHomework Api call, FK constraint check\r\nAPIUpdate action with none existing FK refrentia"
					},
					"response": []
				},
				{
					"name": "/application/UpdateHomework",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateHomework?cohortId=1&instructorId=1&title=bhj&avgCompletionTime=2$$&dueDate=2020/01/05string&isAssignment=true&homeworkId=2",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateHomework"
							],
							"query": [
								{
									"key": "courseId",
									"value": "2",
									"disabled": true
								},
								{
									"key": "cohortId",
									"value": "1"
								},
								{
									"key": "instructorId",
									"value": "1"
								},
								{
									"key": "title",
									"value": "bhj"
								},
								{
									"key": "avgCompletionTime",
									"value": "2$$"
								},
								{
									"key": "dueDate",
									"value": "2020/01/05string"
								},
								{
									"key": "isAssignment",
									"value": "true"
								},
								{
									"key": "homeworkId",
									"value": "2"
								}
							]
						},
						"description": "/application/UpdateHomework Api call with invalid datatype (parsing)"
					},
					"response": []
				},
				{
					"name": "/application/HomeworkSummary",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/HomeworkSummary?cohortId=5&courseId=2",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"HomeworkSummary"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "5"
								},
								{
									"key": "courseId",
									"value": "2"
								}
							]
						},
						"description": "/application/HomeworkSummary with No DB"
					},
					"response": []
				},
				{
					"name": "/application/HomeworkSummary",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/HomeworkSummary?cohortId=1&courseId=2",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"HomeworkSummary"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "1"
								},
								{
									"key": "courseId",
									"value": "2"
								}
							]
						},
						"description": "/application/HomeworkSummary with Api call with all valid parameters"
					},
					"response": [
						{
							"name": "PASS /application/HomeworkSummary ",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44337/application/HomeworkSummary?cohortId=1&courseId=2",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"HomeworkSummary"
									],
									"query": [
										{
											"key": "cohortId",
											"value": "1"
										},
										{
											"key": "courseId",
											"value": "2"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "2996"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 29 Nov 2020 01:00:09 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"homeworkId\": 1,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": false,\n        \"title\": \"React Calc\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": null,\n        \"gitHubClassRoomLink\": null,\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 2,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"Calculator\",\n        \"avgCompletionTime\": 2,\n        \"dueDate\": \"2020-01-05T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": null,\n        \"gitHubClassRoomLink\": null,\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 3,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"Php Calculator\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": null,\n        \"gitHubClassRoomLink\": null,\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 4,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"Calculator\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": null,\n        \"gitHubClassRoomLink\": null,\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 5,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"Jkslu\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": \"https://docs.google.com/document/d/1q4gl3n9jyn4prbeej7fcribqgpklgcuetj2kwsiwqvs/edit\",\n        \"gitHubClassRoomLink\": \"https://github.com/techcareers-by-manpower\",\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 6,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"React Todo\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": \"https://docs.google.com/document/d/1q4gl3n9jyn4prbeej7fcribqgpklgcuetj2kwsiwqvs/edit\",\n        \"gitHubClassRoomLink\": \"https://github.com/techcareers-by-manpower\",\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 7,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"Jkslu\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": \"2019-10-31T00:00:00\",\n        \"documentLink\": \"http://docs.google.com/document/d/1q4gl3n9jyn4prbeej7fcribqgpklgcuetj2kwsiwqvs/edit\",\n        \"gitHubClassRoomLink\": \"https://github.com/techcareer\",\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 8,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"Calculator\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": null,\n        \"gitHubClassRoomLink\": null,\n        \"archive\": true,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    }\n]"
						}
					]
				},
				{
					"name": "/application/HomeworkSummary",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/HomeworkSummary",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"HomeworkSummary"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "1",
									"disabled": true
								},
								{
									"key": "courseId",
									"value": "2",
									"disabled": true
								}
							]
						},
						"description": "/application/HomeworkSummary with Api call with no parameters"
					},
					"response": [
						{
							"name": "PASS /application/HomeworkSummary ",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44337/application/HomeworkSummary?cohortId=1&courseId=2",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"HomeworkSummary"
									],
									"query": [
										{
											"key": "cohortId",
											"value": "1"
										},
										{
											"key": "courseId",
											"value": "2"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "2996"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 29 Nov 2020 01:00:09 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"homeworkId\": 1,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": false,\n        \"title\": \"React Calc\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": null,\n        \"gitHubClassRoomLink\": null,\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 2,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"Calculator\",\n        \"avgCompletionTime\": 2,\n        \"dueDate\": \"2020-01-05T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": null,\n        \"gitHubClassRoomLink\": null,\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 3,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"Php Calculator\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": null,\n        \"gitHubClassRoomLink\": null,\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 4,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"Calculator\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": null,\n        \"gitHubClassRoomLink\": null,\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 5,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"Jkslu\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": \"https://docs.google.com/document/d/1q4gl3n9jyn4prbeej7fcribqgpklgcuetj2kwsiwqvs/edit\",\n        \"gitHubClassRoomLink\": \"https://github.com/techcareers-by-manpower\",\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 6,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"React Todo\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": \"https://docs.google.com/document/d/1q4gl3n9jyn4prbeej7fcribqgpklgcuetj2kwsiwqvs/edit\",\n        \"gitHubClassRoomLink\": \"https://github.com/techcareers-by-manpower\",\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 7,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"Jkslu\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": \"2019-10-31T00:00:00\",\n        \"documentLink\": \"http://docs.google.com/document/d/1q4gl3n9jyn4prbeej7fcribqgpklgcuetj2kwsiwqvs/edit\",\n        \"gitHubClassRoomLink\": \"https://github.com/techcareer\",\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 8,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"Calculator\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": null,\n        \"gitHubClassRoomLink\": null,\n        \"archive\": true,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    }\n]"
						}
					]
				},
				{
					"name": "/application/HomeworkSummary",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/HomeworkSummary?cohortId=1",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"HomeworkSummary"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "1"
								},
								{
									"key": "courseId",
									"value": "2",
									"disabled": true
								}
							]
						},
						"description": "/application/HomeworkSummary with Api call with some parameters"
					},
					"response": [
						{
							"name": "PASS /application/HomeworkSummary ",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44337/application/HomeworkSummary?cohortId=1&courseId=2",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"HomeworkSummary"
									],
									"query": [
										{
											"key": "cohortId",
											"value": "1"
										},
										{
											"key": "courseId",
											"value": "2"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "2996"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 29 Nov 2020 01:00:09 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"homeworkId\": 1,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": false,\n        \"title\": \"React Calc\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": null,\n        \"gitHubClassRoomLink\": null,\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 2,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"Calculator\",\n        \"avgCompletionTime\": 2,\n        \"dueDate\": \"2020-01-05T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": null,\n        \"gitHubClassRoomLink\": null,\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 3,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"Php Calculator\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": null,\n        \"gitHubClassRoomLink\": null,\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 4,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"Calculator\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": null,\n        \"gitHubClassRoomLink\": null,\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 5,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"Jkslu\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": \"https://docs.google.com/document/d/1q4gl3n9jyn4prbeej7fcribqgpklgcuetj2kwsiwqvs/edit\",\n        \"gitHubClassRoomLink\": \"https://github.com/techcareers-by-manpower\",\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 6,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"React Todo\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": \"https://docs.google.com/document/d/1q4gl3n9jyn4prbeej7fcribqgpklgcuetj2kwsiwqvs/edit\",\n        \"gitHubClassRoomLink\": \"https://github.com/techcareers-by-manpower\",\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 7,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"Jkslu\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": \"2019-10-31T00:00:00\",\n        \"documentLink\": \"http://docs.google.com/document/d/1q4gl3n9jyn4prbeej7fcribqgpklgcuetj2kwsiwqvs/edit\",\n        \"gitHubClassRoomLink\": \"https://github.com/techcareer\",\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 8,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"Calculator\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": null,\n        \"gitHubClassRoomLink\": null,\n        \"archive\": true,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    }\n]"
						}
					]
				},
				{
					"name": "/application/HomeworkSummary",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/HomeworkSummary?cohortId=&courseId=",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"HomeworkSummary"
							],
							"query": [
								{
									"key": "cohortId",
									"value": ""
								},
								{
									"key": "courseId",
									"value": ""
								}
							]
						},
						"description": "/application/HomeworkSummary with Api call with null parameters"
					},
					"response": [
						{
							"name": "PASS /application/HomeworkSummary ",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44337/application/HomeworkSummary?cohortId=1&courseId=2",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"HomeworkSummary"
									],
									"query": [
										{
											"key": "cohortId",
											"value": "1"
										},
										{
											"key": "courseId",
											"value": "2"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "2996"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 29 Nov 2020 01:00:09 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"homeworkId\": 1,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": false,\n        \"title\": \"React Calc\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": null,\n        \"gitHubClassRoomLink\": null,\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 2,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"Calculator\",\n        \"avgCompletionTime\": 2,\n        \"dueDate\": \"2020-01-05T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": null,\n        \"gitHubClassRoomLink\": null,\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 3,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"Php Calculator\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": null,\n        \"gitHubClassRoomLink\": null,\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 4,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"Calculator\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": null,\n        \"gitHubClassRoomLink\": null,\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 5,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"Jkslu\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": \"https://docs.google.com/document/d/1q4gl3n9jyn4prbeej7fcribqgpklgcuetj2kwsiwqvs/edit\",\n        \"gitHubClassRoomLink\": \"https://github.com/techcareers-by-manpower\",\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 6,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"React Todo\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": \"https://docs.google.com/document/d/1q4gl3n9jyn4prbeej7fcribqgpklgcuetj2kwsiwqvs/edit\",\n        \"gitHubClassRoomLink\": \"https://github.com/techcareers-by-manpower\",\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 7,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"Jkslu\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": \"2019-10-31T00:00:00\",\n        \"documentLink\": \"http://docs.google.com/document/d/1q4gl3n9jyn4prbeej7fcribqgpklgcuetj2kwsiwqvs/edit\",\n        \"gitHubClassRoomLink\": \"https://github.com/techcareer\",\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 8,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"Calculator\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": null,\n        \"gitHubClassRoomLink\": null,\n        \"archive\": true,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    }\n]"
						}
					]
				},
				{
					"name": "/application/HomeworkSummary",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/HomeworkSummary?cohortId=              2&courseId=               2                ",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"HomeworkSummary"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "              2"
								},
								{
									"key": "courseId",
									"value": "               2                "
								}
							]
						},
						"description": "/application/HomeworkSummary with Api call Api call without trim"
					},
					"response": [
						{
							"name": "PASS /application/HomeworkSummary ",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44337/application/HomeworkSummary?cohortId=1&courseId=2",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"HomeworkSummary"
									],
									"query": [
										{
											"key": "cohortId",
											"value": "1"
										},
										{
											"key": "courseId",
											"value": "2"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "2996"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 29 Nov 2020 01:00:09 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"homeworkId\": 1,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": false,\n        \"title\": \"React Calc\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": null,\n        \"gitHubClassRoomLink\": null,\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 2,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"Calculator\",\n        \"avgCompletionTime\": 2,\n        \"dueDate\": \"2020-01-05T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": null,\n        \"gitHubClassRoomLink\": null,\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 3,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"Php Calculator\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": null,\n        \"gitHubClassRoomLink\": null,\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 4,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"Calculator\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": null,\n        \"gitHubClassRoomLink\": null,\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 5,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"Jkslu\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": \"https://docs.google.com/document/d/1q4gl3n9jyn4prbeej7fcribqgpklgcuetj2kwsiwqvs/edit\",\n        \"gitHubClassRoomLink\": \"https://github.com/techcareers-by-manpower\",\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 6,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"React Todo\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": \"https://docs.google.com/document/d/1q4gl3n9jyn4prbeej7fcribqgpklgcuetj2kwsiwqvs/edit\",\n        \"gitHubClassRoomLink\": \"https://github.com/techcareers-by-manpower\",\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 7,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"Jkslu\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": \"2019-10-31T00:00:00\",\n        \"documentLink\": \"http://docs.google.com/document/d/1q4gl3n9jyn4prbeej7fcribqgpklgcuetj2kwsiwqvs/edit\",\n        \"gitHubClassRoomLink\": \"https://github.com/techcareer\",\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 8,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"Calculator\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": null,\n        \"gitHubClassRoomLink\": null,\n        \"archive\": true,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    }\n]"
						}
					]
				},
				{
					"name": "/application/HomeworkSummary",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/HomeworkSummary?cohortId=9&courseId=8",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"HomeworkSummary"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "9"
								},
								{
									"key": "courseId",
									"value": "8"
								}
							]
						},
						"description": "/application/HomeworkSummary pi call, FK constraint check\r\nAPI Create action with none existing FK refrential"
					},
					"response": [
						{
							"name": "PASS /application/HomeworkSummary ",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44337/application/HomeworkSummary?cohortId=1&courseId=2",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"HomeworkSummary"
									],
									"query": [
										{
											"key": "cohortId",
											"value": "1"
										},
										{
											"key": "courseId",
											"value": "2"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "2996"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 29 Nov 2020 01:00:09 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"homeworkId\": 1,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": false,\n        \"title\": \"React Calc\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": null,\n        \"gitHubClassRoomLink\": null,\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 2,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"Calculator\",\n        \"avgCompletionTime\": 2,\n        \"dueDate\": \"2020-01-05T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": null,\n        \"gitHubClassRoomLink\": null,\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 3,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"Php Calculator\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": null,\n        \"gitHubClassRoomLink\": null,\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 4,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"Calculator\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": null,\n        \"gitHubClassRoomLink\": null,\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 5,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"Jkslu\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": \"https://docs.google.com/document/d/1q4gl3n9jyn4prbeej7fcribqgpklgcuetj2kwsiwqvs/edit\",\n        \"gitHubClassRoomLink\": \"https://github.com/techcareers-by-manpower\",\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 6,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"React Todo\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": \"https://docs.google.com/document/d/1q4gl3n9jyn4prbeej7fcribqgpklgcuetj2kwsiwqvs/edit\",\n        \"gitHubClassRoomLink\": \"https://github.com/techcareers-by-manpower\",\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 7,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"Jkslu\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": \"2019-10-31T00:00:00\",\n        \"documentLink\": \"http://docs.google.com/document/d/1q4gl3n9jyn4prbeej7fcribqgpklgcuetj2kwsiwqvs/edit\",\n        \"gitHubClassRoomLink\": \"https://github.com/techcareer\",\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 8,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"Calculator\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": null,\n        \"gitHubClassRoomLink\": null,\n        \"archive\": true,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    }\n]"
						}
					]
				},
				{
					"name": "/application/HomeworkSummary",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/HomeworkSummary?cohortId=              2$$$$$$$$$$&courseId=               2accccccccc",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"HomeworkSummary"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "              2$$$$$$$$$$"
								},
								{
									"key": "courseId",
									"value": "               2accccccccc"
								}
							]
						},
						"description": "/application/HomeworkSummary Api call with invalid datatype (parsing)"
					},
					"response": [
						{
							"name": "PASS /application/HomeworkSummary ",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44337/application/HomeworkSummary?cohortId=1&courseId=2",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"HomeworkSummary"
									],
									"query": [
										{
											"key": "cohortId",
											"value": "1"
										},
										{
											"key": "courseId",
											"value": "2"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "2996"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 29 Nov 2020 01:00:09 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"homeworkId\": 1,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": false,\n        \"title\": \"React Calc\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": null,\n        \"gitHubClassRoomLink\": null,\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 2,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"Calculator\",\n        \"avgCompletionTime\": 2,\n        \"dueDate\": \"2020-01-05T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": null,\n        \"gitHubClassRoomLink\": null,\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 3,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"Php Calculator\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": null,\n        \"gitHubClassRoomLink\": null,\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 4,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"Calculator\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": null,\n        \"gitHubClassRoomLink\": null,\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 5,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"Jkslu\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": \"https://docs.google.com/document/d/1q4gl3n9jyn4prbeej7fcribqgpklgcuetj2kwsiwqvs/edit\",\n        \"gitHubClassRoomLink\": \"https://github.com/techcareers-by-manpower\",\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 6,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"React Todo\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": \"https://docs.google.com/document/d/1q4gl3n9jyn4prbeej7fcribqgpklgcuetj2kwsiwqvs/edit\",\n        \"gitHubClassRoomLink\": \"https://github.com/techcareers-by-manpower\",\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 7,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"Jkslu\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": \"2019-10-31T00:00:00\",\n        \"documentLink\": \"http://docs.google.com/document/d/1q4gl3n9jyn4prbeej7fcribqgpklgcuetj2kwsiwqvs/edit\",\n        \"gitHubClassRoomLink\": \"https://github.com/techcareer\",\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 8,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"Calculator\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": null,\n        \"gitHubClassRoomLink\": null,\n        \"archive\": true,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    }\n]"
						}
					]
				},
				{
					"name": "/application/HomeworkSummary",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/HomeworkSummary?cohortId=                                    &courseId=                                   ",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"HomeworkSummary"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "                                    "
								},
								{
									"key": "courseId",
									"value": "                                   "
								}
							]
						},
						"description": "/application/HomeworkSummary withApi call with just whitespaces for Not Null Parameters no data in it \"\""
					},
					"response": [
						{
							"name": "PASS /application/HomeworkSummary ",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44337/application/HomeworkSummary?cohortId=1&courseId=2",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"HomeworkSummary"
									],
									"query": [
										{
											"key": "cohortId",
											"value": "1"
										},
										{
											"key": "courseId",
											"value": "2"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "2996"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 29 Nov 2020 01:00:09 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"homeworkId\": 1,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": false,\n        \"title\": \"React Calc\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": null,\n        \"gitHubClassRoomLink\": null,\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 2,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"Calculator\",\n        \"avgCompletionTime\": 2,\n        \"dueDate\": \"2020-01-05T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": null,\n        \"gitHubClassRoomLink\": null,\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 3,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"Php Calculator\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": null,\n        \"gitHubClassRoomLink\": null,\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 4,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"Calculator\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": null,\n        \"gitHubClassRoomLink\": null,\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 5,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"Jkslu\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": \"https://docs.google.com/document/d/1q4gl3n9jyn4prbeej7fcribqgpklgcuetj2kwsiwqvs/edit\",\n        \"gitHubClassRoomLink\": \"https://github.com/techcareers-by-manpower\",\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 6,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"React Todo\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": \"https://docs.google.com/document/d/1q4gl3n9jyn4prbeej7fcribqgpklgcuetj2kwsiwqvs/edit\",\n        \"gitHubClassRoomLink\": \"https://github.com/techcareers-by-manpower\",\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 7,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"Jkslu\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": \"2019-10-31T00:00:00\",\n        \"documentLink\": \"http://docs.google.com/document/d/1q4gl3n9jyn4prbeej7fcribqgpklgcuetj2kwsiwqvs/edit\",\n        \"gitHubClassRoomLink\": \"https://github.com/techcareer\",\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 8,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"Calculator\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": null,\n        \"gitHubClassRoomLink\": null,\n        \"archive\": true,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    }\n]"
						}
					]
				},
				{
					"name": "/application/HomeworkSummary",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/HomeworkSummary?cohortId=1&courseId=2",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"HomeworkSummary"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "1"
								},
								{
									"key": "courseId",
									"value": "2"
								}
							]
						},
						"description": "/application/HomeworkSummary with Api call to GET all archived record"
					},
					"response": [
						{
							"name": "PASS /application/HomeworkSummary ",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44337/application/HomeworkSummary?cohortId=1&courseId=2",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"HomeworkSummary"
									],
									"query": [
										{
											"key": "cohortId",
											"value": "1"
										},
										{
											"key": "courseId",
											"value": "2"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "2996"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 29 Nov 2020 01:00:09 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"homeworkId\": 1,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": false,\n        \"title\": \"React Calc\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": null,\n        \"gitHubClassRoomLink\": null,\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 2,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"Calculator\",\n        \"avgCompletionTime\": 2,\n        \"dueDate\": \"2020-01-05T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": null,\n        \"gitHubClassRoomLink\": null,\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 3,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"Php Calculator\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": null,\n        \"gitHubClassRoomLink\": null,\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 4,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"Calculator\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": null,\n        \"gitHubClassRoomLink\": null,\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 5,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"Jkslu\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": \"https://docs.google.com/document/d/1q4gl3n9jyn4prbeej7fcribqgpklgcuetj2kwsiwqvs/edit\",\n        \"gitHubClassRoomLink\": \"https://github.com/techcareers-by-manpower\",\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 6,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"React Todo\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": \"https://docs.google.com/document/d/1q4gl3n9jyn4prbeej7fcribqgpklgcuetj2kwsiwqvs/edit\",\n        \"gitHubClassRoomLink\": \"https://github.com/techcareers-by-manpower\",\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 7,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"Jkslu\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": \"2019-10-31T00:00:00\",\n        \"documentLink\": \"http://docs.google.com/document/d/1q4gl3n9jyn4prbeej7fcribqgpklgcuetj2kwsiwqvs/edit\",\n        \"gitHubClassRoomLink\": \"https://github.com/techcareer\",\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 8,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"Calculator\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": null,\n        \"gitHubClassRoomLink\": null,\n        \"archive\": true,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    }\n]"
						}
					]
				},
				{
					"name": "/application/HomeworkSummary",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/HomeworkSummary?cohortId=1&courseId=2",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"HomeworkSummary"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "1"
								},
								{
									"key": "courseId",
									"value": "2"
								}
							]
						},
						"description": "/application/HomeworkSummary Api call with wrong api call type, all parameters provided"
					},
					"response": [
						{
							"name": "PASS /application/HomeworkSummary ",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44337/application/HomeworkSummary?cohortId=1&courseId=2",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"HomeworkSummary"
									],
									"query": [
										{
											"key": "cohortId",
											"value": "1"
										},
										{
											"key": "courseId",
											"value": "2"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "2996"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 29 Nov 2020 01:00:09 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"homeworkId\": 1,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": false,\n        \"title\": \"React Calc\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": null,\n        \"gitHubClassRoomLink\": null,\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 2,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"Calculator\",\n        \"avgCompletionTime\": 2,\n        \"dueDate\": \"2020-01-05T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": null,\n        \"gitHubClassRoomLink\": null,\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 3,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"Php Calculator\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": null,\n        \"gitHubClassRoomLink\": null,\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 4,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"Calculator\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": null,\n        \"gitHubClassRoomLink\": null,\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 5,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"Jkslu\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": \"https://docs.google.com/document/d/1q4gl3n9jyn4prbeej7fcribqgpklgcuetj2kwsiwqvs/edit\",\n        \"gitHubClassRoomLink\": \"https://github.com/techcareers-by-manpower\",\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 6,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"React Todo\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": \"https://docs.google.com/document/d/1q4gl3n9jyn4prbeej7fcribqgpklgcuetj2kwsiwqvs/edit\",\n        \"gitHubClassRoomLink\": \"https://github.com/techcareers-by-manpower\",\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 7,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"Jkslu\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": \"2019-10-31T00:00:00\",\n        \"documentLink\": \"http://docs.google.com/document/d/1q4gl3n9jyn4prbeej7fcribqgpklgcuetj2kwsiwqvs/edit\",\n        \"gitHubClassRoomLink\": \"https://github.com/techcareer\",\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    {\n        \"homeworkId\": 8,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": true,\n        \"title\": \"Calculator\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": null,\n        \"gitHubClassRoomLink\": null,\n        \"archive\": true,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    }\n]"
						}
					]
				},
				{
					"name": "/application/GetHomework",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/GetHomework",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"GetHomework"
							]
						},
						"description": "/application/GetHomework Api call with no parameters"
					},
					"response": []
				},
				{
					"name": "/application/GetHomework",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/GetHomework?homeworkId=1",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"GetHomework"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "1"
								}
							]
						},
						"description": "/application/GetHomework Api call with some/all parameters"
					},
					"response": [
						{
							"name": "AFTER CHANGE /application/GetHomework",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44337/application/GetHomework?homeworkId=1",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"GetHomework"
									],
									"query": [
										{
											"key": "homeworkId",
											"value": "1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "4258"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Wed, 02 Dec 2020 17:35:00 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"item1\": {\n        \"homeworkId\": 1,\n        \"courseId\": 1,\n        \"cohortId\": 3,\n        \"instructorId\": 3,\n        \"isAssignment\": false,\n        \"title\": \"Hello World, Hello User, Hello Everybody\",\n        \"avgCompletionTime\": 8,\n        \"dueDate\": \"2020-08-10T09:00:00\",\n        \"releaseDate\": \"2020-07-27T15:00:00\",\n        \"documentLink\": \"https://drive.google.com/file/d/1HMcsRK8GZcZRZM_vUtHfzhMCDjuz0mTD/view?usp=sharing\",\n        \"gitHubClassRoomLink\": null,\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    \"item2\": [\n        {\n            \"rubricId\": 115,\n            \"homeworkId\": 1,\n            \"isChallenge\": false,\n            \"criteria\": \"Practice submitted on due date to GitHub classroom\",\n            \"weight\": 1,\n            \"archive\": false,\n            \"homework\": null,\n            \"grades\": []\n        }\n    ],\n    \"item3\": [\n        \"Warren Uhrich\",\n        \"Tammy Valgardson\",\n        \"James Grieve\",\n        \"Aaron Champagne\",\n        \"Bo Cen\",\n        \"Kevin Moffitt\"\n    ],\n    \"item4\": [\n        {\n            \"courseId\": 1,\n            \"name\": \"C# Introduction\",\n            \"description\": \"Introduction to C# syntax, keywords, variables, control flow, comments, errors, exceptions, bugs and version control\",\n            \"durationHrs\": 24,\n            \"archive\": false,\n            \"homeworks\": [],\n            \"cohortCourses\": []\n        },\n        {\n            \"courseId\": 2,\n            \"name\": \"Version Control Using Git\",\n            \"description\": \"Software code base version control management using git and GitHub environment\",\n            \"durationHrs\": 3.75,\n            \"archive\": false,\n            \"homeworks\": [],\n            \"cohortCourses\": []\n        },\n        {\n            \"courseId\": 3,\n            \"name\": \"HTML\\\\CSS Fundamentals\",\n            \"description\": \"HTML5 fundamentals, semantic tags, semantic Elements , web controls, forms and basic validation\",\n            \"durationHrs\": 2.5,\n            \"archive\": false,\n            \"homeworks\": [],\n            \"cohortCourses\": []\n        },\n        {\n            \"courseId\": 4,\n            \"name\": \"CSS Advanced\",\n            \"description\": \"Theory, syntax, colors, selectors, attributes and layout models (box model, grid, etc.).\",\n            \"durationHrs\": 8.25,\n            \"archive\": false,\n            \"homeworks\": [],\n            \"cohortCourses\": []\n        },\n        {\n            \"courseId\": 5,\n            \"name\": \"JavaScript Fundamentals\",\n            \"description\": \"Variables, Strings, Functions, DOM, Events, API, Postman, AJAX, Fetch, JSON, Classes and Objects\",\n            \"durationHrs\": 15.75,\n            \"archive\": false,\n            \"homeworks\": [],\n            \"cohortCourses\": []\n        },\n        {\n            \"courseId\": 6,\n            \"name\": \"Reactjs\",\n            \"description\": \"Basic Intro; Install NPM; create-react-app, Components, Props, Events and State\",\n            \"durationHrs\": 8.75,\n            \"archive\": false,\n            \"homeworks\": [],\n            \"cohortCourses\": []\n        },\n        {\n            \"courseId\": 7,\n            \"name\": \"React-Redux\",\n            \"description\": \"Actions, Reducers, Store and React-Router-Dom\",\n            \"durationHrs\": 3.75,\n            \"archive\": false,\n            \"homeworks\": [],\n            \"cohortCourses\": []\n        },\n        {\n            \"courseId\": 8,\n            \"name\": \"PHP\",\n            \"description\": \"Basics, Global, Forms, Post, Get, Session, OOP, JSON and Files and API\",\n            \"durationHrs\": 16.5,\n            \"archive\": false,\n            \"homeworks\": [],\n            \"cohortCourses\": []\n        },\n        {\n            \"courseId\": 9,\n            \"name\": \"WordPress\",\n            \"description\": \"WordPress Introduction, WordPress Custom Theme and Plugin\",\n            \"durationHrs\": 16.15,\n            \"archive\": false,\n            \"homeworks\": [],\n            \"cohortCourses\": []\n        },\n        {\n            \"courseId\": 10,\n            \"name\": \"Database SQL\",\n            \"description\": \"ERD, Tables, Insert, Select, Join, Subquery, update and delete\",\n            \"durationHrs\": 19.25,\n            \"archive\": false,\n            \"homeworks\": [],\n            \"cohortCourses\": []\n        },\n        {\n            \"courseId\": 11,\n            \"name\": \"C# OOP\",\n            \"description\": \"Syntax, Decisions, Iteration, Collections, Functions and Exceptions. OOP Properties, Methods, Constructors, Inheritance, Polymorphism. XUnit Theories and Facts. Collections and LINQ. Entity Framework Database First and Code First\",\n            \"durationHrs\": 30.25,\n            \"archive\": false,\n            \"homeworks\": [],\n            \"cohortCourses\": []\n        },\n        {\n            \"courseId\": 12,\n            \"name\": \"DotNet Core\",\n            \"description\": \"MVC Core with EF, MVC Core with Static List, Business Logic and Validation, Security and Filtering, API, Reactjs with DotNet Core\",\n            \"durationHrs\": 22.5,\n            \"archive\": false,\n            \"homeworks\": [],\n            \"cohortCourses\": []\n        },\n        {\n            \"courseId\": 13,\n            \"name\": \"Milestone Project 1\",\n            \"description\": \"Milestone project at the end of each major series of courses - Programming basics conclusion\",\n            \"durationHrs\": 40,\n            \"archive\": false,\n            \"homeworks\": [],\n            \"cohortCourses\": []\n        },\n        {\n            \"courseId\": 14,\n            \"name\": \"Milestone Project 2\",\n            \"description\": \"Milestone project at the end of each major series of courses (React/Redux) - Frontend conclusion \",\n            \"durationHrs\": 40,\n            \"archive\": false,\n            \"homeworks\": [],\n            \"cohortCourses\": []\n        },\n        {\n            \"courseId\": 15,\n            \"name\": \"Capstone Project\",\n            \"description\": \"Program conclusion project\",\n            \"durationHrs\": 120,\n            \"archive\": true,\n            \"homeworks\": [],\n            \"cohortCourses\": []\n        },\n        {\n            \"courseId\": 16,\n            \"name\": \"Capstone\",\n            \"description\": \"Presentations\",\n            \"durationHrs\": 8,\n            \"archive\": false,\n            \"homeworks\": [],\n            \"cohortCourses\": []\n        },\n        {\n            \"courseId\": 17,\n            \"name\": \"React\",\n            \"description\": \"Basics\",\n            \"durationHrs\": 25,\n            \"archive\": false,\n            \"homeworks\": [],\n            \"cohortCourses\": []\n        }\n    ]\n}"
						},
						{
							"name": "CHECK/application/GetHomework",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44337/application/GetHomework?homeworkId=1",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"GetHomework"
									],
									"query": [
										{
											"key": "homeworkId",
											"value": "1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "1903"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Mon, 30 Nov 2020 04:52:23 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"item1\": {\n        \"homeworkId\": 1,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": false,\n        \"title\": \"React Calc\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": null,\n        \"gitHubClassRoomLink\": null,\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    \"item2\": [\n        {\n            \"rubricId\": 3,\n            \"homeworkId\": 1,\n            \"isChallenge\": true,\n            \"criteria\": \"Feature\",\n            \"weight\": 10,\n            \"archive\": false,\n            \"homework\": null,\n            \"grades\": []\n        },\n        {\n            \"rubricId\": 4,\n            \"homeworkId\": 1,\n            \"isChallenge\": false,\n            \"criteria\": \"Feature2\",\n            \"weight\": 50,\n            \"archive\": false,\n            \"homework\": null,\n            \"grades\": []\n        },\n        {\n            \"rubricId\": 21,\n            \"homeworkId\": 1,\n            \"isChallenge\": true,\n            \"criteria\": \"Feature3\",\n            \"weight\": 30,\n            \"archive\": false,\n            \"homework\": null,\n            \"grades\": []\n        },\n        {\n            \"rubricId\": 22,\n            \"homeworkId\": 1,\n            \"isChallenge\": false,\n            \"criteria\": \"Feature4\",\n            \"weight\": 10,\n            \"archive\": false,\n            \"homework\": null,\n            \"grades\": []\n        },\n        {\n            \"rubricId\": 23,\n            \"homeworkId\": 1,\n            \"isChallenge\": true,\n            \"criteria\": \"Feature5\",\n            \"weight\": 20,\n            \"archive\": false,\n            \"homework\": null,\n            \"grades\": []\n        }\n    ],\n    \"item3\": [\n        {\n            \"userId\": 1,\n            \"cohortId\": 1,\n            \"name\": \"testInstructor\",\n            \"passwordHash\": \"password\",\n            \"email\": \"test@gmail.com\",\n            \"isInstructor\": true,\n            \"archive\": false,\n            \"cohort\": null,\n            \"cohortCourses\": [],\n            \"homeworks\": [],\n            \"notifications\": [],\n            \"shoutOutsStudent\": [],\n            \"shoutOutsPeer\": [],\n            \"timesheets\": [],\n            \"grades\": []\n        },\n        {\n            \"userId\": 4,\n            \"cohortId\": 4,\n            \"name\": \"jbhbn\",\n            \"passwordHash\": \"kkkk,mm\",\n            \"email\": \"ddd@ddd.com\",\n            \"isInstructor\": true,\n            \"archive\": true,\n            \"cohort\": null,\n            \"cohortCourses\": [],\n            \"homeworks\": [],\n            \"notifications\": [],\n            \"shoutOutsStudent\": [],\n            \"shoutOutsPeer\": [],\n            \"timesheets\": [],\n            \"grades\": []\n        }\n    ],\n    \"item4\": [\n        {\n            \"courseId\": 1,\n            \"name\": \"PHP\",\n            \"description\": \"Basics\",\n            \"durationHrs\": 50,\n            \"archive\": true,\n            \"homeworks\": [],\n            \"cohortCourses\": []\n        },\n        {\n            \"courseId\": 2,\n            \"name\": \"HTML\",\n            \"description\": \"Basics\",\n            \"durationHrs\": 25,\n            \"archive\": false,\n            \"homeworks\": [],\n            \"cohortCourses\": []\n        },\n        {\n            \"courseId\": 3,\n            \"name\": \"Redux\",\n            \"description\": \"Basics\",\n            \"durationHrs\": 25.89,\n            \"archive\": false,\n            \"homeworks\": [],\n            \"cohortCourses\": []\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "/application/GetHomework",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/GetHomework?homeworkId=1",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"GetHomework"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "1"
								}
							]
						},
						"description": "/application/GetHomework Api call with wrong API call"
					},
					"response": [
						{
							"name": "CHECK/application/GetHomework",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44337/application/GetHomework?homeworkId=1",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"GetHomework"
									],
									"query": [
										{
											"key": "homeworkId",
											"value": "1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "1903"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Mon, 30 Nov 2020 04:52:23 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"item1\": {\n        \"homeworkId\": 1,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": false,\n        \"title\": \"React Calc\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": null,\n        \"gitHubClassRoomLink\": null,\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    \"item2\": [\n        {\n            \"rubricId\": 3,\n            \"homeworkId\": 1,\n            \"isChallenge\": true,\n            \"criteria\": \"Feature\",\n            \"weight\": 10,\n            \"archive\": false,\n            \"homework\": null,\n            \"grades\": []\n        },\n        {\n            \"rubricId\": 4,\n            \"homeworkId\": 1,\n            \"isChallenge\": false,\n            \"criteria\": \"Feature2\",\n            \"weight\": 50,\n            \"archive\": false,\n            \"homework\": null,\n            \"grades\": []\n        },\n        {\n            \"rubricId\": 21,\n            \"homeworkId\": 1,\n            \"isChallenge\": true,\n            \"criteria\": \"Feature3\",\n            \"weight\": 30,\n            \"archive\": false,\n            \"homework\": null,\n            \"grades\": []\n        },\n        {\n            \"rubricId\": 22,\n            \"homeworkId\": 1,\n            \"isChallenge\": false,\n            \"criteria\": \"Feature4\",\n            \"weight\": 10,\n            \"archive\": false,\n            \"homework\": null,\n            \"grades\": []\n        },\n        {\n            \"rubricId\": 23,\n            \"homeworkId\": 1,\n            \"isChallenge\": true,\n            \"criteria\": \"Feature5\",\n            \"weight\": 20,\n            \"archive\": false,\n            \"homework\": null,\n            \"grades\": []\n        }\n    ],\n    \"item3\": [\n        {\n            \"userId\": 1,\n            \"cohortId\": 1,\n            \"name\": \"testInstructor\",\n            \"passwordHash\": \"password\",\n            \"email\": \"test@gmail.com\",\n            \"isInstructor\": true,\n            \"archive\": false,\n            \"cohort\": null,\n            \"cohortCourses\": [],\n            \"homeworks\": [],\n            \"notifications\": [],\n            \"shoutOutsStudent\": [],\n            \"shoutOutsPeer\": [],\n            \"timesheets\": [],\n            \"grades\": []\n        },\n        {\n            \"userId\": 4,\n            \"cohortId\": 4,\n            \"name\": \"jbhbn\",\n            \"passwordHash\": \"kkkk,mm\",\n            \"email\": \"ddd@ddd.com\",\n            \"isInstructor\": true,\n            \"archive\": true,\n            \"cohort\": null,\n            \"cohortCourses\": [],\n            \"homeworks\": [],\n            \"notifications\": [],\n            \"shoutOutsStudent\": [],\n            \"shoutOutsPeer\": [],\n            \"timesheets\": [],\n            \"grades\": []\n        }\n    ],\n    \"item4\": [\n        {\n            \"courseId\": 1,\n            \"name\": \"PHP\",\n            \"description\": \"Basics\",\n            \"durationHrs\": 50,\n            \"archive\": true,\n            \"homeworks\": [],\n            \"cohortCourses\": []\n        },\n        {\n            \"courseId\": 2,\n            \"name\": \"HTML\",\n            \"description\": \"Basics\",\n            \"durationHrs\": 25,\n            \"archive\": false,\n            \"homeworks\": [],\n            \"cohortCourses\": []\n        },\n        {\n            \"courseId\": 3,\n            \"name\": \"Redux\",\n            \"description\": \"Basics\",\n            \"durationHrs\": 25.89,\n            \"archive\": false,\n            \"homeworks\": [],\n            \"cohortCourses\": []\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "/application/GetHomework",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/GetHomework?homeworkId=",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"GetHomework"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": ""
								}
							]
						},
						"description": "/application/GetHomework Api call with null value"
					},
					"response": [
						{
							"name": "CHECK/application/GetHomework",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44337/application/GetHomework?homeworkId=1",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"GetHomework"
									],
									"query": [
										{
											"key": "homeworkId",
											"value": "1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "1903"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Mon, 30 Nov 2020 04:52:23 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"item1\": {\n        \"homeworkId\": 1,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": false,\n        \"title\": \"React Calc\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": null,\n        \"gitHubClassRoomLink\": null,\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    \"item2\": [\n        {\n            \"rubricId\": 3,\n            \"homeworkId\": 1,\n            \"isChallenge\": true,\n            \"criteria\": \"Feature\",\n            \"weight\": 10,\n            \"archive\": false,\n            \"homework\": null,\n            \"grades\": []\n        },\n        {\n            \"rubricId\": 4,\n            \"homeworkId\": 1,\n            \"isChallenge\": false,\n            \"criteria\": \"Feature2\",\n            \"weight\": 50,\n            \"archive\": false,\n            \"homework\": null,\n            \"grades\": []\n        },\n        {\n            \"rubricId\": 21,\n            \"homeworkId\": 1,\n            \"isChallenge\": true,\n            \"criteria\": \"Feature3\",\n            \"weight\": 30,\n            \"archive\": false,\n            \"homework\": null,\n            \"grades\": []\n        },\n        {\n            \"rubricId\": 22,\n            \"homeworkId\": 1,\n            \"isChallenge\": false,\n            \"criteria\": \"Feature4\",\n            \"weight\": 10,\n            \"archive\": false,\n            \"homework\": null,\n            \"grades\": []\n        },\n        {\n            \"rubricId\": 23,\n            \"homeworkId\": 1,\n            \"isChallenge\": true,\n            \"criteria\": \"Feature5\",\n            \"weight\": 20,\n            \"archive\": false,\n            \"homework\": null,\n            \"grades\": []\n        }\n    ],\n    \"item3\": [\n        {\n            \"userId\": 1,\n            \"cohortId\": 1,\n            \"name\": \"testInstructor\",\n            \"passwordHash\": \"password\",\n            \"email\": \"test@gmail.com\",\n            \"isInstructor\": true,\n            \"archive\": false,\n            \"cohort\": null,\n            \"cohortCourses\": [],\n            \"homeworks\": [],\n            \"notifications\": [],\n            \"shoutOutsStudent\": [],\n            \"shoutOutsPeer\": [],\n            \"timesheets\": [],\n            \"grades\": []\n        },\n        {\n            \"userId\": 4,\n            \"cohortId\": 4,\n            \"name\": \"jbhbn\",\n            \"passwordHash\": \"kkkk,mm\",\n            \"email\": \"ddd@ddd.com\",\n            \"isInstructor\": true,\n            \"archive\": true,\n            \"cohort\": null,\n            \"cohortCourses\": [],\n            \"homeworks\": [],\n            \"notifications\": [],\n            \"shoutOutsStudent\": [],\n            \"shoutOutsPeer\": [],\n            \"timesheets\": [],\n            \"grades\": []\n        }\n    ],\n    \"item4\": [\n        {\n            \"courseId\": 1,\n            \"name\": \"PHP\",\n            \"description\": \"Basics\",\n            \"durationHrs\": 50,\n            \"archive\": true,\n            \"homeworks\": [],\n            \"cohortCourses\": []\n        },\n        {\n            \"courseId\": 2,\n            \"name\": \"HTML\",\n            \"description\": \"Basics\",\n            \"durationHrs\": 25,\n            \"archive\": false,\n            \"homeworks\": [],\n            \"cohortCourses\": []\n        },\n        {\n            \"courseId\": 3,\n            \"name\": \"Redux\",\n            \"description\": \"Basics\",\n            \"durationHrs\": 25.89,\n            \"archive\": false,\n            \"homeworks\": [],\n            \"cohortCourses\": []\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "/application/GetHomework",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/GetHomework?homeworkId=      ",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"GetHomework"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "      "
								}
							]
						},
						"description": "/application/GetHomework Api call with just whitespaces for Not Null Parameters no data in it \"\""
					},
					"response": [
						{
							"name": "CHECK/application/GetHomework",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44337/application/GetHomework?homeworkId=1",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"GetHomework"
									],
									"query": [
										{
											"key": "homeworkId",
											"value": "1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "1903"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Mon, 30 Nov 2020 04:52:23 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"item1\": {\n        \"homeworkId\": 1,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": false,\n        \"title\": \"React Calc\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": null,\n        \"gitHubClassRoomLink\": null,\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    \"item2\": [\n        {\n            \"rubricId\": 3,\n            \"homeworkId\": 1,\n            \"isChallenge\": true,\n            \"criteria\": \"Feature\",\n            \"weight\": 10,\n            \"archive\": false,\n            \"homework\": null,\n            \"grades\": []\n        },\n        {\n            \"rubricId\": 4,\n            \"homeworkId\": 1,\n            \"isChallenge\": false,\n            \"criteria\": \"Feature2\",\n            \"weight\": 50,\n            \"archive\": false,\n            \"homework\": null,\n            \"grades\": []\n        },\n        {\n            \"rubricId\": 21,\n            \"homeworkId\": 1,\n            \"isChallenge\": true,\n            \"criteria\": \"Feature3\",\n            \"weight\": 30,\n            \"archive\": false,\n            \"homework\": null,\n            \"grades\": []\n        },\n        {\n            \"rubricId\": 22,\n            \"homeworkId\": 1,\n            \"isChallenge\": false,\n            \"criteria\": \"Feature4\",\n            \"weight\": 10,\n            \"archive\": false,\n            \"homework\": null,\n            \"grades\": []\n        },\n        {\n            \"rubricId\": 23,\n            \"homeworkId\": 1,\n            \"isChallenge\": true,\n            \"criteria\": \"Feature5\",\n            \"weight\": 20,\n            \"archive\": false,\n            \"homework\": null,\n            \"grades\": []\n        }\n    ],\n    \"item3\": [\n        {\n            \"userId\": 1,\n            \"cohortId\": 1,\n            \"name\": \"testInstructor\",\n            \"passwordHash\": \"password\",\n            \"email\": \"test@gmail.com\",\n            \"isInstructor\": true,\n            \"archive\": false,\n            \"cohort\": null,\n            \"cohortCourses\": [],\n            \"homeworks\": [],\n            \"notifications\": [],\n            \"shoutOutsStudent\": [],\n            \"shoutOutsPeer\": [],\n            \"timesheets\": [],\n            \"grades\": []\n        },\n        {\n            \"userId\": 4,\n            \"cohortId\": 4,\n            \"name\": \"jbhbn\",\n            \"passwordHash\": \"kkkk,mm\",\n            \"email\": \"ddd@ddd.com\",\n            \"isInstructor\": true,\n            \"archive\": true,\n            \"cohort\": null,\n            \"cohortCourses\": [],\n            \"homeworks\": [],\n            \"notifications\": [],\n            \"shoutOutsStudent\": [],\n            \"shoutOutsPeer\": [],\n            \"timesheets\": [],\n            \"grades\": []\n        }\n    ],\n    \"item4\": [\n        {\n            \"courseId\": 1,\n            \"name\": \"PHP\",\n            \"description\": \"Basics\",\n            \"durationHrs\": 50,\n            \"archive\": true,\n            \"homeworks\": [],\n            \"cohortCourses\": []\n        },\n        {\n            \"courseId\": 2,\n            \"name\": \"HTML\",\n            \"description\": \"Basics\",\n            \"durationHrs\": 25,\n            \"archive\": false,\n            \"homeworks\": [],\n            \"cohortCourses\": []\n        },\n        {\n            \"courseId\": 3,\n            \"name\": \"Redux\",\n            \"description\": \"Basics\",\n            \"durationHrs\": 25.89,\n            \"archive\": false,\n            \"homeworks\": [],\n            \"cohortCourses\": []\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "/application/GetHomework",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/GetHomework?homeworkId=      $$2",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"GetHomework"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "      $$2"
								}
							]
						},
						"description": "/application/GetHomework Api call with invalid datatype (parsing)"
					},
					"response": [
						{
							"name": "CHECK/application/GetHomework",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44337/application/GetHomework?homeworkId=1",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"GetHomework"
									],
									"query": [
										{
											"key": "homeworkId",
											"value": "1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "1903"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Mon, 30 Nov 2020 04:52:23 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"item1\": {\n        \"homeworkId\": 1,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": false,\n        \"title\": \"React Calc\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": null,\n        \"gitHubClassRoomLink\": null,\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    \"item2\": [\n        {\n            \"rubricId\": 3,\n            \"homeworkId\": 1,\n            \"isChallenge\": true,\n            \"criteria\": \"Feature\",\n            \"weight\": 10,\n            \"archive\": false,\n            \"homework\": null,\n            \"grades\": []\n        },\n        {\n            \"rubricId\": 4,\n            \"homeworkId\": 1,\n            \"isChallenge\": false,\n            \"criteria\": \"Feature2\",\n            \"weight\": 50,\n            \"archive\": false,\n            \"homework\": null,\n            \"grades\": []\n        },\n        {\n            \"rubricId\": 21,\n            \"homeworkId\": 1,\n            \"isChallenge\": true,\n            \"criteria\": \"Feature3\",\n            \"weight\": 30,\n            \"archive\": false,\n            \"homework\": null,\n            \"grades\": []\n        },\n        {\n            \"rubricId\": 22,\n            \"homeworkId\": 1,\n            \"isChallenge\": false,\n            \"criteria\": \"Feature4\",\n            \"weight\": 10,\n            \"archive\": false,\n            \"homework\": null,\n            \"grades\": []\n        },\n        {\n            \"rubricId\": 23,\n            \"homeworkId\": 1,\n            \"isChallenge\": true,\n            \"criteria\": \"Feature5\",\n            \"weight\": 20,\n            \"archive\": false,\n            \"homework\": null,\n            \"grades\": []\n        }\n    ],\n    \"item3\": [\n        {\n            \"userId\": 1,\n            \"cohortId\": 1,\n            \"name\": \"testInstructor\",\n            \"passwordHash\": \"password\",\n            \"email\": \"test@gmail.com\",\n            \"isInstructor\": true,\n            \"archive\": false,\n            \"cohort\": null,\n            \"cohortCourses\": [],\n            \"homeworks\": [],\n            \"notifications\": [],\n            \"shoutOutsStudent\": [],\n            \"shoutOutsPeer\": [],\n            \"timesheets\": [],\n            \"grades\": []\n        },\n        {\n            \"userId\": 4,\n            \"cohortId\": 4,\n            \"name\": \"jbhbn\",\n            \"passwordHash\": \"kkkk,mm\",\n            \"email\": \"ddd@ddd.com\",\n            \"isInstructor\": true,\n            \"archive\": true,\n            \"cohort\": null,\n            \"cohortCourses\": [],\n            \"homeworks\": [],\n            \"notifications\": [],\n            \"shoutOutsStudent\": [],\n            \"shoutOutsPeer\": [],\n            \"timesheets\": [],\n            \"grades\": []\n        }\n    ],\n    \"item4\": [\n        {\n            \"courseId\": 1,\n            \"name\": \"PHP\",\n            \"description\": \"Basics\",\n            \"durationHrs\": 50,\n            \"archive\": true,\n            \"homeworks\": [],\n            \"cohortCourses\": []\n        },\n        {\n            \"courseId\": 2,\n            \"name\": \"HTML\",\n            \"description\": \"Basics\",\n            \"durationHrs\": 25,\n            \"archive\": false,\n            \"homeworks\": [],\n            \"cohortCourses\": []\n        },\n        {\n            \"courseId\": 3,\n            \"name\": \"Redux\",\n            \"description\": \"Basics\",\n            \"durationHrs\": 25.89,\n            \"archive\": false,\n            \"homeworks\": [],\n            \"cohortCourses\": []\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "/application/GetHomework",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/GetHomework?homeworkId=-88888888888888888888",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"GetHomework"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "-88888888888888888888"
								}
							]
						},
						"description": "/application/GetHomework Api call with param exceeding the size"
					},
					"response": [
						{
							"name": "CHECK/application/GetHomework",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44337/application/GetHomework?homeworkId=1",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"GetHomework"
									],
									"query": [
										{
											"key": "homeworkId",
											"value": "1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "1903"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Mon, 30 Nov 2020 04:52:23 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"item1\": {\n        \"homeworkId\": 1,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": false,\n        \"title\": \"React Calc\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": null,\n        \"gitHubClassRoomLink\": null,\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    \"item2\": [\n        {\n            \"rubricId\": 3,\n            \"homeworkId\": 1,\n            \"isChallenge\": true,\n            \"criteria\": \"Feature\",\n            \"weight\": 10,\n            \"archive\": false,\n            \"homework\": null,\n            \"grades\": []\n        },\n        {\n            \"rubricId\": 4,\n            \"homeworkId\": 1,\n            \"isChallenge\": false,\n            \"criteria\": \"Feature2\",\n            \"weight\": 50,\n            \"archive\": false,\n            \"homework\": null,\n            \"grades\": []\n        },\n        {\n            \"rubricId\": 21,\n            \"homeworkId\": 1,\n            \"isChallenge\": true,\n            \"criteria\": \"Feature3\",\n            \"weight\": 30,\n            \"archive\": false,\n            \"homework\": null,\n            \"grades\": []\n        },\n        {\n            \"rubricId\": 22,\n            \"homeworkId\": 1,\n            \"isChallenge\": false,\n            \"criteria\": \"Feature4\",\n            \"weight\": 10,\n            \"archive\": false,\n            \"homework\": null,\n            \"grades\": []\n        },\n        {\n            \"rubricId\": 23,\n            \"homeworkId\": 1,\n            \"isChallenge\": true,\n            \"criteria\": \"Feature5\",\n            \"weight\": 20,\n            \"archive\": false,\n            \"homework\": null,\n            \"grades\": []\n        }\n    ],\n    \"item3\": [\n        {\n            \"userId\": 1,\n            \"cohortId\": 1,\n            \"name\": \"testInstructor\",\n            \"passwordHash\": \"password\",\n            \"email\": \"test@gmail.com\",\n            \"isInstructor\": true,\n            \"archive\": false,\n            \"cohort\": null,\n            \"cohortCourses\": [],\n            \"homeworks\": [],\n            \"notifications\": [],\n            \"shoutOutsStudent\": [],\n            \"shoutOutsPeer\": [],\n            \"timesheets\": [],\n            \"grades\": []\n        },\n        {\n            \"userId\": 4,\n            \"cohortId\": 4,\n            \"name\": \"jbhbn\",\n            \"passwordHash\": \"kkkk,mm\",\n            \"email\": \"ddd@ddd.com\",\n            \"isInstructor\": true,\n            \"archive\": true,\n            \"cohort\": null,\n            \"cohortCourses\": [],\n            \"homeworks\": [],\n            \"notifications\": [],\n            \"shoutOutsStudent\": [],\n            \"shoutOutsPeer\": [],\n            \"timesheets\": [],\n            \"grades\": []\n        }\n    ],\n    \"item4\": [\n        {\n            \"courseId\": 1,\n            \"name\": \"PHP\",\n            \"description\": \"Basics\",\n            \"durationHrs\": 50,\n            \"archive\": true,\n            \"homeworks\": [],\n            \"cohortCourses\": []\n        },\n        {\n            \"courseId\": 2,\n            \"name\": \"HTML\",\n            \"description\": \"Basics\",\n            \"durationHrs\": 25,\n            \"archive\": false,\n            \"homeworks\": [],\n            \"cohortCourses\": []\n        },\n        {\n            \"courseId\": 3,\n            \"name\": \"Redux\",\n            \"description\": \"Basics\",\n            \"durationHrs\": 25.89,\n            \"archive\": false,\n            \"homeworks\": [],\n            \"cohortCourses\": []\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "/application/GetHomework",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/GetHomework?homeworkId=8",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"GetHomework"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "8"
								}
							]
						},
						"description": "/application/GetHomework Api call to GET all archived record"
					},
					"response": [
						{
							"name": "CHECK/application/GetHomework",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44337/application/GetHomework?homeworkId=1",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"GetHomework"
									],
									"query": [
										{
											"key": "homeworkId",
											"value": "1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "1903"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Mon, 30 Nov 2020 04:52:23 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"item1\": {\n        \"homeworkId\": 1,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": false,\n        \"title\": \"React Calc\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": null,\n        \"gitHubClassRoomLink\": null,\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    \"item2\": [\n        {\n            \"rubricId\": 3,\n            \"homeworkId\": 1,\n            \"isChallenge\": true,\n            \"criteria\": \"Feature\",\n            \"weight\": 10,\n            \"archive\": false,\n            \"homework\": null,\n            \"grades\": []\n        },\n        {\n            \"rubricId\": 4,\n            \"homeworkId\": 1,\n            \"isChallenge\": false,\n            \"criteria\": \"Feature2\",\n            \"weight\": 50,\n            \"archive\": false,\n            \"homework\": null,\n            \"grades\": []\n        },\n        {\n            \"rubricId\": 21,\n            \"homeworkId\": 1,\n            \"isChallenge\": true,\n            \"criteria\": \"Feature3\",\n            \"weight\": 30,\n            \"archive\": false,\n            \"homework\": null,\n            \"grades\": []\n        },\n        {\n            \"rubricId\": 22,\n            \"homeworkId\": 1,\n            \"isChallenge\": false,\n            \"criteria\": \"Feature4\",\n            \"weight\": 10,\n            \"archive\": false,\n            \"homework\": null,\n            \"grades\": []\n        },\n        {\n            \"rubricId\": 23,\n            \"homeworkId\": 1,\n            \"isChallenge\": true,\n            \"criteria\": \"Feature5\",\n            \"weight\": 20,\n            \"archive\": false,\n            \"homework\": null,\n            \"grades\": []\n        }\n    ],\n    \"item3\": [\n        {\n            \"userId\": 1,\n            \"cohortId\": 1,\n            \"name\": \"testInstructor\",\n            \"passwordHash\": \"password\",\n            \"email\": \"test@gmail.com\",\n            \"isInstructor\": true,\n            \"archive\": false,\n            \"cohort\": null,\n            \"cohortCourses\": [],\n            \"homeworks\": [],\n            \"notifications\": [],\n            \"shoutOutsStudent\": [],\n            \"shoutOutsPeer\": [],\n            \"timesheets\": [],\n            \"grades\": []\n        },\n        {\n            \"userId\": 4,\n            \"cohortId\": 4,\n            \"name\": \"jbhbn\",\n            \"passwordHash\": \"kkkk,mm\",\n            \"email\": \"ddd@ddd.com\",\n            \"isInstructor\": true,\n            \"archive\": true,\n            \"cohort\": null,\n            \"cohortCourses\": [],\n            \"homeworks\": [],\n            \"notifications\": [],\n            \"shoutOutsStudent\": [],\n            \"shoutOutsPeer\": [],\n            \"timesheets\": [],\n            \"grades\": []\n        }\n    ],\n    \"item4\": [\n        {\n            \"courseId\": 1,\n            \"name\": \"PHP\",\n            \"description\": \"Basics\",\n            \"durationHrs\": 50,\n            \"archive\": true,\n            \"homeworks\": [],\n            \"cohortCourses\": []\n        },\n        {\n            \"courseId\": 2,\n            \"name\": \"HTML\",\n            \"description\": \"Basics\",\n            \"durationHrs\": 25,\n            \"archive\": false,\n            \"homeworks\": [],\n            \"cohortCourses\": []\n        },\n        {\n            \"courseId\": 3,\n            \"name\": \"Redux\",\n            \"description\": \"Basics\",\n            \"durationHrs\": 25.89,\n            \"archive\": false,\n            \"homeworks\": [],\n            \"cohortCourses\": []\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "/application/GetHomework",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/GetHomework?homeworkId=-8.5",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"GetHomework"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "-8.5"
								}
							]
						},
						"description": "/application/GetHomework Numeric values out of range  i.e., int and float datatypes"
					},
					"response": [
						{
							"name": "CHECK/application/GetHomework",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44337/application/GetHomework?homeworkId=1",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"GetHomework"
									],
									"query": [
										{
											"key": "homeworkId",
											"value": "1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "1903"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Mon, 30 Nov 2020 04:52:23 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"item1\": {\n        \"homeworkId\": 1,\n        \"courseId\": 2,\n        \"cohortId\": 1,\n        \"instructorId\": 1,\n        \"isAssignment\": false,\n        \"title\": \"React Calc\",\n        \"avgCompletionTime\": 1,\n        \"dueDate\": \"2020-01-04T00:00:00\",\n        \"releaseDate\": null,\n        \"documentLink\": null,\n        \"gitHubClassRoomLink\": null,\n        \"archive\": false,\n        \"course\": null,\n        \"cohort\": null,\n        \"instructor\": null,\n        \"shoutOuts\": [],\n        \"timesheets\": [],\n        \"rubrics\": []\n    },\n    \"item2\": [\n        {\n            \"rubricId\": 3,\n            \"homeworkId\": 1,\n            \"isChallenge\": true,\n            \"criteria\": \"Feature\",\n            \"weight\": 10,\n            \"archive\": false,\n            \"homework\": null,\n            \"grades\": []\n        },\n        {\n            \"rubricId\": 4,\n            \"homeworkId\": 1,\n            \"isChallenge\": false,\n            \"criteria\": \"Feature2\",\n            \"weight\": 50,\n            \"archive\": false,\n            \"homework\": null,\n            \"grades\": []\n        },\n        {\n            \"rubricId\": 21,\n            \"homeworkId\": 1,\n            \"isChallenge\": true,\n            \"criteria\": \"Feature3\",\n            \"weight\": 30,\n            \"archive\": false,\n            \"homework\": null,\n            \"grades\": []\n        },\n        {\n            \"rubricId\": 22,\n            \"homeworkId\": 1,\n            \"isChallenge\": false,\n            \"criteria\": \"Feature4\",\n            \"weight\": 10,\n            \"archive\": false,\n            \"homework\": null,\n            \"grades\": []\n        },\n        {\n            \"rubricId\": 23,\n            \"homeworkId\": 1,\n            \"isChallenge\": true,\n            \"criteria\": \"Feature5\",\n            \"weight\": 20,\n            \"archive\": false,\n            \"homework\": null,\n            \"grades\": []\n        }\n    ],\n    \"item3\": [\n        {\n            \"userId\": 1,\n            \"cohortId\": 1,\n            \"name\": \"testInstructor\",\n            \"passwordHash\": \"password\",\n            \"email\": \"test@gmail.com\",\n            \"isInstructor\": true,\n            \"archive\": false,\n            \"cohort\": null,\n            \"cohortCourses\": [],\n            \"homeworks\": [],\n            \"notifications\": [],\n            \"shoutOutsStudent\": [],\n            \"shoutOutsPeer\": [],\n            \"timesheets\": [],\n            \"grades\": []\n        },\n        {\n            \"userId\": 4,\n            \"cohortId\": 4,\n            \"name\": \"jbhbn\",\n            \"passwordHash\": \"kkkk,mm\",\n            \"email\": \"ddd@ddd.com\",\n            \"isInstructor\": true,\n            \"archive\": true,\n            \"cohort\": null,\n            \"cohortCourses\": [],\n            \"homeworks\": [],\n            \"notifications\": [],\n            \"shoutOutsStudent\": [],\n            \"shoutOutsPeer\": [],\n            \"timesheets\": [],\n            \"grades\": []\n        }\n    ],\n    \"item4\": [\n        {\n            \"courseId\": 1,\n            \"name\": \"PHP\",\n            \"description\": \"Basics\",\n            \"durationHrs\": 50,\n            \"archive\": true,\n            \"homeworks\": [],\n            \"cohortCourses\": []\n        },\n        {\n            \"courseId\": 2,\n            \"name\": \"HTML\",\n            \"description\": \"Basics\",\n            \"durationHrs\": 25,\n            \"archive\": false,\n            \"homeworks\": [],\n            \"cohortCourses\": []\n        },\n        {\n            \"courseId\": 3,\n            \"name\": \"Redux\",\n            \"description\": \"Basics\",\n            \"durationHrs\": 25.89,\n            \"archive\": false,\n            \"homeworks\": [],\n            \"cohortCourses\": []\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "/application/HomeworkTimesheet",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/HomeworkTimesheet",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"HomeworkTimesheet"
							]
						},
						"description": "/application/HomeworkTimesheet with No seed data"
					},
					"response": []
				},
				{
					"name": "/application/HomeworkTimesheet",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/HomeworkTimesheet",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"HomeworkTimesheet"
							]
						},
						"description": "/application/HomeworkTimesheet with No parameters"
					},
					"response": []
				},
				{
					"name": "/application/HomeworkTimesheet",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/HomeworkTimesheet?homeworkId=1",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"HomeworkTimesheet"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "1"
								}
							]
						},
						"description": "/application/HomeworkTimesheet with some parameters"
					},
					"response": []
				},
				{
					"name": "/application/HomeworkTimesheet",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/HomeworkTimesheet?homeworkId=1&studentId=2",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"HomeworkTimesheet"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "1"
								},
								{
									"key": "studentId",
									"value": "2"
								}
							]
						},
						"description": "/application/HomeworkTimesheet with all parameters"
					},
					"response": []
				},
				{
					"name": "/application/HomeworkTimesheet",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/HomeworkTimesheet?homeworkId=1000000000000000000000000&studentId=-2555555555555555555555555555",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"HomeworkTimesheet"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "1000000000000000000000000"
								},
								{
									"key": "studentId",
									"value": "-2555555555555555555555555555"
								}
							]
						},
						"description": "/application/HomeworkTimesheet Api call with param exceeding the size"
					},
					"response": []
				},
				{
					"name": "/application/HomeworkTimesheet",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/HomeworkTimesheet?homeworkId=1&studentId=2",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"HomeworkTimesheet"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "1"
								},
								{
									"key": "studentId",
									"value": "2"
								}
							]
						},
						"description": "/application/HomeworkTimesheet,Wrong API call with all parameters"
					},
					"response": []
				},
				{
					"name": "/application/HomeworkTimesheet",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/HomeworkTimesheet?homeworkId=&studentId=",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"HomeworkTimesheet"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "",
									"description": "Error(s) During GetHomeworkTimesheetForStudent: homeworkId is null. (Parameter 'homeworkId'), studentId is null. (Parameter 'studentId')"
								},
								{
									"key": "studentId",
									"value": ""
								}
							]
						},
						"description": "/application/HomeworkTimesheet,Api call all parameters with null values"
					},
					"response": []
				},
				{
					"name": "/application/HomeworkTimesheet",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/HomeworkTimesheet?homeworkId=  &studentId=  ",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"HomeworkTimesheet"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "  "
								},
								{
									"key": "studentId",
									"value": "  "
								}
							]
						},
						"description": "/application/HomeworkTimesheet,Api call with just whitespaces for Not Null Parameters no data in it \"\""
					},
					"response": []
				},
				{
					"name": "/application/HomeworkTimesheet",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/HomeworkTimesheet?homeworkId=$$&studentId=^^^",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"HomeworkTimesheet"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "$$"
								},
								{
									"key": "studentId",
									"value": "^^^"
								}
							]
						},
						"description": "/application/HomeworkTimesheet,Api call with invalid datatype (parsing)"
					},
					"response": []
				},
				{
					"name": "/application/HomeworkTimesheet",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/HomeworkTimesheet?homeworkId=  -8888888888888&studentId=  123333333333",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"HomeworkTimesheet"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "  -8888888888888"
								},
								{
									"key": "studentId",
									"value": "  123333333333"
								}
							]
						},
						"description": "/application/HomeworkTimesheet,Api call with param exceeding the size"
					},
					"response": []
				},
				{
					"name": "/application/HomeworkTimesheet",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/HomeworkTimesheet?homeworkId=8&studentId=2",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"HomeworkTimesheet"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "8"
								},
								{
									"key": "studentId",
									"value": "2"
								}
							]
						},
						"description": "/application/HomeworkTimesheet,Api call to GET all archived record"
					},
					"response": []
				},
				{
					"name": "/application/HomeworkTimesheet",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/HomeworkTimesheet?homeworkId=8.55&studentId=2.88",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"HomeworkTimesheet"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "8.55"
								},
								{
									"key": "studentId",
									"value": "2.88"
								}
							]
						},
						"description": "/application/HomeworkTimesheet,Numeric values out of range  i.e., int and float datatypes"
					},
					"response": []
				},
				{
					"name": "/application/ArchiveHomework",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/ArchiveHomework?homeworkId",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"ArchiveHomework"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": null,
									"description": "Error(s) During ArchiveHomework: homeworkId is null. (Parameter 'homeworkId')"
								}
							]
						},
						"description": "Archive Archive Homework by HomeworkId, call with valid parameters key and missing value"
					},
					"response": []
				},
				{
					"name": "/application/ArchiveHomework",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/ArchiveHomework",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"ArchiveHomework"
							],
							"query": [
								{
									"key": "",
									"value": null,
									"description": "Error(s) During ArchiveHomework: homeworkId is null. (Parameter 'homeworkId')",
									"disabled": true
								}
							]
						},
						"description": "Archive Archive Homework by HomeworkId, call with missing parameters key and value"
					},
					"response": []
				},
				{
					"name": "/application/ArchiveHomework",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/ArchiveHomework?homeworkId=10",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"ArchiveHomework"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "10",
									"description": "Error(s) During ArchiveHomework: Homework Id does not exist"
								}
							]
						},
						"description": "Archive Archive Homework by HomeworkId, call with valid parameters key and nonexisting value"
					},
					"response": []
				},
				{
					"name": "/application/ArchiveHomework",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/ArchiveHomework?homeworkId=d",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"ArchiveHomework"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "d",
									"description": "Error(s) During ArchiveHomework: Invalid value for Homework Id, HomeworkId Id value should be between 1 & 2147483647 inclusive"
								}
							]
						},
						"description": "Archive Archive Homework by HomeworkId, call with valid parameters key and invlaid value data type"
					},
					"response": [
						{
							"name": "/application/ArchiveCohort",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "https://localhost:44337/application/ArchiveCohort?cohortId=b",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"ArchiveCohort"
									],
									"query": [
										{
											"key": "cohortId",
											"value": "b"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sat, 28 Nov 2020 00:52:56 GMT"
								}
							],
							"cookie": [],
							"body": "Error(s) During ArchiveCohort: Invalid value for Cohort Id"
						}
					]
				},
				{
					"name": "/application/ArchiveHomework",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/ArchiveHomework?homeworkId=                       ",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"ArchiveHomework"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "                       ",
									"description": "Error(s) During ArchiveHomework: homeworkId is null. (Parameter 'homeworkId')"
								}
							]
						},
						"description": "Archive Archive Homework by HomeworkId, call with valid parameters key and whitespaces as value"
					},
					"response": [
						{
							"name": "/application/ArchiveCohort",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "https://localhost:44337/application/ArchiveCohort?cohortId=b",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"ArchiveCohort"
									],
									"query": [
										{
											"key": "cohortId",
											"value": "b"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sat, 28 Nov 2020 00:52:56 GMT"
								}
							],
							"cookie": [],
							"body": "Error(s) During ArchiveCohort: Invalid value for Cohort Id"
						}
					]
				},
				{
					"name": "/application/ArchiveHomework",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/ArchiveHomework?homeworkId=          7              ",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"ArchiveHomework"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "          7              ",
									"description": "Successfully Archived Homework Id: 7"
								}
							]
						},
						"description": "Archive Archive Homework by HomeworkId, call with valid parameters key and whitespaces around the value"
					},
					"response": [
						{
							"name": "/application/ArchiveCohort",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "https://localhost:44337/application/ArchiveCohort?cohortId=b",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"ArchiveCohort"
									],
									"query": [
										{
											"key": "cohortId",
											"value": "b"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sat, 28 Nov 2020 00:52:56 GMT"
								}
							],
							"cookie": [],
							"body": "Error(s) During ArchiveCohort: Invalid value for Cohort Id"
						}
					]
				},
				{
					"name": "/application/ArchiveHomework",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/ArchiveHomework?homeworkId=-10",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"ArchiveHomework"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "21474836470",
									"description": "Error(s) During ArchiveHomework: Invalid value for Homework Id, HomeworkId Id value should be between 1 & 2147483647 inclusive",
									"disabled": true
								},
								{
									"key": "homeworkId",
									"value": "-10",
									"description": "Error(s) During ArchiveHomework: HomeworkId Id value should be between 1 & 2147483647 inclusive"
								}
							]
						},
						"description": "Archive Archive Homework by HomeworkId, call with valid parameters key and out of range value HomeworkId (int(10) 10)"
					},
					"response": [
						{
							"name": "/application/ArchiveCohort",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "https://localhost:44337/application/ArchiveCohort?cohortId=b",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"ArchiveCohort"
									],
									"query": [
										{
											"key": "cohortId",
											"value": "b"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sat, 28 Nov 2020 00:52:56 GMT"
								}
							],
							"cookie": [],
							"body": "Error(s) During ArchiveCohort: Invalid value for Cohort Id"
						}
					]
				},
				{
					"name": "/application/ArchiveHomework",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/ArchiveHomework?homeworkId=4",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"ArchiveHomework"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "4",
									"description": "Successfully Archived Homework Id: 4"
								}
							]
						},
						"description": "Archive Archive Homework by HomeworkId, call with valid parameters keys and values"
					},
					"response": []
				},
				{
					"name": "/application/ArchiveHomework",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/ArchiveHomework?homeworkId=4",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"ArchiveHomework"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "4",
									"description": "Error(s) During ArchiveHomework: Homework is already archived"
								}
							]
						},
						"description": "Archive Archive Homework by HomeworkId, call for archived cohort, with valid parameters keys and values"
					},
					"response": []
				},
				{
					"name": "/application/ArchiveHomework",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/ArchiveHomework?homeworkId=1",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"ArchiveHomework"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "1",
									"description": "Error(s) During ArchiveHomework: Homework Id does not exist"
								}
							]
						},
						"description": "Archive Archive Homework by HomeworkId,  call with valid parameters and no data seeded in target tables (homework,etc.)"
					},
					"response": [
						{
							"name": "/application/ArchiveCohort",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "https://localhost:44337/application/ArchiveCohort?cohortId=b",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"ArchiveCohort"
									],
									"query": [
										{
											"key": "cohortId",
											"value": "b"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sat, 28 Nov 2020 00:52:56 GMT"
								}
							],
							"cookie": [],
							"body": "Error(s) During ArchiveCohort: Invalid value for Cohort Id"
						}
					]
				},
				{
					"name": "/application/ArchiveHomework",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/ArchiveHomework?homeworkId=4",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"ArchiveHomework"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "4",
									"description": "Unexpected server/database error occurred. System error message(s): Table 'azlearndb.homework' doesn't exist"
								}
							]
						},
						"description": "Archive Archive Homework by HomeworkId, call with valid parameters and no database"
					},
					"response": [
						{
							"name": "/application/ArchiveCohort",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "https://localhost:44337/application/ArchiveCohort?cohortId=b",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"ArchiveCohort"
									],
									"query": [
										{
											"key": "cohortId",
											"value": "b"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sat, 28 Nov 2020 00:52:56 GMT"
								}
							],
							"cookie": [],
							"body": "Error(s) During ArchiveCohort: Invalid value for Cohort Id"
						}
					]
				}
			],
			"description": "HomeworkController EndPoints Testing\r\n/application/CreateHomework\r\n/application/UpdateHomework\r\n/application/HomeworkTimesheet\r\n/application/GetHomework\r\n/application/HomeworkSummary\r\n",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "5e74aa68-aecb-4ab5-a23b-a639fcbeb6a5",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "abe188dc-812c-4b14-b546-d24980a333ca",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "GradeController",
			"item": [
				{
					"name": "/application/CreateGrading",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/CreateGrading",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateGrading"
							],
							"query": [
								{
									"key": "studentId",
									"value": "2",
									"disabled": true
								},
								{
									"key": "rubricId",
									"value": "3",
									"disabled": true
								},
								{
									"key": "marks",
									"value": "10",
									"disabled": true
								},
								{
									"key": "",
									"value": null,
									"disabled": true
								}
							]
						},
						"description": "/application/CreateGrading Api call with no parameters"
					},
					"response": []
				},
				{
					"name": "/application/CreateGrading",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"3\":{\r\n        \"Item1\":\"\",\r\n        \"Item2\":\"Good\"\r\n    },\r\n    \"4\":{\r\n        \"Item1\":\"\",\r\n        \"Item2\":\"Good\"\r\n    }\r\n    \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/CreateGrading?studentId=2",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateGrading"
							],
							"query": [
								{
									"key": "studentId",
									"value": "2"
								}
							]
						},
						"description": "/application/CreateGrading Api call with some parameters"
					},
					"response": []
				},
				{
					"name": "/application/CreateGrading",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"-1\":{\r\n        \"Item1\":\"-1\",\r\n        \"Item2\":\"Good\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/CreateGrading?studentId=1",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateGrading"
							],
							"query": [
								{
									"key": "studentId",
									"value": "1"
								}
							]
						},
						"description": "/application/CreateGrading Api call with wrong api call type, all parameters provided"
					},
					"response": []
				},
				{
					"name": "/application/CreateGrading",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"1\":{\r\n        \"Item1\":\"10\",\r\n        \"Item2\":\"Bad\"\r\n    },\r\n    \"2\":{\r\n        \"Item1\":\"40\",\r\n        \"Item2\":\"Excellent\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/CreateGrading?studentId=3",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateGrading"
							],
							"query": [
								{
									"key": "studentId",
									"value": "3"
								},
								{
									"key": "",
									"value": null,
									"disabled": true
								}
							]
						},
						"description": "/application/CreateGrading Api call with all parameters"
					},
					"response": []
				},
				{
					"name": "/application/CreateGrading",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"\":{\r\n        \"Item1\":\"\",\r\n        \"Item2\":\"\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/CreateGrading?studentId=",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateGrading"
							],
							"query": [
								{
									"key": "studentId",
									"value": "",
									"description": "Error(s) During CreateGrading: studentId is null. (Parameter 'studentId'), rubricId is null. (Parameter 'rubricId'), mark is null. (Parameter 'mark')"
								},
								{
									"key": "rubricId",
									"value": "3",
									"disabled": true
								},
								{
									"key": "marks",
									"value": "10",
									"disabled": true
								},
								{
									"key": "",
									"value": null,
									"disabled": true
								}
							]
						},
						"description": "/application/CreateGrading Api call Api call all parameters with null values"
					},
					"response": []
				},
				{
					"name": "/application/CreateGrading",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"           \":{\r\n        \"Item1\":\"                   \",\r\n        \"Item2\":\"             \"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/CreateGrading?studentId=2",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateGrading"
							],
							"query": [
								{
									"key": "studentId",
									"value": "2"
								},
								{
									"key": "rubricId",
									"value": "3",
									"disabled": true
								},
								{
									"key": "marks",
									"value": "10",
									"disabled": true
								},
								{
									"key": "",
									"value": null,
									"disabled": true
								}
							]
						},
						"description": "/application/CreateGrading  Api call with just whitespaces for Not Null Parameters no data in it \"\""
					},
					"response": []
				},
				{
					"name": "/application/CreateGrading",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"6\":{\r\n        \"Item1\":\"             50\",\r\n        \"Item2\":\"          TestGrade\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/CreateGrading?studentId=2",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateGrading"
							],
							"query": [
								{
									"key": "studentId",
									"value": "2"
								},
								{
									"key": "rubricId",
									"value": "3",
									"disabled": true
								},
								{
									"key": "marks",
									"value": "10",
									"disabled": true
								},
								{
									"key": "",
									"value": null,
									"disabled": true
								}
							]
						},
						"description": "/application/CreateGrading Api call without trim"
					},
					"response": []
				},
				{
					"name": "/application/CreateGrading",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"6string\":{\r\n        \"Item1\":\"             50string\",\r\n        \"Item2\":\"          TestGrade\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/CreateGrading?studentId=2",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateGrading"
							],
							"query": [
								{
									"key": "studentId",
									"value": "2"
								},
								{
									"key": "rubricId",
									"value": "3",
									"disabled": true
								},
								{
									"key": "marks",
									"value": "10",
									"disabled": true
								},
								{
									"key": "",
									"value": null,
									"disabled": true
								}
							]
						},
						"description": "/application/CreateGrading Api call with invalid datatype (parsing)"
					},
					"response": []
				},
				{
					"name": "/application/CreateGrading",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"5\":{\r\n        \"Item1\":\"             50\",\r\n        \"Item2\":\"          \"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/CreateGrading?studentId=2",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateGrading"
							],
							"query": [
								{
									"key": "studentId",
									"value": "2"
								},
								{
									"key": "rubricId",
									"value": "3",
									"disabled": true
								},
								{
									"key": "marks",
									"value": "10",
									"disabled": true
								},
								{
									"key": "",
									"value": null,
									"disabled": true
								}
							]
						},
						"description": "/application/CreateGrading Api call with no param for nullable fileds"
					},
					"response": []
				},
				{
					"name": "/application/CreateGrading",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"7\":{\r\n        \"Item1\":\"             50\",\r\n        \"Item2\":\"          GOOD WORK\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/CreateGrading?studentId=2",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateGrading"
							],
							"query": [
								{
									"key": "studentId",
									"value": "2"
								},
								{
									"key": "rubricId",
									"value": "3",
									"disabled": true
								},
								{
									"key": "marks",
									"value": "10",
									"disabled": true
								},
								{
									"key": "",
									"value": null,
									"disabled": true
								}
							]
						},
						"description": "/application/CreateGrading Api call to check case insensitivity"
					},
					"response": []
				},
				{
					"name": "/application/CreateGrading",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"-7000000000000000\":{\r\n        \"Item1\":\"             5000000000000\",\r\n        \"Item2\":\"          GOOD WORK\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/CreateGrading?studentId=200000000000000000000",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateGrading"
							],
							"query": [
								{
									"key": "studentId",
									"value": "200000000000000000000"
								},
								{
									"key": "rubricId",
									"value": "3",
									"disabled": true
								},
								{
									"key": "marks",
									"value": "10",
									"disabled": true
								},
								{
									"key": "",
									"value": null,
									"disabled": true
								}
							]
						},
						"description": "/application/CreateGrading Api call with param exceeding the size"
					},
					"response": []
				},
				{
					"name": "/application/CreateGrading",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"5\":{\r\n        \"Item1\":\"             5\",\r\n        \"Item2\":\"          GOOD WORK\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/CreateGrading?studentId=1",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateGrading"
							],
							"query": [
								{
									"key": "studentId",
									"value": "1"
								},
								{
									"key": "rubricId",
									"value": "3",
									"disabled": true
								},
								{
									"key": "marks",
									"value": "10",
									"disabled": true
								},
								{
									"key": "",
									"value": null,
									"disabled": true
								}
							]
						},
						"description": "/application/CreateGrading Api call, FK constraint check\r\nAPI Create action with none existing FK refrential"
					},
					"response": []
				},
				{
					"name": "/application/CreateGrading",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"10\":{\r\n        \"Item1\":\"             5\",\r\n        \"Item2\":\"          GOOD WORK\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/CreateGrading?studentId=3",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateGrading"
							],
							"query": [
								{
									"key": "studentId",
									"value": "3"
								},
								{
									"key": "rubricId",
									"value": "3",
									"disabled": true
								},
								{
									"key": "marks",
									"value": "10",
									"disabled": true
								},
								{
									"key": "",
									"value": null,
									"disabled": true
								}
							]
						},
						"description": "/application/CreateGrading Api call, FK constraint check\r\nCreate with archived existing FK refrential"
					},
					"response": []
				},
				{
					"name": "/application/CreateGrading",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"1\":{\r\n        \"Item1\":\"             5\",\r\n        \"Item2\":\"          GOOD WORK\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/CreateGrading?studentId=2",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateGrading"
							],
							"query": [
								{
									"key": "studentId",
									"value": "2"
								},
								{
									"key": "rubricId",
									"value": "3",
									"disabled": true
								},
								{
									"key": "marks",
									"value": "10",
									"disabled": true
								},
								{
									"key": "",
									"value": null,
									"disabled": true
								}
							]
						},
						"description": "/application/CreateGrading Api call, FK constraint check\r\nCreate with archived existiApi call, duplicate check by id"
					},
					"response": []
				},
				{
					"name": "/application/CreateGrading",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"4\":{\r\n        \"Item1\":\"             5574.55\",\r\n        \"Item2\":\"          GOOD WORK\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/CreateGrading?studentId=2",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateGrading"
							],
							"query": [
								{
									"key": "studentId",
									"value": "2"
								},
								{
									"key": "rubricId",
									"value": "3",
									"disabled": true
								},
								{
									"key": "marks",
									"value": "10",
									"disabled": true
								},
								{
									"key": "",
									"value": null,
									"disabled": true
								}
							]
						},
						"description": "/application/CreateGrading Numeric values out of range  i.e., int and float datatypes"
					},
					"response": []
				},
				{
					"name": "/application/UpdateGrading",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"                  \": {\"Item1\":\"                 \",\"Item2\":\"                            \"},\r\n  \"2\":\r\n{\"Item1\":\"50                   \",\"Item2\":\"                   \"}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/UpdateGrading?studentId=2",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateGrading"
							],
							"query": [
								{
									"key": "studentId",
									"value": "2"
								}
							]
						},
						"description": "API Call with no parameters"
					},
					"response": []
				},
				{
					"name": "/application/UpdateGrading",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"\":\r\n{\"Item1\":\"20\",\"Item2\":\"InstructorComment\"},\r\n  \"\":\r\n{\"Item1\":\"50\",\"Item2\":\"InstructorComment2\"}\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/UpdateGrading?studentId=2",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateGrading"
							],
							"query": [
								{
									"key": "studentId",
									"value": "2"
								}
							]
						},
						"description": "API Call with some parameters"
					},
					"response": []
				},
				{
					"name": "/application/UpdateGrading",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"5\":\r\n{\"Item1\":\"20\",\"Item2\":\"InstructorComment\"},\r\n  \"6\":\r\n{\"Item1\":\"50\",\"Item2\":\"InstructorComment2\"}\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/UpdateGrading?studentId=2",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateGrading"
							],
							"query": [
								{
									"key": "studentId",
									"value": "2"
								}
							]
						},
						"description": "API Call with all valid parameters"
					},
					"response": []
				},
				{
					"name": "/application/UpdateGrading",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"5\":\r\n{\"Item1\":\"20\",\"Item2\":\"InstructorComment\"},\r\n  \"6\":\r\n{\"Item1\":\"50\",\"Item2\":\"InstructorComment2\"}\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/UpdateGrading?studentId=2",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateGrading"
							],
							"query": [
								{
									"key": "studentId",
									"value": "2"
								}
							]
						},
						"description": "Api call with wrong api call type, all parameters provided"
					},
					"response": []
				},
				{
					"name": "/application/UpdateGrading",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"\":\r\n{\"Item1\":\"\",\"Item2\":\"InstructorComment\"},\r\n  \"\":\r\n{\"Item1\":\"\",\"Item2\":\"InstructorComment2\"}\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/UpdateGrading?studentId=",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateGrading"
							],
							"query": [
								{
									"key": "studentId",
									"value": "",
									"description": "Error(s) During UpdateGrading: studentId is null. (Parameter 'studentId'), rubricId is null. (Parameter 'rubricId'), Grade that you are trying to Update doesn't Exists for this Rubric Id and Student Id, mark is null. (Parameter 'mark')"
								}
							]
						},
						"description": "Api call all parameters with null values"
					},
					"response": []
				},
				{
					"name": "/application/UpdateGrading",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"                 \":\r\n{\"Item1\":\"          \",\"Item2\":\"InstructorComment\"},\r\n  \"   \":\r\n{\"Item1\":\"     \",\"Item2\":\"InstructorComment2\"}\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/UpdateGrading?studentId=     ",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateGrading"
							],
							"query": [
								{
									"key": "studentId",
									"value": "     "
								}
							]
						},
						"description": "Api call with just whitespaces for Not Null Parameters no data in it \"\""
					},
					"response": []
				},
				{
					"name": "/application/UpdateGrading",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"5\":\r\n{\"Item1\":\"0\",\"Item2\":\"Not            Attempted                  \"},\r\n  \"6\":\r\n{\"Item1\":\"10\",\"Item2\":\"       Can             Improve\"}\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/UpdateGrading?studentId=2",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateGrading"
							],
							"query": [
								{
									"key": "studentId",
									"value": "2"
								}
							]
						},
						"description": "Api call without trim"
					},
					"response": []
				},
				{
					"name": "/application/UpdateGrading",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"5string\":\r\n{\"Item1\":\"$$$0\",\"Item2\":\"Not            Attempted                  \"},\r\n  \"6%%%\":\r\n{\"Item1\":\"10%%%\",\"Item2\":\"       Can             Improve\"}\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/UpdateGrading?studentId=2string",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateGrading"
							],
							"query": [
								{
									"key": "studentId",
									"value": "2string"
								}
							]
						},
						"description": "Api call with invalid datatype (parsing)"
					},
					"response": []
				},
				{
					"name": "/application/UpdateGrading",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"1\":\r\n{\"Item1\":\"1\",\"Item2\":\"testCOMmENT\"},\r\n  \"2\":\r\n{\"Item1\":\"10\",\"Item2\":\"TEST COMMENT2\"}\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/UpdateGrading?studentId=2",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateGrading"
							],
							"query": [
								{
									"key": "studentId",
									"value": "2"
								}
							]
						},
						"description": "Api call Api call with no param for nullable fileds"
					},
					"response": []
				},
				{
					"name": "/application/UpdateGrading",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"5\":\r\n{\"Item1\":\"100\",\"Item2\":\"TEST cOMMEnT              \"},\r\n  \"6\":\r\n{\"Item1\":\"50\",\"Item2\":\" tEsT comment2\"}\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/UpdateGrading?studentId=2",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateGrading"
							],
							"query": [
								{
									"key": "studentId",
									"value": "2"
								}
							]
						},
						"description": "Api call Api call to check case insensitivity"
					},
					"response": []
				},
				{
					"name": "/application/UpdateGrading",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"-5555555555\":\r\n{\"Item1\":\"100.55\",\"Item2\":\"TEST cOMMEnT              \"},\r\n  \"6\":\r\n{\"Item1\":\"50777.55\",\"Item2\":\" tEsT comment2\"}\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/UpdateGrading?studentId=200000000000000",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateGrading"
							],
							"query": [
								{
									"key": "studentId",
									"value": "200000000000000"
								}
							]
						},
						"description": "Api call with param exceeding the size"
					},
					"response": []
				},
				{
					"name": "/application/UpdateGrading",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"5\":\r\n{\"Item1\":\"100\",\"Item2\":\"TEST cOMMEnT              \"},\r\n  \"6\":\r\n{\"Item1\":\"50\",\"Item2\":\" tEsT comment2\"}\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/UpdateGrading?studentId=1",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateGrading"
							],
							"query": [
								{
									"key": "studentId",
									"value": "1"
								}
							]
						},
						"description": "Api call, FK constraint check\r\nUpdate/Get with none existing FK refrential"
					},
					"response": []
				},
				{
					"name": "/application/UpdateGrading",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"10\":\r\n{\"Item1\":\"100\",\"Item2\":\"TEST cOMMEnT              \"},\r\n  \"1\":\r\n{\"Item1\":\"50\",\"Item2\":\" tEsT comment2\"}\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/UpdateGrading?studentId=2",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateGrading"
							],
							"query": [
								{
									"key": "studentId",
									"value": "2"
								}
							]
						},
						"description": "Api call, FK constraint check\r\nUpdate with archived existing FK refrential"
					},
					"response": []
				},
				{
					"name": "/application/UpdateGrading",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"5\":\r\n{\"Item1\":\"1000.55\",\"Item2\":\"TEST cOMMEnT              \"},\r\n  \"6\":\r\n{\"Item1\":\"5055.44444\",\"Item2\":\" tEsT comment2\"}\r\n\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/UpdateGrading?studentId=2",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateGrading"
							],
							"query": [
								{
									"key": "studentId",
									"value": "2"
								}
							]
						},
						"description": "Numeric values out of range  i.e., int and float datatypes"
					},
					"response": []
				},
				{
					"name": "/application/UpdateStudentFeedback",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"1\":\" Student Okay\",\r\n    \"2\": \" Student Comment Thankyou\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/UpdateStudentFeedback?studentId=2",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateStudentFeedback"
							],
							"query": [
								{
									"key": "studentId",
									"value": "2",
									"description": "Unexpected server/database error occurred. System error message(s): Unknown database 'azlearndb'"
								}
							]
						},
						"description": "/application/UpdateStudentFeedback No DB"
					},
					"response": []
				},
				{
					"name": "/application/UpdateStudentFeedback",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"1\":\" Student Okay\",\r\n    \"2\": \" Student Comment Thankyou\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/UpdateStudentFeedback?studentId=2",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateStudentFeedback"
							],
							"query": [
								{
									"key": "studentId",
									"value": "2"
								}
							]
						},
						"description": "API Call with all parameters"
					},
					"response": []
				},
				{
					"name": "/application/UpdateStudentFeedback",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"\":\" Student Okay\",\r\n    \"\": \" Student Comment Thankyou\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/UpdateStudentFeedback?studentId=",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateStudentFeedback"
							],
							"query": [
								{
									"key": "studentId",
									"value": "",
									"description": ") During UpdateStudentFeedback: studentId is null. (Parameter 'studentId'), rubricId is null. (Parameter 'rubricId'), Grade that you are trying to Update doesn't Exists for this Rubric Id and Student Id"
								}
							]
						},
						"description": "Api call all parameters with null values"
					},
					"response": []
				},
				{
					"name": "/application/UpdateStudentFeedback",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"  \":\" Student Okay\",\r\n    \"  \": \" Student Comment Thankyou\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/UpdateStudentFeedback?studentId=   ",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateStudentFeedback"
							],
							"query": [
								{
									"key": "studentId",
									"value": "   "
								}
							]
						},
						"description": "Api call with just whitespaces for Not Null Parameters no data in it \"\""
					},
					"response": []
				},
				{
					"name": "/application/UpdateStudentFeedback",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"5 \":\"           Thanks Instructor\",\r\n    \"6  \": \" Thankyou       for the grades        \"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/UpdateStudentFeedback?studentId=2",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateStudentFeedback"
							],
							"query": [
								{
									"key": "studentId",
									"value": "2"
								}
							]
						},
						"description": "Api call without trim"
					},
					"response": []
				},
				{
					"name": "/application/UpdateStudentFeedback",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"1\":\" Student Okay\",\r\n    \"2\": \" Student Comment Thankyou\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/UpdateStudentFeedback?studentId=2",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateStudentFeedback"
							],
							"query": [
								{
									"key": "studentId",
									"value": "2"
								}
							]
						},
						"description": "Api call with wrong api call type, all parameters provided"
					},
					"response": []
				},
				{
					"name": "/application/UpdateStudentFeedback",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"\":\" Student Okay\",\r\n    \"\": \" Student Comment Thankyou\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/UpdateStudentFeedback?studentId=2",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateStudentFeedback"
							],
							"query": [
								{
									"key": "studentId",
									"value": "2"
								}
							]
						},
						"description": "API Call with some parameters"
					},
					"response": []
				},
				{
					"name": "/application/UpdateStudentFeedback",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"1\":\" ThAnKs \" ,\r\n    \"2\":\" thANKYOU FOR FEEDBACK \" \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/UpdateStudentFeedback?studentId=2",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateStudentFeedback"
							],
							"query": [
								{
									"key": "studentId",
									"value": "2"
								}
							]
						},
						"description": "Api call with no param for nullable fileds"
					},
					"response": []
				},
				{
					"name": "/application/UpdateStudentFeedback",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"1\":\"THANKYOU\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/UpdateStudentFeedback?studentId=3",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateStudentFeedback"
							],
							"query": [
								{
									"key": "studentId",
									"value": "3"
								}
							]
						},
						"description": "Api call to check case insensitivity"
					},
					"response": []
				},
				{
					"name": "/application/UpdateStudentFeedback",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/UpdateStudentFeedback",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateStudentFeedback"
							],
							"query": [
								{
									"key": "studentId",
									"value": "2",
									"disabled": true
								}
							]
						},
						"description": "API Call with no parameters"
					},
					"response": []
				},
				{
					"name": "/application/UpdateStudentFeedback",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"5string\":\" Student Okay\",\r\n    \"6string\": \" Student Comment Thankyou\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/UpdateStudentFeedback?studentId=2%%",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateStudentFeedback"
							],
							"query": [
								{
									"key": "studentId",
									"value": "2%%"
								}
							]
						},
						"description": "Api call with invalid datatype (parsing)"
					},
					"response": []
				},
				{
					"name": "/application/UpdateStudentFeedback",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"5555555555555\":\" Student Okay\",\r\n    \"65555555555555555\": \" Student Comment Thankyou\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/UpdateStudentFeedback?studentId=-22225555555",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateStudentFeedback"
							],
							"query": [
								{
									"key": "studentId",
									"value": "-22225555555"
								}
							]
						},
						"description": "Api call with param exceeding the size"
					},
					"response": []
				},
				{
					"name": "/application/UpdateStudentFeedback",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"5\":\" Student Okay\",\r\n    \"6\": \" Student Comment Thankyou\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/UpdateStudentFeedback?studentId=1",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateStudentFeedback"
							],
							"query": [
								{
									"key": "studentId",
									"value": "1"
								}
							]
						},
						"description": "pi call, FK constraint check\r\nUpdate/Get with none existing FK refrential"
					},
					"response": []
				},
				{
					"name": "/application/UpdateStudentFeedback",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"10\":\" Student Okay\",\r\n    \"25\": \" Student Comment Thankyou\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/UpdateStudentFeedback?studentId=2",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateStudentFeedback"
							],
							"query": [
								{
									"key": "studentId",
									"value": "2"
								}
							]
						},
						"description": "Api call, FK constraint check\r\nUpdate with archived existing FK refrential"
					},
					"response": []
				},
				{
					"name": "/application/UpdateStudentFeedback",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"10\":\" Student Okay\",\r\n    \"25\": \" Student Comment Thankyou\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/UpdateStudentFeedback?studentId=2",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateStudentFeedback"
							],
							"query": [
								{
									"key": "studentId",
									"value": "2"
								}
							]
						},
						"description": "Api call to update archived record"
					},
					"response": []
				},
				{
					"name": "/application/UpdateStudentFeedback",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"$$$1\":\" Student Okay\",\r\n    \"$$2\": \" Student Comment Thankyou\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/UpdateStudentFeedback?studentId=3$",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateStudentFeedback"
							],
							"query": [
								{
									"key": "studentId",
									"value": "3$"
								}
							]
						},
						"description": "Numeric values out of range  i.e., int and float datatypes"
					},
					"response": []
				},
				{
					"name": "/application/StudentGradeSummary",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/StudentGradesSummary",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"StudentGradesSummary"
							],
							"query": [
								{
									"key": "studentId",
									"value": null,
									"disabled": true
								},
								{
									"key": "homeworkId",
									"value": null,
									"disabled": true
								}
							]
						},
						"description": "/application/StudentGradeSummary Api call with no parameters"
					},
					"response": []
				},
				{
					"name": "/application/StudentGradeSummary",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/StudentGradesSummary?studentId",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"StudentGradesSummary"
							],
							"query": [
								{
									"key": "studentId",
									"value": null
								},
								{
									"key": "homeworkId",
									"value": null,
									"disabled": true
								}
							]
						},
						"description": "/application/StudentGradeSummary Api call with some parameters"
					},
					"response": []
				},
				{
					"name": "/application/StudentGradeSummary",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/StudentGradesSummary?studentId=2&homeworkId=2",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"StudentGradesSummary"
							],
							"query": [
								{
									"key": "studentId",
									"value": "2"
								},
								{
									"key": "homeworkId",
									"value": "2"
								}
							]
						},
						"description": "/application/StudentGradeSummary Api call with all parameters"
					},
					"response": [
						{
							"name": "PASS /application/StudentGradeSummary",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://localhost:44337/application/StudentGradesSummary?studentId=3&homeworkId=2",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"StudentGradesSummary"
									],
									"query": [
										{
											"key": "studentId",
											"value": "3"
										},
										{
											"key": "homeworkId",
											"value": "2"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "602"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Mon, 30 Nov 2020 04:24:54 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"rubricId\": 1,\n        \"studentId\": 3,\n        \"mark\": 10,\n        \"instructorComment\": \"Bad\",\n        \"studentComment\": \"Student okay\",\n        \"archive\": false,\n        \"rubric\": {\n            \"rubricId\": 1,\n            \"homeworkId\": 2,\n            \"isChallenge\": true,\n            \"criteria\": \"Test\",\n            \"weight\": 30,\n            \"archive\": false,\n            \"homework\": {\n                \"homeworkId\": 2,\n                \"courseId\": 2,\n                \"cohortId\": 1,\n                \"instructorId\": 1,\n                \"isAssignment\": true,\n                \"title\": \"Testupdate\",\n                \"avgCompletionTime\": 2,\n                \"dueDate\": \"2020-01-05T00:00:00\",\n                \"releaseDate\": \"2020-01-01T00:00:00\",\n                \"documentLink\": null,\n                \"gitHubClassRoomLink\": null,\n                \"archive\": false,\n                \"course\": null,\n                \"cohort\": null,\n                \"instructor\": null,\n                \"shoutOuts\": [],\n                \"timesheets\": [],\n                \"rubrics\": []\n            },\n            \"grades\": []\n        },\n        \"student\": null\n    }\n]"
						},
						{
							"name": "FAIL/application/StudentGradeSummary",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://localhost:44337/application/StudentGradesSummary?studentId=2&homeworkId=2",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"StudentGradesSummary"
									],
									"query": [
										{
											"key": "studentId",
											"value": "2"
										},
										{
											"key": "homeworkId",
											"value": "2"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "3382"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Mon, 30 Nov 2020 06:42:20 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"rubricId\": 1,\n        \"studentId\": 2,\n        \"mark\": 1,\n        \"instructorComment\": \"Testcomment\",\n        \"studentComment\": \"Thanks\",\n        \"archive\": false,\n        \"rubric\": {\n            \"rubricId\": 1,\n            \"homeworkId\": 2,\n            \"isChallenge\": true,\n            \"criteria\": \"Test\",\n            \"weight\": 30,\n            \"archive\": false,\n            \"homework\": {\n                \"homeworkId\": 2,\n                \"courseId\": 2,\n                \"cohortId\": 1,\n                \"instructorId\": 1,\n                \"isAssignment\": true,\n                \"title\": \"Testupdate\",\n                \"avgCompletionTime\": 2,\n                \"dueDate\": \"2020-01-05T00:00:00\",\n                \"releaseDate\": \"2020-01-01T00:00:00\",\n                \"documentLink\": null,\n                \"gitHubClassRoomLink\": null,\n                \"archive\": false,\n                \"course\": null,\n                \"cohort\": null,\n                \"instructor\": null,\n                \"shoutOuts\": [],\n                \"timesheets\": [],\n                \"rubrics\": [\n                    {\n                        \"rubricId\": 5,\n                        \"homeworkId\": 2,\n                        \"isChallenge\": true,\n                        \"criteria\": \"New update test\",\n                        \"weight\": 30,\n                        \"archive\": false,\n                        \"grades\": [\n                            {\n                                \"rubricId\": 5,\n                                \"studentId\": 2,\n                                \"mark\": 100,\n                                \"instructorComment\": \"Test comment\",\n                                \"studentComment\": \"Thanks instructor\",\n                                \"archive\": false,\n                                \"student\": null\n                            }\n                        ]\n                    },\n                    {\n                        \"rubricId\": 6,\n                        \"homeworkId\": 2,\n                        \"isChallenge\": false,\n                        \"criteria\": \"Feature2\",\n                        \"weight\": 50,\n                        \"archive\": false,\n                        \"grades\": [\n                            {\n                                \"rubricId\": 6,\n                                \"studentId\": 2,\n                                \"mark\": 50,\n                                \"instructorComment\": \"Test comment2\",\n                                \"studentComment\": \"Thankyou       for the grades\",\n                                \"archive\": false,\n                                \"student\": null\n                            }\n                        ]\n                    }\n                ]\n            },\n            \"grades\": []\n        },\n        \"student\": null\n    },\n    {\n        \"rubricId\": 5,\n        \"studentId\": 2,\n        \"mark\": 100,\n        \"instructorComment\": \"Test comment\",\n        \"studentComment\": \"Thanks instructor\",\n        \"archive\": false,\n        \"rubric\": {\n            \"rubricId\": 5,\n            \"homeworkId\": 2,\n            \"isChallenge\": true,\n            \"criteria\": \"New update test\",\n            \"weight\": 30,\n            \"archive\": false,\n            \"homework\": {\n                \"homeworkId\": 2,\n                \"courseId\": 2,\n                \"cohortId\": 1,\n                \"instructorId\": 1,\n                \"isAssignment\": true,\n                \"title\": \"Testupdate\",\n                \"avgCompletionTime\": 2,\n                \"dueDate\": \"2020-01-05T00:00:00\",\n                \"releaseDate\": \"2020-01-01T00:00:00\",\n                \"documentLink\": null,\n                \"gitHubClassRoomLink\": null,\n                \"archive\": false,\n                \"course\": null,\n                \"cohort\": null,\n                \"instructor\": null,\n                \"shoutOuts\": [],\n                \"timesheets\": [],\n                \"rubrics\": [\n                    {\n                        \"rubricId\": 1,\n                        \"homeworkId\": 2,\n                        \"isChallenge\": true,\n                        \"criteria\": \"Test\",\n                        \"weight\": 30,\n                        \"archive\": false,\n                        \"grades\": [\n                            {\n                                \"rubricId\": 1,\n                                \"studentId\": 2,\n                                \"mark\": 1,\n                                \"instructorComment\": \"Testcomment\",\n                                \"studentComment\": \"Thanks\",\n                                \"archive\": false,\n                                \"student\": null\n                            }\n                        ]\n                    },\n                    {\n                        \"rubricId\": 6,\n                        \"homeworkId\": 2,\n                        \"isChallenge\": false,\n                        \"criteria\": \"Feature2\",\n                        \"weight\": 50,\n                        \"archive\": false,\n                        \"grades\": [\n                            {\n                                \"rubricId\": 6,\n                                \"studentId\": 2,\n                                \"mark\": 50,\n                                \"instructorComment\": \"Test comment2\",\n                                \"studentComment\": \"Thankyou       for the grades\",\n                                \"archive\": false,\n                                \"student\": null\n                            }\n                        ]\n                    }\n                ]\n            },\n            \"grades\": []\n        },\n        \"student\": null\n    },\n    {\n        \"rubricId\": 6,\n        \"studentId\": 2,\n        \"mark\": 50,\n        \"instructorComment\": \"Test comment2\",\n        \"studentComment\": \"Thankyou       for the grades\",\n        \"archive\": false,\n        \"rubric\": {\n            \"rubricId\": 6,\n            \"homeworkId\": 2,\n            \"isChallenge\": false,\n            \"criteria\": \"Feature2\",\n            \"weight\": 50,\n            \"archive\": false,\n            \"homework\": {\n                \"homeworkId\": 2,\n                \"courseId\": 2,\n                \"cohortId\": 1,\n                \"instructorId\": 1,\n                \"isAssignment\": true,\n                \"title\": \"Testupdate\",\n                \"avgCompletionTime\": 2,\n                \"dueDate\": \"2020-01-05T00:00:00\",\n                \"releaseDate\": \"2020-01-01T00:00:00\",\n                \"documentLink\": null,\n                \"gitHubClassRoomLink\": null,\n                \"archive\": false,\n                \"course\": null,\n                \"cohort\": null,\n                \"instructor\": null,\n                \"shoutOuts\": [],\n                \"timesheets\": [],\n                \"rubrics\": [\n                    {\n                        \"rubricId\": 1,\n                        \"homeworkId\": 2,\n                        \"isChallenge\": true,\n                        \"criteria\": \"Test\",\n                        \"weight\": 30,\n                        \"archive\": false,\n                        \"grades\": [\n                            {\n                                \"rubricId\": 1,\n                                \"studentId\": 2,\n                                \"mark\": 1,\n                                \"instructorComment\": \"Testcomment\",\n                                \"studentComment\": \"Thanks\",\n                                \"archive\": false,\n                                \"student\": null\n                            }\n                        ]\n                    },\n                    {\n                        \"rubricId\": 5,\n                        \"homeworkId\": 2,\n                        \"isChallenge\": true,\n                        \"criteria\": \"New update test\",\n                        \"weight\": 30,\n                        \"archive\": false,\n                        \"grades\": [\n                            {\n                                \"rubricId\": 5,\n                                \"studentId\": 2,\n                                \"mark\": 100,\n                                \"instructorComment\": \"Test comment\",\n                                \"studentComment\": \"Thanks instructor\",\n                                \"archive\": false,\n                                \"student\": null\n                            }\n                        ]\n                    }\n                ]\n            },\n            \"grades\": []\n        },\n        \"student\": null\n    }\n]"
						}
					]
				},
				{
					"name": "/application/StudentGradeSummary",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/StudentGradesSummary?studentId=30000000000000000000000&homeworkId--=-22222222222222222222222222222",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"StudentGradesSummary"
							],
							"query": [
								{
									"key": "studentId",
									"value": "30000000000000000000000"
								},
								{
									"key": "homeworkId--",
									"value": "-22222222222222222222222222222"
								}
							]
						},
						"description": "/application/StudentGradeSummary Api call with all parameters"
					},
					"response": [
						{
							"name": "PASS /application/StudentGradeSummary",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://localhost:44337/application/StudentGradesSummary?studentId=3&homeworkId=2",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"StudentGradesSummary"
									],
									"query": [
										{
											"key": "studentId",
											"value": "3"
										},
										{
											"key": "homeworkId",
											"value": "2"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "602"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Mon, 30 Nov 2020 04:24:54 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"rubricId\": 1,\n        \"studentId\": 3,\n        \"mark\": 10,\n        \"instructorComment\": \"Bad\",\n        \"studentComment\": \"Student okay\",\n        \"archive\": false,\n        \"rubric\": {\n            \"rubricId\": 1,\n            \"homeworkId\": 2,\n            \"isChallenge\": true,\n            \"criteria\": \"Test\",\n            \"weight\": 30,\n            \"archive\": false,\n            \"homework\": {\n                \"homeworkId\": 2,\n                \"courseId\": 2,\n                \"cohortId\": 1,\n                \"instructorId\": 1,\n                \"isAssignment\": true,\n                \"title\": \"Testupdate\",\n                \"avgCompletionTime\": 2,\n                \"dueDate\": \"2020-01-05T00:00:00\",\n                \"releaseDate\": \"2020-01-01T00:00:00\",\n                \"documentLink\": null,\n                \"gitHubClassRoomLink\": null,\n                \"archive\": false,\n                \"course\": null,\n                \"cohort\": null,\n                \"instructor\": null,\n                \"shoutOuts\": [],\n                \"timesheets\": [],\n                \"rubrics\": []\n            },\n            \"grades\": []\n        },\n        \"student\": null\n    }\n]"
						}
					]
				},
				{
					"name": "/application/StudentGradeSummary",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/StudentGradesSummary?studentId=3&homeworkId=8",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"StudentGradesSummary"
							],
							"query": [
								{
									"key": "studentId",
									"value": "3"
								},
								{
									"key": "homeworkId",
									"value": "8"
								}
							]
						},
						"description": "/application/StudentGradeSummary Api call to GET all archived record"
					},
					"response": [
						{
							"name": "PASS /application/StudentGradeSummary",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://localhost:44337/application/StudentGradesSummary?studentId=3&homeworkId=2",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"StudentGradesSummary"
									],
									"query": [
										{
											"key": "studentId",
											"value": "3"
										},
										{
											"key": "homeworkId",
											"value": "2"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "602"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Mon, 30 Nov 2020 04:24:54 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"rubricId\": 1,\n        \"studentId\": 3,\n        \"mark\": 10,\n        \"instructorComment\": \"Bad\",\n        \"studentComment\": \"Student okay\",\n        \"archive\": false,\n        \"rubric\": {\n            \"rubricId\": 1,\n            \"homeworkId\": 2,\n            \"isChallenge\": true,\n            \"criteria\": \"Test\",\n            \"weight\": 30,\n            \"archive\": false,\n            \"homework\": {\n                \"homeworkId\": 2,\n                \"courseId\": 2,\n                \"cohortId\": 1,\n                \"instructorId\": 1,\n                \"isAssignment\": true,\n                \"title\": \"Testupdate\",\n                \"avgCompletionTime\": 2,\n                \"dueDate\": \"2020-01-05T00:00:00\",\n                \"releaseDate\": \"2020-01-01T00:00:00\",\n                \"documentLink\": null,\n                \"gitHubClassRoomLink\": null,\n                \"archive\": false,\n                \"course\": null,\n                \"cohort\": null,\n                \"instructor\": null,\n                \"shoutOuts\": [],\n                \"timesheets\": [],\n                \"rubrics\": []\n            },\n            \"grades\": []\n        },\n        \"student\": null\n    }\n]"
						}
					]
				},
				{
					"name": "/application/StudentGradeSummary",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/StudentGradesSummary?studentId=3&homeworkId=2",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"StudentGradesSummary"
							],
							"query": [
								{
									"key": "studentId",
									"value": "3"
								},
								{
									"key": "homeworkId",
									"value": "2"
								}
							]
						},
						"description": "/application/StudentGradeSummary Api call with wrong api call type, all parameters provided"
					},
					"response": [
						{
							"name": "PASS /application/StudentGradeSummary",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://localhost:44337/application/StudentGradesSummary?studentId=3&homeworkId=2",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"StudentGradesSummary"
									],
									"query": [
										{
											"key": "studentId",
											"value": "3"
										},
										{
											"key": "homeworkId",
											"value": "2"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "602"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Mon, 30 Nov 2020 04:24:54 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"rubricId\": 1,\n        \"studentId\": 3,\n        \"mark\": 10,\n        \"instructorComment\": \"Bad\",\n        \"studentComment\": \"Student okay\",\n        \"archive\": false,\n        \"rubric\": {\n            \"rubricId\": 1,\n            \"homeworkId\": 2,\n            \"isChallenge\": true,\n            \"criteria\": \"Test\",\n            \"weight\": 30,\n            \"archive\": false,\n            \"homework\": {\n                \"homeworkId\": 2,\n                \"courseId\": 2,\n                \"cohortId\": 1,\n                \"instructorId\": 1,\n                \"isAssignment\": true,\n                \"title\": \"Testupdate\",\n                \"avgCompletionTime\": 2,\n                \"dueDate\": \"2020-01-05T00:00:00\",\n                \"releaseDate\": \"2020-01-01T00:00:00\",\n                \"documentLink\": null,\n                \"gitHubClassRoomLink\": null,\n                \"archive\": false,\n                \"course\": null,\n                \"cohort\": null,\n                \"instructor\": null,\n                \"shoutOuts\": [],\n                \"timesheets\": [],\n                \"rubrics\": []\n            },\n            \"grades\": []\n        },\n        \"student\": null\n    }\n]"
						}
					]
				},
				{
					"name": "/application/StudentGradeSummary",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/StudentGradesSummary?studentId=&homeworkId=",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"StudentGradesSummary"
							],
							"query": [
								{
									"key": "studentId",
									"value": "",
									"description": "Error(s) During GetGrades: studentId is null. (Parameter 'studentId'), homeworkId is null. (Parameter 'homeworkId')"
								},
								{
									"key": "homeworkId",
									"value": ""
								}
							]
						},
						"description": "/application/StudentGradeSummary Api call all parameters with null values"
					},
					"response": [
						{
							"name": "PASS /application/StudentGradeSummary",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://localhost:44337/application/StudentGradesSummary?studentId=3&homeworkId=2",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"StudentGradesSummary"
									],
									"query": [
										{
											"key": "studentId",
											"value": "3"
										},
										{
											"key": "homeworkId",
											"value": "2"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "602"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Mon, 30 Nov 2020 04:24:54 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"rubricId\": 1,\n        \"studentId\": 3,\n        \"mark\": 10,\n        \"instructorComment\": \"Bad\",\n        \"studentComment\": \"Student okay\",\n        \"archive\": false,\n        \"rubric\": {\n            \"rubricId\": 1,\n            \"homeworkId\": 2,\n            \"isChallenge\": true,\n            \"criteria\": \"Test\",\n            \"weight\": 30,\n            \"archive\": false,\n            \"homework\": {\n                \"homeworkId\": 2,\n                \"courseId\": 2,\n                \"cohortId\": 1,\n                \"instructorId\": 1,\n                \"isAssignment\": true,\n                \"title\": \"Testupdate\",\n                \"avgCompletionTime\": 2,\n                \"dueDate\": \"2020-01-05T00:00:00\",\n                \"releaseDate\": \"2020-01-01T00:00:00\",\n                \"documentLink\": null,\n                \"gitHubClassRoomLink\": null,\n                \"archive\": false,\n                \"course\": null,\n                \"cohort\": null,\n                \"instructor\": null,\n                \"shoutOuts\": [],\n                \"timesheets\": [],\n                \"rubrics\": []\n            },\n            \"grades\": []\n        },\n        \"student\": null\n    }\n]"
						}
					]
				},
				{
					"name": "/application/StudentGradeSummary",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/StudentGradesSummary?studentId=          &homeworkId=        ",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"StudentGradesSummary"
							],
							"query": [
								{
									"key": "studentId",
									"value": "          "
								},
								{
									"key": "homeworkId",
									"value": "        "
								}
							]
						},
						"description": "/application/StudentGradeSummary Api call with just whitespaces for Not Null Parameters no data in it \"\""
					},
					"response": [
						{
							"name": "PASS /application/StudentGradeSummary",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://localhost:44337/application/StudentGradesSummary?studentId=3&homeworkId=2",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"StudentGradesSummary"
									],
									"query": [
										{
											"key": "studentId",
											"value": "3"
										},
										{
											"key": "homeworkId",
											"value": "2"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "602"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Mon, 30 Nov 2020 04:24:54 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"rubricId\": 1,\n        \"studentId\": 3,\n        \"mark\": 10,\n        \"instructorComment\": \"Bad\",\n        \"studentComment\": \"Student okay\",\n        \"archive\": false,\n        \"rubric\": {\n            \"rubricId\": 1,\n            \"homeworkId\": 2,\n            \"isChallenge\": true,\n            \"criteria\": \"Test\",\n            \"weight\": 30,\n            \"archive\": false,\n            \"homework\": {\n                \"homeworkId\": 2,\n                \"courseId\": 2,\n                \"cohortId\": 1,\n                \"instructorId\": 1,\n                \"isAssignment\": true,\n                \"title\": \"Testupdate\",\n                \"avgCompletionTime\": 2,\n                \"dueDate\": \"2020-01-05T00:00:00\",\n                \"releaseDate\": \"2020-01-01T00:00:00\",\n                \"documentLink\": null,\n                \"gitHubClassRoomLink\": null,\n                \"archive\": false,\n                \"course\": null,\n                \"cohort\": null,\n                \"instructor\": null,\n                \"shoutOuts\": [],\n                \"timesheets\": [],\n                \"rubrics\": []\n            },\n            \"grades\": []\n        },\n        \"student\": null\n    }\n]"
						}
					]
				},
				{
					"name": "/application/StudentGradeSummary",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/StudentGradesSummary?studentId=%236&homeworkId=%%8",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"StudentGradesSummary"
							],
							"query": [
								{
									"key": "studentId",
									"value": "#6"
								},
								{
									"key": "homeworkId",
									"value": "%%8"
								}
							]
						},
						"description": "/application/StudentGradeSummary Api call with invalid datatype (parsing)"
					},
					"response": [
						{
							"name": "PASS /application/StudentGradeSummary",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://localhost:44337/application/StudentGradesSummary?studentId=3&homeworkId=2",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"StudentGradesSummary"
									],
									"query": [
										{
											"key": "studentId",
											"value": "3"
										},
										{
											"key": "homeworkId",
											"value": "2"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "602"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Mon, 30 Nov 2020 04:24:54 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"rubricId\": 1,\n        \"studentId\": 3,\n        \"mark\": 10,\n        \"instructorComment\": \"Bad\",\n        \"studentComment\": \"Student okay\",\n        \"archive\": false,\n        \"rubric\": {\n            \"rubricId\": 1,\n            \"homeworkId\": 2,\n            \"isChallenge\": true,\n            \"criteria\": \"Test\",\n            \"weight\": 30,\n            \"archive\": false,\n            \"homework\": {\n                \"homeworkId\": 2,\n                \"courseId\": 2,\n                \"cohortId\": 1,\n                \"instructorId\": 1,\n                \"isAssignment\": true,\n                \"title\": \"Testupdate\",\n                \"avgCompletionTime\": 2,\n                \"dueDate\": \"2020-01-05T00:00:00\",\n                \"releaseDate\": \"2020-01-01T00:00:00\",\n                \"documentLink\": null,\n                \"gitHubClassRoomLink\": null,\n                \"archive\": false,\n                \"course\": null,\n                \"cohort\": null,\n                \"instructor\": null,\n                \"shoutOuts\": [],\n                \"timesheets\": [],\n                \"rubrics\": []\n            },\n            \"grades\": []\n        },\n        \"student\": null\n    }\n]"
						}
					]
				},
				{
					"name": "/application/StudentGradeSummary",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/StudentGradesSummary?studentId=236&homeworkId=8",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"StudentGradesSummary"
							],
							"query": [
								{
									"key": "studentId",
									"value": "236"
								},
								{
									"key": "homeworkId",
									"value": "8"
								}
							]
						},
						"description": "/application/StudentGradeSummary Api call, FK constraint check\r\nUpdate/Get with none existing FK refrential"
					},
					"response": [
						{
							"name": "PASS /application/StudentGradeSummary",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://localhost:44337/application/StudentGradesSummary?studentId=3&homeworkId=2",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"StudentGradesSummary"
									],
									"query": [
										{
											"key": "studentId",
											"value": "3"
										},
										{
											"key": "homeworkId",
											"value": "2"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "602"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Mon, 30 Nov 2020 04:24:54 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"rubricId\": 1,\n        \"studentId\": 3,\n        \"mark\": 10,\n        \"instructorComment\": \"Bad\",\n        \"studentComment\": \"Student okay\",\n        \"archive\": false,\n        \"rubric\": {\n            \"rubricId\": 1,\n            \"homeworkId\": 2,\n            \"isChallenge\": true,\n            \"criteria\": \"Test\",\n            \"weight\": 30,\n            \"archive\": false,\n            \"homework\": {\n                \"homeworkId\": 2,\n                \"courseId\": 2,\n                \"cohortId\": 1,\n                \"instructorId\": 1,\n                \"isAssignment\": true,\n                \"title\": \"Testupdate\",\n                \"avgCompletionTime\": 2,\n                \"dueDate\": \"2020-01-05T00:00:00\",\n                \"releaseDate\": \"2020-01-01T00:00:00\",\n                \"documentLink\": null,\n                \"gitHubClassRoomLink\": null,\n                \"archive\": false,\n                \"course\": null,\n                \"cohort\": null,\n                \"instructor\": null,\n                \"shoutOuts\": [],\n                \"timesheets\": [],\n                \"rubrics\": []\n            },\n            \"grades\": []\n        },\n        \"student\": null\n    }\n]"
						}
					]
				},
				{
					"name": "/application/InstructorGradeSummary",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/InstructorGradeSummary",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"InstructorGradeSummary"
							],
							"query": [
								{
									"key": "studentId",
									"value": null,
									"disabled": true
								}
							]
						},
						"description": "/application/InstructorGradeSummary Api call with no parameters"
					},
					"response": []
				},
				{
					"name": "/application/InstructorGradeSummary",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/InstructorGradeSummary?cohortId=1",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"InstructorGradeSummary"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "1",
									"description": "Error(s) During Retrieving Grade Summary For Instructor: homeworkId is null. (Parameter 'homeworkId')"
								}
							]
						},
						"description": "/application/InstructorGradeSummary Api call with some parameters"
					},
					"response": []
				},
				{
					"name": "/application/InstructorGradeSummary",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://localhost:5001/application/InstructorGradeSummary?cohortId=3&homeworkId=5",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"application",
								"InstructorGradeSummary"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "3"
								},
								{
									"key": "homeworkId",
									"value": "5"
								}
							]
						},
						"description": "/application/InstructorGradeSummary Api call with all parameters (With existing Cohort and homeowrk Id and have rubrics associated with it)"
					},
					"response": []
				},
				{
					"name": "/application/InstructorGradeSummary",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/InstructorGradeSummary?cohortId=155555555555555&homeworkId=2000000000000000000000",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"InstructorGradeSummary"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "155555555555555"
								},
								{
									"key": "homeworkId",
									"value": "2000000000000000000000"
								}
							]
						},
						"description": "/application/InstructorGradeSummary Numeric values out of range  i.e., int and float datatypes"
					},
					"response": []
				},
				{
					"name": "/application/InstructorGradeSummary",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/InstructorGradeSummary?cohortId=1&homeworkId=2",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"InstructorGradeSummary"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "1"
								},
								{
									"key": "homeworkId",
									"value": "2"
								}
							]
						},
						"description": "/application/InstructorGradeSummary Api call with wrong api call type, all parameters provided"
					},
					"response": []
				},
				{
					"name": "/application/InstructorGradeSummary",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/InstructorGradeSummary",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"InstructorGradeSummary"
							]
						},
						"description": "/application/InstructorGradeSummary with No seed Data"
					},
					"response": []
				},
				{
					"name": "/application/InstructorGradeSummary",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/InstructorGradeSummary?cohortId=&homeworkId=",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"InstructorGradeSummary"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "",
									"description": "Error(s) During Retrieving Grade Summary For Instructor: cohortId is null. (Parameter 'cohortId'), homeworkId is null. (Parameter 'homeworkId')"
								},
								{
									"key": "homeworkId",
									"value": ""
								}
							]
						},
						"description": "/application/InstructorGradeSummary Api call all parameters with null values"
					},
					"response": []
				},
				{
					"name": "/application/InstructorGradeSummary",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/InstructorGradeSummary?cohortId=   &homeworkId=    ",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"InstructorGradeSummary"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "   "
								},
								{
									"key": "homeworkId",
									"value": "    "
								}
							]
						},
						"description": "/application/InstructorGradeSummary Api call with just whitespaces for Not Null Parameters no data in it \"\""
					},
					"response": []
				},
				{
					"name": "/application/InstructorGradeSummary",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/InstructorGradeSummary?cohortId=string&homeworkId=%23%23%23",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"InstructorGradeSummary"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "string"
								},
								{
									"key": "homeworkId",
									"value": "###"
								}
							]
						},
						"description": "/application/InstructorGradeSummary Api call with invalid datatype (parsing)"
					},
					"response": []
				},
				{
					"name": "/application/InstructorGradeSummary",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/InstructorGradeSummary?cohortId=1&homeworkId=6",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"InstructorGradeSummary"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "1",
									"description": "Error(s) During Retrieving Grade Summary For Instructor: There is no student registered in this cohort, Homework does not exist for this cohort."
								},
								{
									"key": "homeworkId",
									"value": "6"
								}
							]
						},
						"description": "/application/InstructorGradeSummary Api call, FK constraint check\r\nUpdate/Get with none existing FK refrential (CohortID 1 doesnt have homeworkId 6 associated with it)"
					},
					"response": [
						{
							"name": "FAIL/application/InstructorGradeSummary",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44337/application/InstructorGradeSummary?cohortId=1&homeworkId=3",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"InstructorGradeSummary"
									],
									"query": [
										{
											"key": "cohortId",
											"value": "1"
										},
										{
											"key": "homeworkId",
											"value": "3"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "287"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Mon, 30 Nov 2020 19:03:39 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"totalMarks\": \" \",\n        \"marksInRequirement\": \" /70\",\n        \"marksInChallenge\": \" /70\",\n        \"totalTimeSpentOnHomework\": \"0\",\n        \"studentName\": \"student1\",\n        \"studentId\": 5\n    },\n    {\n        \"totalMarks\": \" \",\n        \"marksInRequirement\": \" /70\",\n        \"marksInChallenge\": \" /70\",\n        \"totalTimeSpentOnHomework\": \"0\",\n        \"studentName\": \"student2\",\n        \"studentId\": 6\n    }\n]"
						}
					]
				},
				{
					"name": "/application/InstructorGradeSummary",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/InstructorGradeSummary?cohortId=3&homeworkId=2",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"InstructorGradeSummary"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "3"
								},
								{
									"key": "homeworkId",
									"value": "2"
								}
							]
						},
						"description": "/application/InstructorGradeSummary Api call to GET all records with No rubrics associated with a particular Cohort and Homework"
					},
					"response": [
						{
							"name": "FAIL/application/InstructorGradeSummary",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44337/application/InstructorGradeSummary?cohortId=1&homeworkId=3",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"InstructorGradeSummary"
									],
									"query": [
										{
											"key": "cohortId",
											"value": "1"
										},
										{
											"key": "homeworkId",
											"value": "3"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "287"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Mon, 30 Nov 2020 19:03:39 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"totalMarks\": \" \",\n        \"marksInRequirement\": \" /70\",\n        \"marksInChallenge\": \" /70\",\n        \"totalTimeSpentOnHomework\": \"0\",\n        \"studentName\": \"student1\",\n        \"studentId\": 5\n    },\n    {\n        \"totalMarks\": \" \",\n        \"marksInRequirement\": \" /70\",\n        \"marksInChallenge\": \" /70\",\n        \"totalTimeSpentOnHomework\": \"0\",\n        \"studentName\": \"student2\",\n        \"studentId\": 6\n    }\n]"
						},
						{
							"name": "/application/InstructorGradeSummary",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44337/application/InstructorGradeSummary?cohortId=3&homeworkId=2",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"InstructorGradeSummary"
									],
									"query": [
										{
											"key": "cohortId",
											"value": "3"
										},
										{
											"key": "homeworkId",
											"value": "2"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "165"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Tue, 01 Dec 2020 05:40:30 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"totalMarks\": \" \",\n        \"marksInRequirement\": \" \",\n        \"marksInChallenge\": \" \",\n        \"totalTimeSpentOnHomework\": \" \",\n        \"studentName\": \"No rubrics found for this homework \",\n        \"studentId\": 0\n    }\n]"
						}
					]
				}
			],
			"description": "GradeController EndPoints Testing\r\n/application/CreateGrading\r\n/application/UpdateGrading\r\n/application/UpdateStudentFeedback\r\n/application/StudentGradesSummary\r\n/application/InstructorGradeSummary\r\n",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "34258ebb-875d-421b-841a-828a4ccf2074",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "401ef973-52f5-447d-a236-ab788f8984e9",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "TimesheetController",
			"item": [
				{
					"name": "/application/CreateTimesheet",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateTimesheet",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateTimesheet"
							]
						},
						"description": "/application/CreateTimesheet with No seed Data"
					},
					"response": []
				},
				{
					"name": "/application/CreateTimesheet",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateTimesheet",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateTimesheet"
							]
						},
						"description": "/application/CreateTimesheet with No parameters"
					},
					"response": []
				},
				{
					"name": "/application/CreateTimesheet",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateTimesheet?homeworkId=1&studentId=2&solvingTime=2",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateTimesheet"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "1"
								},
								{
									"key": "studentId",
									"value": "2"
								},
								{
									"key": "solvingTime",
									"value": "2"
								}
							]
						},
						"description": "/application/CreateTimesheet with valid parameters"
					},
					"response": []
				},
				{
					"name": "/application/UpdateTimesheet",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateTimesheet?studentId=2&solvingTime=5&timesheetId=1",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateTimesheet"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "1",
									"disabled": true
								},
								{
									"key": "studentId",
									"value": "2"
								},
								{
									"key": "solvingTime",
									"value": "5"
								},
								{
									"key": "timesheetId",
									"value": "1"
								}
							]
						},
						"description": "/application/UpdateTimesheet with valid parameters"
					},
					"response": []
				},
				{
					"name": "/application/UpdateTimesheet",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateTimesheet?studentId=2&solvingTime=5&timesheetId=1",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateTimesheet"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "1",
									"disabled": true
								},
								{
									"key": "studentId",
									"value": "2"
								},
								{
									"key": "solvingTime",
									"value": "5"
								},
								{
									"key": "timesheetId",
									"value": "1"
								}
							]
						},
						"description": "/application/UpdateTimesheetApi call with wrong api call type, all parameters provided"
					},
					"response": []
				},
				{
					"name": "/application/UpdateTimesheet",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateTimesheet?studentId=2&solvingTime=2",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateTimesheet"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "1",
									"disabled": true
								},
								{
									"key": "studentId",
									"value": "2"
								},
								{
									"key": "solvingTime",
									"value": "2"
								}
							]
						},
						"description": "/application/UpdateTimesheet with some parameters"
					},
					"response": []
				},
				{
					"name": "/application/UpdateTimesheet",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateTimesheet",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateTimesheet"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "1",
									"disabled": true
								},
								{
									"key": "studentId",
									"value": "2",
									"disabled": true
								},
								{
									"key": "solvingTime",
									"value": "2",
									"disabled": true
								},
								{
									"key": "timesheetId",
									"value": "2",
									"disabled": true
								}
							]
						},
						"description": "/application/UpdateTimesheet with no parameters"
					},
					"response": []
				},
				{
					"name": "/application/CreateTimesheet",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateTimesheet?homeworkId=&studentId=&solvingTime=",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateTimesheet"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "",
									"description": "Error(s) During CreateTimesheet: homeworkId is null. (Parameter 'homeworkId'), studentId is null. (Parameter 'studentId'), solvingTime is null. (Parameter 'solvingTime')"
								},
								{
									"key": "studentId",
									"value": ""
								},
								{
									"key": "solvingTime",
									"value": ""
								}
							]
						},
						"description": "/application/CreateTimesheet Api call all parameters with null values"
					},
					"response": []
				},
				{
					"name": "/application/UpdateTimesheet",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateTimesheet?solvingTime=&timesheetId",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateTimesheet"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "",
									"description": "Error(s) During UpdateTimesheetById: timesheetId is null. (Parameter 'timesheetId'), solvingTime is null. (Parameter 'solvingTime')",
									"disabled": true
								},
								{
									"key": "studentId",
									"value": "",
									"disabled": true
								},
								{
									"key": "solvingTime",
									"value": ""
								},
								{
									"key": "timesheetId",
									"value": null
								}
							]
						},
						"description": "/application/UpdateTimesheet Api call all parameters with null values"
					},
					"response": []
				},
				{
					"name": "/application/UpdateTimesheet",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateTimesheet?solvingTime=                 &timesheetId=                        ",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateTimesheet"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "",
									"disabled": true
								},
								{
									"key": "studentId",
									"value": "",
									"disabled": true
								},
								{
									"key": "solvingTime",
									"value": "                 "
								},
								{
									"key": "timesheetId",
									"value": "                        "
								}
							]
						},
						"description": "/application/UpdateTimesheet Api call with just whitespaces for Not Null Parameters no data in it \"\""
					},
					"response": []
				},
				{
					"name": "/application/UpdateTimesheet",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateTimesheet?solvingTime=                 55&timesheetId=                        3",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateTimesheet"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "",
									"disabled": true
								},
								{
									"key": "studentId",
									"value": "",
									"disabled": true
								},
								{
									"key": "solvingTime",
									"value": "                 55"
								},
								{
									"key": "timesheetId",
									"value": "                        3"
								}
							]
						},
						"description": "/application/UpdateTimesheet Api call with just whitespaces for Not Null Parameters no data in it \"\""
					},
					"response": []
				},
				{
					"name": "/application/UpdateTimesheet",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateTimesheet?solvingTime=                 55$$$$$&timesheetId=                        3&studyTime=55%%%",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateTimesheet"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "",
									"disabled": true
								},
								{
									"key": "studentId",
									"value": "",
									"disabled": true
								},
								{
									"key": "solvingTime",
									"value": "                 55$$$$$"
								},
								{
									"key": "timesheetId",
									"value": "                        3"
								},
								{
									"key": "studyTime",
									"value": "55%%%"
								}
							]
						},
						"description": "/application/UpdateTimesheet Api call with invalid datatype (parsing)"
					},
					"response": []
				},
				{
					"name": "/application/UpdateTimesheet",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateTimesheet?solvingTime=                 50.82&timesheetId=                        3&studyTime=",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateTimesheet"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "",
									"disabled": true
								},
								{
									"key": "studentId",
									"value": "",
									"disabled": true
								},
								{
									"key": "solvingTime",
									"value": "                 50.82"
								},
								{
									"key": "timesheetId",
									"value": "                        3"
								},
								{
									"key": "studyTime",
									"value": ""
								}
							]
						},
						"description": "/application/UpdateTimesheet Api call with no param for nullable fileds"
					},
					"response": []
				},
				{
					"name": "/application/UpdateTimesheet",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateTimesheet?solvingTime=                 50.82&timesheetId=                        1&studyTime=",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateTimesheet"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "",
									"disabled": true
								},
								{
									"key": "studentId",
									"value": "",
									"disabled": true
								},
								{
									"key": "solvingTime",
									"value": "                 50.82"
								},
								{
									"key": "timesheetId",
									"value": "                        1"
								},
								{
									"key": "studyTime",
									"value": ""
								}
							]
						},
						"description": "/application/UpdateTimesheetApi call, FK constraint check\r\nUpdate with archived record"
					},
					"response": []
				},
				{
					"name": "/application/UpdateTimesheet",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateTimesheet?solvingTime=                 50444444.82&timesheetId=                        2&studyTime=888888888888",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateTimesheet"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "",
									"disabled": true
								},
								{
									"key": "studentId",
									"value": "",
									"disabled": true
								},
								{
									"key": "solvingTime",
									"value": "                 50444444.82"
								},
								{
									"key": "timesheetId",
									"value": "                        2"
								},
								{
									"key": "studyTime",
									"value": "888888888888"
								}
							]
						},
						"description": "/application/UpdateTimesheet Numeric values out of range  i.e., int and float datatypes"
					},
					"response": []
				},
				{
					"name": "/application/UpdateTimesheet",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/UpdateTimesheet?solvingTime=                 544444444444444440.82555555555555&timesheetId=                        3&studyTime=54888888888888888888888888.862145236666",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateTimesheet"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "",
									"disabled": true
								},
								{
									"key": "studentId",
									"value": "",
									"disabled": true
								},
								{
									"key": "solvingTime",
									"value": "                 544444444444444440.82555555555555"
								},
								{
									"key": "timesheetId",
									"value": "                        3"
								},
								{
									"key": "studyTime",
									"value": "54888888888888888888888888.862145236666"
								}
							]
						},
						"description": "/application/UpdateTimesheet Api call with param exceeding the size"
					},
					"response": []
				},
				{
					"name": "/application/CreateTimesheet",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateTimesheet?homeworkId=1",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateTimesheet"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "1"
								},
								{
									"key": "studentId",
									"value": "2",
									"disabled": true
								},
								{
									"key": "solvingTime",
									"value": "2",
									"disabled": true
								}
							]
						},
						"description": "/application/CreateTimesheet with some parameters"
					},
					"response": []
				},
				{
					"name": "/application/CreateTimesheet",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateTimesheet?homeworkId=    &studentId=       &solvingTime=    ",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateTimesheet"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "    "
								},
								{
									"key": "studentId",
									"value": "       "
								},
								{
									"key": "solvingTime",
									"value": "    "
								}
							]
						},
						"description": "/application/CreateTimesheet Api call with just whitespaces for Not Null Parameters no data in it \"\""
					},
					"response": []
				},
				{
					"name": "/application/CreateTimesheet",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateTimesheet?homeworkId=    3&studentId=       2&solvingTime=    10",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateTimesheet"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "    3"
								},
								{
									"key": "studentId",
									"value": "       2"
								},
								{
									"key": "solvingTime",
									"value": "    10"
								}
							]
						},
						"description": "/application/CreateTimesheet Api call without trim"
					},
					"response": []
				},
				{
					"name": "/application/CreateTimesheet",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateTimesheet?homeworkId=    3string&studentId=       2hmjm&solvingTime=    10555555555%23$$$$",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateTimesheet"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "    3string"
								},
								{
									"key": "studentId",
									"value": "       2hmjm"
								},
								{
									"key": "solvingTime",
									"value": "    10555555555#$$$$"
								}
							]
						},
						"description": "/application/CreateTimesheet Api call with invalid datatype (parsing)"
					},
					"response": []
				},
				{
					"name": "/application/CreateTimesheet",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateTimesheet?homeworkId=    4&studentId=       2&solvingTime=    10555555555%23$$$$",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateTimesheet"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "    4"
								},
								{
									"key": "studentId",
									"value": "       2"
								},
								{
									"key": "solvingTime",
									"value": "    10555555555%23$$$$"
								}
							]
						},
						"description": "/application/CreateTimesheet Api call with param exceeding the size"
					},
					"response": []
				},
				{
					"name": "/application/CreateTimesheet",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateTimesheet?homeworkId=    4&studentId=       2&solvingTime=    10.5&studyTime",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateTimesheet"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "    4"
								},
								{
									"key": "studentId",
									"value": "       2"
								},
								{
									"key": "solvingTime",
									"value": "    10.5"
								},
								{
									"key": "studyTime",
									"value": null
								}
							]
						},
						"description": "/application/CreateTimesheet Api call with no param for nullable fileds"
					},
					"response": []
				},
				{
					"name": "/application/CreateTimesheet",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateTimesheet?homeworkId=    4&studentId=       2&solvingTime=    10.5&studyTime",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateTimesheet"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "    4"
								},
								{
									"key": "studentId",
									"value": "       2"
								},
								{
									"key": "solvingTime",
									"value": "    10.5"
								},
								{
									"key": "studyTime",
									"value": null
								}
							]
						},
						"description": "/application/CreateTimesheet Api call, FK constraint check\r\nAPI Create action with none existing FK refrential"
					},
					"response": []
				},
				{
					"name": "/application/CreateTimesheet",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateTimesheet?homeworkId=    45555555555555555555&studentId=       299999999999999999999&solvingTime=    10.5555555555555555555&studyTime",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateTimesheet"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "    45555555555555555555"
								},
								{
									"key": "studentId",
									"value": "       299999999999999999999"
								},
								{
									"key": "solvingTime",
									"value": "    10.5555555555555555555"
								},
								{
									"key": "studyTime",
									"value": null
								}
							]
						},
						"description": "/application/CreateTimesheet Numeric values out of range  i.e., int and float datatypes"
					},
					"response": []
				},
				{
					"name": "/application/CreateTimesheet",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateTimesheet?homeworkId=    4&studentId=       2&solvingTime=    10.5&studyTime",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateTimesheet"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "    4"
								},
								{
									"key": "studentId",
									"value": "       2"
								},
								{
									"key": "solvingTime",
									"value": "    10.5"
								},
								{
									"key": "studyTime",
									"value": null
								}
							]
						},
						"description": "/application/CreateTimesheet Api call, FK constraint check\r\nAPI Create action with none existing FK refrential"
					},
					"response": []
				},
				{
					"name": "/application/CreateTimesheet",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateTimesheet?homeworkId=8&studentId=       2&solvingTime=    10.5&studyTime",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateTimesheet"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "8"
								},
								{
									"key": "studentId",
									"value": "       2"
								},
								{
									"key": "solvingTime",
									"value": "    10.5"
								},
								{
									"key": "studyTime",
									"value": null
								}
							]
						},
						"description": "/application/CreateTimesheet Api call, FK constraint check\r\nCreate with archived existing FK refrential"
					},
					"response": []
				},
				{
					"name": "/application/CreateTimesheet",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateTimesheet?homeworkId=1&studentId=       2&solvingTime=    10.5&studyTime",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateTimesheet"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "1"
								},
								{
									"key": "studentId",
									"value": "       2"
								},
								{
									"key": "solvingTime",
									"value": "    10.5"
								},
								{
									"key": "studyTime",
									"value": null
								}
							]
						},
						"description": "/application/CreateTimesheet \r\nApi call, duplicate check by id"
					},
					"response": []
				},
				{
					"name": "/application/CreateTimesheet",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateTimesheet",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateTimesheet"
							]
						},
						"description": "/application/CreateTimesheet Api call with wrong api call type, all parameters provided"
					},
					"response": []
				}
			],
			"description": "TimesheetController EndPoints Testing\r\n/application/CreateTimesheet\r\n/application/UpdateTimesheet\r\n",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "4fe49763-180d-4f6c-82c3-e85f9c7d73dc",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "0d6dc153-0d8e-4f71-8be8-8299e87f627b",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "RubricController",
			"item": [
				{
					"name": "/application/UpdateRubrics",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"1\":{\r\n    \"Item1\":\"true\",\r\n    \"Item2\":\"teST FOR Update\",\r\n    \"Item3\":\"25\"\r\n}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/UpdateRubrics?homeworkId=2",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateRubrics"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "2",
									"description": "Unexpected server/database error occurred. System error message(s): Unknown database 'azlearndb'"
								}
							]
						},
						"description": "API Call with no DB"
					},
					"response": []
				},
				{
					"name": "/application/CreateRubrics",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\"Item1\":\"true\",\r\n    \"Item2\":\"Feature\",\r\n    \"Item3\":\"10\"\r\n    },\r\n    {\"Item1\":\"false\",\r\n    \"Item2\":\"Feature2\",\r\n    \"Item3\":\"50\"\r\n    },\r\n     {\"Item1\":\"true\",\r\n    \"Item2\":\"Feature3\",\r\n    \"Item3\":\"30\"\r\n    },\r\n     {\"Item1\":\"false\",\r\n    \"Item2\":\"Feature4\",\r\n    \"Item3\":\"10\"\r\n    },\r\n     {\"Item1\":\"true\",\r\n    \"Item2\":\"Feature5\",\r\n    \"Item3\":\"20\"\r\n    }\r\n\r\n    \r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/CreateRubrics?homeworkId=3",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateRubrics"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "3",
									"description": "Unexpected server/database error occurred. System error message(s): Unknown database 'azlearndb'"
								}
							]
						},
						"description": "/application/CreateRubric NO DB"
					},
					"response": []
				},
				{
					"name": "/application/CreateRubrics",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n    }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/CreateRubrics",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateRubrics"
							]
						},
						"description": "/application/CreateRubric no Seed Data"
					},
					"response": []
				},
				{
					"name": "/application/CreateRubrics",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[{}]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/CreateRubrics",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateRubrics"
							]
						},
						"description": "/application/CreateRubrics no paramters"
					},
					"response": [
						{
							"name": "FAIL /application/CreateRubric [deserialize the current JSON object]",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://localhost:44337/application/CreateRubrics",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"CreateRubrics"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "840"
								},
								{
									"key": "Content-Type",
									"value": "application/problem+json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 29 Nov 2020 19:57:23 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"errors\": {\n        \"\": [\n            \"Cannot deserialize the current JSON object (e.g. {\\\"name\\\":\\\"value\\\"}) into type 'System.Collections.Generic.List`1[System.Tuple`3[System.String,System.String,System.String]]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.\\r\\nTo fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.\\r\\nPath '', line 1, position 2.\"\n        ]\n    },\n    \"type\": \"https://tools.ietf.org/html/rfc7231#section-6.5.1\",\n    \"title\": \"One or more validation errors occurred.\",\n    \"status\": 400,\n    \"traceId\": \"|49fc6f3e-4e8867a47cf79958.\"\n}"
						}
					]
				},
				{
					"name": "/application/UpdateRubrics",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/UpdateRubrics",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateRubrics"
							]
						},
						"description": "/application/UpdateRubrics no paramters"
					},
					"response": [
						{
							"name": "FAIL /application/CreateRubric [deserialize the current JSON object]",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://localhost:44337/application/CreateRubrics",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44337",
									"path": [
										"application",
										"CreateRubrics"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "840"
								},
								{
									"key": "Content-Type",
									"value": "application/problem+json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 29 Nov 2020 19:57:23 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"errors\": {\n        \"\": [\n            \"Cannot deserialize the current JSON object (e.g. {\\\"name\\\":\\\"value\\\"}) into type 'System.Collections.Generic.List`1[System.Tuple`3[System.String,System.String,System.String]]' because the type requires a JSON array (e.g. [1,2,3]) to deserialize correctly.\\r\\nTo fix this error either change the JSON to a JSON array (e.g. [1,2,3]) or change the deserialized type so that it is a normal .NET type (e.g. not a primitive type like integer, not a collection type like an array or List<T>) that can be deserialized from a JSON object. JsonObjectAttribute can also be added to the type to force it to deserialize from a JSON object.\\r\\nPath '', line 1, position 2.\"\n        ]\n    },\n    \"type\": \"https://tools.ietf.org/html/rfc7231#section-6.5.1\",\n    \"title\": \"One or more validation errors occurred.\",\n    \"status\": 400,\n    \"traceId\": \"|49fc6f3e-4e8867a47cf79958.\"\n}"
						}
					]
				},
				{
					"name": "/application/CreateRubrics",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    \r\n    \r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/CreateRubrics?homeworkId=2",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateRubrics"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "2"
								}
							]
						},
						"description": "/application/CreateRubric some paramters"
					},
					"response": []
				},
				{
					"name": "/application/UpdateRubrics",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"1\":{\r\n    \"Item1\":\"true\",\r\n    \"Item2\":\"\",\r\n    \"Item3\":\"\"\r\n}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/UpdateRubrics?homeworkId=2",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateRubrics"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "2"
								}
							]
						},
						"description": "/application/CreateRubric some paramters"
					},
					"response": []
				},
				{
					"name": "/application/UpdateRubrics",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"1\":{\r\n    \"Item1\":\"true\",\r\n    \"Item2\":\"teST FOR Update\",\r\n    \"Item3\":\"25\"\r\n}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/UpdateRubrics?homeworkId=2",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateRubrics"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "2"
								},
								{
									"key": "rubricId",
									"value": null,
									"disabled": true
								}
							]
						},
						"description": "/application/UpdateRubric all valid paramters"
					},
					"response": []
				},
				{
					"name": "/application/UpdateRubrics",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"1\":{\r\n    \"Item1\":\"true\",\r\n    \"Item2\":\"teST FOR Update\",\r\n    \"Item3\":\"25\"\r\n}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/UpdateRubrics?homeworkId=2",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateRubrics"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "2"
								}
							]
						},
						"description": "/application/CreateRubric Api call with wrong api call type, all parameters provided"
					},
					"response": []
				},
				{
					"name": "/application/UpdateRubrics",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"\":{\r\n    \"Item1\":\"true\",\r\n    \"Item2\":\"\",\r\n    \"Item3\":\"\"\r\n}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/UpdateRubrics?homeworkId=",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateRubrics"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "",
									"description": "Error(s) During UpdateRubric: rubricId is null. (Parameter 'rubricId'), Criteria is null, weight is null. (Parameter 'weight')"
								},
								{
									"key": "rubricId",
									"value": null,
									"disabled": true
								}
							]
						},
						"description": "/application/UpdateRubric Api call all parameters with null values"
					},
					"response": []
				},
				{
					"name": "/application/UpdateRubrics",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"   1            \":{\r\n    \"Item1\":\"true\",\r\n    \"Item2\":\"  test  \",\r\n    \"Item3\":\"   30                            \"\r\n}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/UpdateRubrics",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateRubrics"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "                       ",
									"disabled": true
								},
								{
									"key": "rubricId",
									"value": null,
									"disabled": true
								}
							]
						},
						"description": "/application/UpdateeRubrics Api call with just whitespaces for Not Null Parameters no data in it \"\""
					},
					"response": []
				},
				{
					"name": "/application/UpdateRubrics",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"       5        \":{\r\n    \"Item1\":\"true\",\r\n    \"Item2\":\"          xyztest1      \",\r\n    \"Item3\":\" 30                              \"\r\n}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/UpdateRubrics",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateRubrics"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "                       ",
									"disabled": true
								},
								{
									"key": "rubricId",
									"value": null,
									"disabled": true
								}
							]
						},
						"description": "/application/UpdateeRubrics Api call without trim"
					},
					"response": []
				},
				{
					"name": "/application/UpdateRubrics",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"       5        \":{\r\n    \"Item1\":\"true111\",\r\n    \"Item2\":\"          xyztest1      \",\r\n    \"Item3\":\" 30 string                             \"\r\n}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/UpdateRubrics",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateRubrics"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "                       ",
									"disabled": true
								},
								{
									"key": "rubricId",
									"value": null,
									"disabled": true
								}
							]
						},
						"description": "/application/UpdateeRubrics Api call with invalid datatype (parsing)"
					},
					"response": []
				},
				{
					"name": "/application/UpdateRubrics",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"       5        \":{\r\n    \"Item1\":\"           \",\r\n    \"Item2\":\"          Updatetest     \",\r\n    \"Item3\":\" 30                             \"\r\n}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/UpdateRubrics",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateRubrics"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "                       ",
									"disabled": true
								},
								{
									"key": "rubricId",
									"value": null,
									"disabled": true
								}
							]
						},
						"description": "/application/UpdateeRubrics Api call with no param for nullable fileds"
					},
					"response": []
				},
				{
					"name": "/application/UpdateRubrics",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\"       5        \":{\r\n    \"Item1\":\" true          \",\r\n    \"Item2\":\"NEW UpDAte TeST     \",\r\n    \"Item3\":\" 30                             \"\r\n}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/UpdateRubrics",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateRubrics"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "                       ",
									"disabled": true
								},
								{
									"key": "rubricId",
									"value": null,
									"disabled": true
								}
							]
						},
						"description": "/application/UpdateeRubrics Api call to check case insensitivity"
					},
					"response": []
				},
				{
					"name": "/application/UpdateRubrics",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\" 500000\":{\r\n    \"Item1\":\" true          \",\r\n    \"Item2\":\"NEW UpDAte TeST     \",\r\n    \"Item3\":\" 30                           \"\r\n}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/UpdateRubrics",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateRubrics"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "                       ",
									"disabled": true
								},
								{
									"key": "rubricId",
									"value": null,
									"disabled": true
								}
							]
						},
						"description": "/application/UpdateeRubrics Api call with param exceeding the size"
					},
					"response": []
				},
				{
					"name": "/application/UpdateRubrics",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\" 10\":{\r\n    \"Item1\":\" true          \",\r\n    \"Item2\":\"NEW UpDAte TeST     \",\r\n    \"Item3\":\" 30                           \"\r\n}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/UpdateRubrics",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateRubrics"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "                       ",
									"disabled": true
								},
								{
									"key": "rubricId",
									"value": null,
									"disabled": true
								}
							]
						},
						"description": "/application/UpdateeRubrics Api call to update archived record"
					},
					"response": []
				},
				{
					"name": "/application/UpdateRubrics",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\" 1\":{\r\n    \"Item1\":\" true 123         \",\r\n    \"Item2\":\"test    \",\r\n    \"Item3\":\" 30000000000000                          \"\r\n}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/UpdateRubrics?homeworkId=                       2",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"UpdateRubrics"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "                       2"
								},
								{
									"key": "rubricId",
									"value": null,
									"disabled": true
								}
							]
						},
						"description": "/application/UpdateeRubrics Numeric values out of range  i.e., int and float datatypes"
					},
					"response": []
				},
				{
					"name": "/application/CreateRubrics",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\"Item1\":\"true\",\r\n    \"Item2\":\"Feature\",\r\n    \"Item3\":\"10\"\r\n    },\r\n    {\"Item1\":\"false\",\r\n    \"Item2\":\"Feature2\",\r\n    \"Item3\":\"50\"\r\n    },\r\n     {\"Item1\":\"true\",\r\n    \"Item2\":\"Feature3\",\r\n    \"Item3\":\"30\"\r\n    },\r\n     {\"Item1\":\"false\",\r\n    \"Item2\":\"Feature4\",\r\n    \"Item3\":\"10\"\r\n    },\r\n     {\"Item1\":\"true\",\r\n    \"Item2\":\"Feature5\",\r\n    \"Item3\":\"20\"\r\n    }\r\n\r\n    \r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/CreateRubrics?homeworkId=3",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateRubrics"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "3"
								}
							]
						},
						"description": "/application/CreateRubric all vaid parameters"
					},
					"response": []
				},
				{
					"name": "/application/CreateRubrics",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\"Item1\":\"                   true\",\r\n    \"Item2\":\"                        Feature\",\r\n    \"Item3\":\"                         10\"\r\n    },\r\n    {\"Item1\":\"                        false\",\r\n    \"Item2\":\"Feature2                          \",\r\n    \"Item3\":\"               50\"\r\n    },\r\n     {\"Item1\":\"true\",\r\n    \"Item2\":\"Feature3\",\r\n    \"Item3\":\"30\"\r\n    },\r\n     {\"Item1\":\"false\",\r\n    \"Item2\":\"Feature4\",\r\n    \"Item3\":\"10\"\r\n    },\r\n     {\"Item1\":\"true\",\r\n    \"Item2\":\"Feature5\",\r\n    \"Item3\":\"20\"\r\n    }\r\n\r\n    \r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/CreateRubrics?homeworkId=4",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateRubrics"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "4"
								}
							]
						},
						"description": "/application/CreateRubric Api call without trim"
					},
					"response": []
				},
				{
					"name": "/application/CreateRubrics",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\"Item1\":\"true\",\r\n    \"Item2\":\"Feature\",\r\n    \"Item3\":\"10string\"\r\n    },\r\n    {\"Item1\":\"false\",\r\n    \"Item2\":\"Feature2\",\r\n    \"Item3\":\"50%%%%%\"\r\n    },\r\n     {\"Item1\":\"true\",\r\n    \"Item2\":\"Feature3\",\r\n    \"Item3\":\"30\"\r\n    },\r\n     {\"Item1\":\"false\",\r\n    \"Item2\":\"Feature4\",\r\n    \"Item3\":\"10\"\r\n    },\r\n     {\"Item1\":\"true\",\r\n    \"Item2\":\"Feature5\",\r\n    \"Item3\":\"20\"\r\n    }\r\n\r\n    \r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/CreateRubrics?homeworkId=3",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateRubrics"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "3"
								}
							]
						},
						"description": "/application/CreateRubric Api call with invalid datatype (parsing"
					},
					"response": []
				},
				{
					"name": "/application/CreateRubrics",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\"Item1\":\"\",\r\n    \"Item2\":\"Feature\",\r\n    \"Item3\":\"10\"\r\n    },\r\n    {\"Item1\":\"\",\r\n    \"Item2\":\"Feature2\",\r\n    \"Item3\":\"50\"\r\n    }\r\n    \r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/CreateRubrics?homeworkId=5",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateRubrics"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "5"
								}
							]
						},
						"description": "/application/CreateRubric Api call with no param for nullable fileds"
					},
					"response": []
				},
				{
					"name": "/application/CreateRubrics",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\"Item1\":\"\",\r\n    \"Item2\":\"\",\r\n    \"Item3\":\"\"\r\n    },\r\n    {\"Item1\":\"\",\r\n    \"Item2\":\"\",\r\n    \"Item3\":\"\"\r\n    },\r\n     {\"Item1\":\"true\",\r\n    \"Item2\":\"Feature3\",\r\n    \"Item3\":\"30\"\r\n    },\r\n     {\"Item1\":\"false\",\r\n    \"Item2\":\"Feature4\",\r\n    \"Item3\":\"10\"\r\n    },\r\n     {\"Item1\":\"true\",\r\n    \"Item2\":\"Feature5\",\r\n    \"Item3\":\"20\"\r\n    }\r\n\r\n    \r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/CreateRubrics?homeworkId=3",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateRubrics"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "3"
								}
							]
						},
						"description": "/application/CreateRubric Api call all parameters with null values"
					},
					"response": []
				},
				{
					"name": "/application/CreateRubrics",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\"Item1\":\"false\",\r\n    \"Item2\":\"                                     \",\r\n    \"Item3\":\"                                                                  \"\r\n    },\r\n    {\"Item1\":\"true\",\r\n    \"Item2\":\"                                  \",\r\n    \"Item3\":\"                                                    \"\r\n    },\r\n     {\"Item1\":\"true\",\r\n    \"Item2\":\"Feature3\",\r\n    \"Item3\":\"30\"\r\n    },\r\n     {\"Item1\":\"false\",\r\n    \"Item2\":\"Feature4\",\r\n    \"Item3\":\"10\"\r\n    },\r\n     {\"Item1\":\"true\",\r\n    \"Item2\":\"Feature5\",\r\n    \"Item3\":\"20\"\r\n    }\r\n\r\n    \r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/CreateRubrics?homeworkId=3",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateRubrics"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "3"
								}
							]
						},
						"description": "/application/CreateRubric Api call with just whitespaces for Not Null Parameters no data in it \"\""
					},
					"response": []
				},
				{
					"name": "/application/CreateRubrics",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\"Item1\":\"false\",\r\n    \"Item2\":\" STYLE LAYOUT USING BOOTSRAP                                    \",\r\n    \"Item3\":\"    10                                                              \"\r\n    },\r\n    {\"Item1\":\"true\",\r\n    \"Item2\":\"IMPLEMENT TERNARY OPERATOR                                  \",\r\n    \"Item3\":\" 10                                                   \"\r\n    }\r\n\r\n    \r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/CreateRubrics?homeworkId=3",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateRubrics"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "3"
								}
							]
						},
						"description": "/application/CreateRubric Api call to check case insensitivity"
					},
					"response": []
				},
				{
					"name": "/application/CreateRubrics",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n     {\"Item1\":\"true\",\r\n    \"Item2\":\"Feature3\",\r\n    \"Item3\":\"30\"\r\n    },\r\n     {\"Item1\":\"false\",\r\n    \"Item2\":\"Feature4\",\r\n    \"Item3\":\"10\"\r\n    },\r\n     {\"Item1\":\"true\",\r\n    \"Item2\":\"Feature5\",\r\n    \"Item3\":\"20\"\r\n    }\r\n\r\n    \r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/CreateRubrics?homeworkId=50",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateRubrics"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "50"
								}
							]
						},
						"description": "/application/CreateRubric pi call, FK constraint check\r\nAPI Create action with none existing FK refrential"
					},
					"response": []
				},
				{
					"name": "/application/CreateRubrics",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n     {\"Item1\":\"true\",\r\n    \"Item2\":\"Feature3\",\r\n    \"Item3\":\"30\"\r\n    },\r\n     {\"Item1\":\"false\",\r\n    \"Item2\":\"Feature4\",\r\n    \"Item3\":\"10\"\r\n    },\r\n     {\"Item1\":\"true\",\r\n    \"Item2\":\"Feature5\",\r\n    \"Item3\":\"20\"\r\n    }\r\n\r\n    \r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/CreateRubrics?homeworkId=17",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateRubrics"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "17"
								}
							]
						},
						"description": "/application/CreateRubric Api call, FK constraint check\r\nCreate with archived existing FK refrential"
					},
					"response": []
				},
				{
					"name": "/application/CreateRubrics",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n     {\"Item1\":\"true\",\r\n    \"Item2\":\"Feature3\",\r\n    \"Item3\":\"30\"\r\n    },\r\n     {\"Item1\":\"false\",\r\n    \"Item2\":\"Feature4\",\r\n    \"Item3\":\"10\"\r\n    },\r\n     {\"Item1\":\"true\",\r\n    \"Item2\":\"Feature5\",\r\n    \"Item3\":\"20\"\r\n    }\r\n\r\n    \r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/CreateRubrics?homeworkId=1",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateRubrics"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "1"
								}
							]
						},
						"description": "/application/CreateRubric Api call, duplicate check by id"
					},
					"response": []
				},
				{
					"name": "/application/CreateRubrics",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n     {\"Item1\":\"true\",\r\n    \"Item2\":\"Feature3\",\r\n    \"Item3\":\"30\"\r\n    },\r\n     {\"Item1\":\"false\",\r\n    \"Item2\":\"Feature4\",\r\n    \"Item3\":\"10\"\r\n    },\r\n     {\"Item1\":\"true\",\r\n    \"Item2\":\"Feature5\",\r\n    \"Item3\":\"20\"\r\n    }\r\n\r\n    \r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/CreateRubrics?homeworkId=2",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateRubrics"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "2"
								}
							]
						},
						"description": "/application/CreateRubric Api call, duplicate check by criteria and marks"
					},
					"response": []
				},
				{
					"name": "/application/CreateRubrics",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n     {\"Item1\":\"true\",\r\n    \"Item2\":\"Feature3\",\r\n    \"Item3\":\"3000\"\r\n    },\r\n     {\"Item1\":\"false\",\r\n    \"Item2\":\"Feature4\",\r\n    \"Item3\":\"10000.55\"\r\n    },\r\n     {\"Item1\":\"true\",\r\n    \"Item2\":\"Feature5\",\r\n    \"Item3\":\"20\"\r\n    }\r\n\r\n    \r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/CreateRubrics?homeworkId=2",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateRubrics"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "2"
								}
							]
						},
						"description": "/application/CreateRubric Numeric values out of range  i.e., int and float datatypes"
					},
					"response": []
				},
				{
					"name": "/application/CreateRubrics",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n     {\"Item1\":\"true\",\r\n    \"Item2\":\"Feature3\",\r\n    \"Item3\":\"300000000000000\"\r\n    },\r\n     {\"Item1\":\"false\",\r\n    \"Item2\":\"Feature4\",\r\n    \"Item3\":\"10000.55\"\r\n    },\r\n     {\"Item1\":\"true\",\r\n    \"Item2\":\"Feature5\",\r\n    \"Item3\":\"20\"\r\n    }\r\n\r\n    \r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/CreateRubrics?homeworkId=200000000000000000000000",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateRubrics"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "200000000000000000000000"
								}
							]
						},
						"description": "/application/CreateRubric Numeric values out of range  i.e., int and float datatypes"
					},
					"response": []
				},
				{
					"name": "/application/CreateRubrics",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\"Item1\":\"true\",\r\n    \"Item2\":\"Feature\",\r\n    \"Item3\":\"10\"\r\n    },\r\n    {\"Item1\":\"false\",\r\n    \"Item2\":\"Feature2\",\r\n    \"Item3\":\"50\"\r\n    },\r\n     {\"Item1\":\"true\",\r\n    \"Item2\":\"Feature3\",\r\n    \"Item3\":\"30\"\r\n    },\r\n     {\"Item1\":\"false\",\r\n    \"Item2\":\"Feature4\",\r\n    \"Item3\":\"10\"\r\n    },\r\n     {\"Item1\":\"true\",\r\n    \"Item2\":\"Feature5\",\r\n    \"Item3\":\"20\"\r\n    }\r\n\r\n    \r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44337/application/CreateRubrics?homeworkId=3",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateRubrics"
							],
							"query": [
								{
									"key": "homeworkId",
									"value": "3"
								}
							]
						},
						"description": "/application/CreateRubric wrong API call"
					},
					"response": []
				}
			],
			"description": "RubricController EndPoints Testing\r\n/application/CreateRubric\r\n/application/UpdateRubric\r\n",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "7e4e78d2-5294-406f-b8d5-d23d9418f807",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "8ac83cf9-2559-49cd-a55c-b064b7de3806",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "UserController",
			"item": [
				{
					"name": "/application/GetInstructors",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/GetInstructors",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"GetInstructors"
							]
						},
						"description": "API Call with no DB\r\n"
					},
					"response": []
				},
				{
					"name": "/application/GetInstructors",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/GetInstructors",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"GetInstructors"
							]
						},
						"description": "/application/GetInstructors with No Seed Data"
					},
					"response": []
				},
				{
					"name": "/application/GetInstructors",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/GetInstructors",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"GetInstructors"
							]
						},
						"description": "/application/GetInstructors Api call to GET all archived record"
					},
					"response": []
				},
				{
					"name": "/application/UserLogin",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/User",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"User"
							]
						},
						"description": "/application/UserLogin with Api call with wrong api call type, all parameters provided"
					},
					"response": []
				},
				{
					"name": "/application/CreateUser",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateUser",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateUser"
							]
						},
						"description": "/application/CreateUser Api call with no parameter"
					},
					"response": []
				},
				{
					"name": "/application/CreateUser",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateUser?cohortId=5&name=Bob",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateUser"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "5"
								},
								{
									"key": "name",
									"value": "Bob"
								}
							]
						},
						"description": "/application/CreateUser Api call with some parameter"
					},
					"response": []
				},
				{
					"name": "/application/CreateUser",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateUser?cohortId=1&name=testName&passwordHash=abcdef&email=testName@gmail.com&isInstructor=false",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateUser"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "1"
								},
								{
									"key": "name",
									"value": "testName"
								},
								{
									"key": "passwordHash",
									"value": "abcdef"
								},
								{
									"key": "email",
									"value": "testName@gmail.com"
								},
								{
									"key": "isInstructor",
									"value": "false"
								}
							]
						},
						"description": "/application/CreateUser Api call with all valid parameters"
					},
					"response": []
				},
				{
					"name": "/application/CreateUser",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateUser?cohortId=&name=&passwordHash=&email=&isInstructor=",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateUser"
							],
							"query": [
								{
									"key": "cohortId",
									"value": ""
								},
								{
									"key": "name",
									"value": ""
								},
								{
									"key": "passwordHash",
									"value": ""
								},
								{
									"key": "email",
									"value": ""
								},
								{
									"key": "isInstructor",
									"value": ""
								}
							]
						},
						"description": "/application/CreateUser Api call all parameters with null values"
					},
					"response": []
				},
				{
					"name": "/application/CreateUser",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateUser?cohortId=   &name=  &passwordHash=    &email=    &isInstructor=",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateUser"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "   "
								},
								{
									"key": "name",
									"value": "  "
								},
								{
									"key": "passwordHash",
									"value": "    "
								},
								{
									"key": "email",
									"value": "    "
								},
								{
									"key": "isInstructor",
									"value": ""
								}
							]
						},
						"description": "/application/CreateUser Api call with just whitespaces for Not Null Parameters no data in it \"\""
					},
					"response": []
				},
				{
					"name": "/application/CreateUser",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateUser?cohortId=1&name=            John Cen&passwordHash=         abc123 &email=          johncen@azlearn.com    &isInstructor=",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateUser"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "1"
								},
								{
									"key": "name",
									"value": "            John Cen"
								},
								{
									"key": "passwordHash",
									"value": "         abc123 "
								},
								{
									"key": "email",
									"value": "          johncen@azlearn.com    "
								},
								{
									"key": "isInstructor",
									"value": ""
								}
							]
						},
						"description": "/application/CreateUser Api call without trim"
					},
					"response": []
				},
				{
					"name": "/application/CreateUser",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateUser?cohortId=1string&name=            John Cen&passwordHash=         abc123 &email=          johncen@azlearn.com   &isInstructor=string123",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateUser"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "1string"
								},
								{
									"key": "name",
									"value": "            John Cen"
								},
								{
									"key": "passwordHash",
									"value": "         abc123 "
								},
								{
									"key": "email",
									"value": "          johncen@azlearn.com   "
								},
								{
									"key": "isInstructor",
									"value": "string123"
								}
							]
						},
						"description": "/application/CreateUser Api call with invalid datatype (parsing)"
					},
					"response": []
				},
				{
					"name": "/application/CreateUser",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateUser?cohortId=1&name=Alice&passwordHash=abc123 &email=alice@azlearn.com   &isInstructor=",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateUser"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "1"
								},
								{
									"key": "name",
									"value": "Alice"
								},
								{
									"key": "passwordHash",
									"value": "abc123 "
								},
								{
									"key": "email",
									"value": "alice@azlearn.com   "
								},
								{
									"key": "isInstructor",
									"value": ""
								}
							]
						},
						"description": "/application/CreateUser Api call with no param for nullable fileds"
					},
					"response": []
				},
				{
					"name": "/application/CreateUser",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateUser?cohortId=1&name=aisHWARYA&passwordHash=abc123&email=AISHWARYA@azlearn.com   &isInstructor=false",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateUser"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "1"
								},
								{
									"key": "name",
									"value": "aisHWARYA"
								},
								{
									"key": "passwordHash",
									"value": "abc123"
								},
								{
									"key": "email",
									"value": "AISHWARYA@azlearn.com   "
								},
								{
									"key": "isInstructor",
									"value": "false"
								}
							]
						},
						"description": "/application/CreateUser Api call to check case insensitivity"
					},
					"response": []
				},
				{
					"name": "/application/CreateUser",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateUser?cohortId=1&name=Anna BoSE&passwordHash=abc123&email=anna123@gm.ca&isInstructor=false",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateUser"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "1"
								},
								{
									"key": "name",
									"value": "Anna BoSE"
								},
								{
									"key": "passwordHash",
									"value": "abc123"
								},
								{
									"key": "email",
									"value": "anna123@gm.ca"
								},
								{
									"key": "isInstructor",
									"value": "false"
								}
							]
						},
						"description": "/application/CreateUser Api call to check invalid email format"
					},
					"response": []
				},
				{
					"name": "/application/CreateUser",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateUser?cohortId=10&name=Anna BoSE&passwordHash=abc123&email=anna123@gm.ca&isInstructor=false",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateUser"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "10"
								},
								{
									"key": "name",
									"value": "Anna BoSE"
								},
								{
									"key": "passwordHash",
									"value": "abc123"
								},
								{
									"key": "email",
									"value": "anna123@gm.ca"
								},
								{
									"key": "isInstructor",
									"value": "false"
								}
							]
						},
						"description": "/application/CreateUser Api call to check invalid email format"
					},
					"response": []
				},
				{
					"name": "/application/CreateUser",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateUser?cohortId=1&name=Anna Doe&passwordHash=abc123&email=anna.doe@azlearn.ca&isInstructor=false",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateUser"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "1"
								},
								{
									"key": "name",
									"value": "Anna Doe"
								},
								{
									"key": "passwordHash",
									"value": "abc123"
								},
								{
									"key": "email",
									"value": "anna.doe@azlearn.ca"
								},
								{
									"key": "isInstructor",
									"value": "false"
								}
							]
						},
						"description": "/application/CreateUser Api call to check valid email format"
					},
					"response": []
				},
				{
					"name": "/application/CreateUser",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateUser?cohortId=1&name=JohnDoe&passwordHash=abcdE@123456&email=john.doe@azlearn.ca&isInstructor=false",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateUser"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "1"
								},
								{
									"key": "name",
									"value": "JohnDoe"
								},
								{
									"key": "passwordHash",
									"value": "abcdE@123456"
								},
								{
									"key": "email",
									"value": "john.doe@azlearn.ca"
								},
								{
									"key": "isInstructor",
									"value": "false"
								}
							]
						},
						"description": "/application/CreateUser Api call to check valid Password format"
					},
					"response": []
				},
				{
					"name": "/application/CreateUser",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateUser?cohortId=10&name=JohnDoe&passwordHash=abcdE@123456&email=john.doe@azlearn.ca&isInstructor=false",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateUser"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "10"
								},
								{
									"key": "name",
									"value": "JohnDoe"
								},
								{
									"key": "passwordHash",
									"value": "abcdE@123456"
								},
								{
									"key": "email",
									"value": "john.doe@azlearn.ca"
								},
								{
									"key": "isInstructor",
									"value": "false"
								}
							]
						},
						"description": "/application/CreateUser Api call, FK constraint check\r\nAPI Create action with none existing FK refrential"
					},
					"response": []
				},
				{
					"name": "/application/CreateUser",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateUser?cohortId=3&name=JSean&passwordHash=abcdE@123456&email=john.sean@azlearn.ca&isInstructor=false",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateUser"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "3"
								},
								{
									"key": "name",
									"value": "JSean"
								},
								{
									"key": "passwordHash",
									"value": "abcdE@123456"
								},
								{
									"key": "email",
									"value": "john.sean@azlearn.ca"
								},
								{
									"key": "isInstructor",
									"value": "false"
								}
							]
						},
						"description": "/application/CreateUser Api call, FK constraint check\r\nAPI Create action with archive existing FK refrential"
					},
					"response": []
				},
				{
					"name": "/application/CreateUser",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateUser?cohortId=2&name=JohnDoe&passwordHash=abcdE@123456&email=john.doe@azlearn.ca&isInstructor=false",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateUser"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "2"
								},
								{
									"key": "name",
									"value": "JohnDoe"
								},
								{
									"key": "passwordHash",
									"value": "abcdE@123456"
								},
								{
									"key": "email",
									"value": "john.doe@azlearn.ca"
								},
								{
									"key": "isInstructor",
									"value": "false"
								}
							]
						},
						"description": "/application/CreateUser Duplicate check by name, criteria, email"
					},
					"response": []
				},
				{
					"name": "/application/CreateUser",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateUser?cohortId=1&name=JohnDoe&passwordHash=abcdE@123456&email=john.doe@azlearn.ca&isInstructor=false",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateUser"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "1"
								},
								{
									"key": "name",
									"value": "JohnDoe"
								},
								{
									"key": "passwordHash",
									"value": "abcdE@123456"
								},
								{
									"key": "email",
									"value": "john.doe@azlearn.ca"
								},
								{
									"key": "isInstructor",
									"value": "false"
								}
							]
						},
						"description": "/application/CreateUser Duplicate check by id"
					},
					"response": []
				},
				{
					"name": "/application/CreateUser",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateUser?cohortId=20000000000000000&name=CathyJone&passwordHash=abcdE@123456&email=john.cathy@azlearn.ca&isInstructor=000",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateUser"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "20000000000000000"
								},
								{
									"key": "name",
									"value": "CathyJone"
								},
								{
									"key": "passwordHash",
									"value": "abcdE@123456"
								},
								{
									"key": "email",
									"value": "john.cathy@azlearn.ca"
								},
								{
									"key": "isInstructor",
									"value": "000"
								}
							]
						},
						"description": "/application/CreateUser Numeric values out of range  i.e., int and float datatypes"
					},
					"response": []
				},
				{
					"name": "/application/CreateUser",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateUser?cohortId=1&name=DaveRoss&passwordHash=abcd$@123456&email=dave.ross@azlearn.ca&isInstructor=false",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateUser"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "1"
								},
								{
									"key": "name",
									"value": "DaveRoss"
								},
								{
									"key": "passwordHash",
									"value": "abcd$@123456"
								},
								{
									"key": "email",
									"value": "dave.ross@azlearn.ca"
								},
								{
									"key": "isInstructor",
									"value": "false"
								}
							]
						},
						"description": "/application/CreateUser Api call to check invalid Password format"
					},
					"response": []
				},
				{
					"name": "/application/CreateUser",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateUser?cohortId=1&name=Anna BoSEAnna BoSEAnna BoSEAnna BoSEAnna BoSEAnna BoSEAnna BoSEAnna BoSE&passwordHash=abc123&email=anna123@gm.caanna123@gm.caanna123@gm.caanna123@gm.caanna123@gm.caanna123@gm.caanna123@gm.caanna123@gm.ca&isInstructor=false",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateUser"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "1"
								},
								{
									"key": "name",
									"value": "Anna BoSEAnna BoSEAnna BoSEAnna BoSEAnna BoSEAnna BoSEAnna BoSEAnna BoSE"
								},
								{
									"key": "passwordHash",
									"value": "abc123"
								},
								{
									"key": "email",
									"value": "anna123@gm.caanna123@gm.caanna123@gm.caanna123@gm.caanna123@gm.caanna123@gm.caanna123@gm.caanna123@gm.ca"
								},
								{
									"key": "isInstructor",
									"value": "false"
								}
							]
						},
						"description": "/application/CreateUser Api call with param exceeding the size"
					},
					"response": []
				},
				{
					"name": "/application/CreateUser",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/CreateUser?cohortId=1&name=ABC&passwordHash=TechCareer@1&email=ABC@GMAIL.COM&isInstructor=false",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"CreateUser"
							],
							"query": [
								{
									"key": "cohortId",
									"value": "1"
								},
								{
									"key": "name",
									"value": "ABC"
								},
								{
									"key": "passwordHash",
									"value": "TechCareer@1"
								},
								{
									"key": "email",
									"value": "ABC@GMAIL.COM"
								},
								{
									"key": "isInstructor",
									"value": "false"
								}
							]
						},
						"description": "/application/CreateUser Api call with email casing check"
					},
					"response": []
				},
				{
					"name": "/application/Login",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/Login",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"Login"
							]
						},
						"description": "/application/UserLogin Api call with wrong API call parameter"
					},
					"response": []
				},
				{
					"name": "/application/Login",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/Login",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"Login"
							]
						},
						"description": "/application/GetUserOnLogin Api call with no parameters"
					},
					"response": []
				},
				{
					"name": "/application/Login",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/Login?email=bo.cen@azlearn.ca&passwordHash=abc.123",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"Login"
							],
							"query": [
								{
									"key": "email",
									"value": "bo.cen@azlearn.ca"
								},
								{
									"key": "passwordHash",
									"value": "abc.123"
								}
							]
						},
						"description": "/application/GetUserOnLogin Api call with all vaid parameters"
					},
					"response": []
				},
				{
					"name": "/application/Login",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/Login?email=&passwordHash=",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"Login"
							],
							"query": [
								{
									"key": "email",
									"value": ""
								},
								{
									"key": "passwordHash",
									"value": ""
								}
							]
						},
						"description": "/application/GetUserOnLogin Api call with null parameters"
					},
					"response": []
				},
				{
					"name": "/application/Login",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/Login?email=           &passwordHash=       ",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"Login"
							],
							"query": [
								{
									"key": "email",
									"value": "           "
								},
								{
									"key": "passwordHash",
									"value": "       "
								}
							]
						},
						"description": "/application/Login Api call with just whitespaces for Not Null Parameters no data in it \"\""
					},
					"response": []
				},
				{
					"name": "/application/Login",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/Login?email=BO.CEN@AZLEARN.ca&passwordHash=",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"Login"
							],
							"query": [
								{
									"key": "email",
									"value": "BO.CEN@AZLEARN.ca"
								},
								{
									"key": "passwordHash",
									"value": ""
								}
							]
						},
						"description": "/application/Login Api call to check case insensitivity"
					},
					"response": []
				},
				{
					"name": "/application/Login",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/Login?email=BO.CEN123&passwordHash=",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"Login"
							],
							"query": [
								{
									"key": "email",
									"value": "BO.CEN123"
								},
								{
									"key": "passwordHash",
									"value": ""
								}
							]
						},
						"description": "/application/Login Api call with invalid email format"
					},
					"response": []
				},
				{
					"name": "/application/Login",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/Login?email=bo.cen@azlearn.ca&passwordHash=",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"Login"
							],
							"query": [
								{
									"key": "email",
									"value": "bo.cen@azlearn.ca"
								},
								{
									"key": "passwordHash",
									"value": ""
								}
							]
						},
						"description": "/application/Login Api call with valid email format"
					},
					"response": []
				},
				{
					"name": "/application/Login",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44337/application/Login?email=bo.cen@azlearn.ca&passwordHash=",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44337",
							"path": [
								"application",
								"Login"
							],
							"query": [
								{
									"key": "email",
									"value": "bo.cen@azlearn.ca"
								},
								{
									"key": "passwordHash",
									"value": ""
								}
							]
						},
						"description": "/application/Login Api call to GET all archived record"
					},
					"response": []
				}
			],
			"description": "UserController EndPoints Testing\r\n/application/GetInstructors\r\n",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "d2391e50-5432-44f5-b982-376c68ed6101",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "ee18d091-8fda-4b9b-95cb-12fb921a556b",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}